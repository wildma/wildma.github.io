<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一个非常好用的 Android 图片选择框架</title>
      <link href="/picture-selector/"/>
      <url>/picture-selector/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>几乎每个APP都需要图片选择和裁剪功能，因为涉及到相机和存储，所以该功能还是要考虑很多兼容性的。这也是github上有一大堆图片选择框架的原因，但是你会发现github上找的图片选择框架并不是简单的只有图片选择， 它还包含视频选择、视频录制、图片压缩等等一大堆功能。其实你只需要一个头像选择的功能，那些框架很多功能你根本用不到，而且代码至少也几十个类，后期有问题改起来也是麻烦事。所以我就封装了一个代码及其简洁的图片选择框架，没有任何多余的功能，涉及的主要功能类只有3个，使用也是非常简单。<br>效果图如下：<img src="1.jpg" alt="效果图.jpg"></p><h2 id="一、功能特点"><a href="#一、功能特点" class="headerlink" title="一、功能特点"></a>一、功能特点</h2><ul><li>支持通过拍照获取图片</li><li>支持通过相册获取图片</li><li>支持图片裁剪</li><li>支持仿IOS底部弹出选择菜单ActionSheet效果</li><li>支持6.0动态授予权限</li><li>解决图片有黑边问题</li><li>解决7.0调用相机报FileUriExposedException的问题</li><li>解决小米miui系统调用系统裁剪图片功能crash问题</li><li>解决华为设备裁剪框为圆形的问题</li></ul><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><p>（1）Step 1. 添加JitPack仓库<br>在项目的build.gradle添加JitPack仓库</p><pre class="line-numbers language-java"><code class="language-java">allprojects <span class="token punctuation">{</span>    repositories <span class="token punctuation">{</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        maven <span class="token punctuation">{</span> url <span class="token string">"https://jitpack.io"</span> <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）Step 2. 添加依赖<br>在需要使用的module中添加依赖（最新版本见 <a href="https://github.com/wildma/PictureSelector" target="_blank" rel="noopener">PictureSelector</a>）</p><pre class="line-numbers language-java"><code class="language-java">dependencies <span class="token punctuation">{</span>    compile <span class="token string">'com.github.wildma:PictureSelector:1.1.3'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者引用本地lib</p><pre class="line-numbers language-java"><code class="language-java">compile <span class="token function">project</span><span class="token punctuation">(</span><span class="token string">':pictureselector'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）Step 3. 拍照或者从相册选择图片</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token comment" spellcheck="true">/**         * create()方法参数一是上下文，在activity中传activity.this，在fragment中传fragment.this。参数二为请求码，用于结果回调onActivityResult中判断         * selectPicture()方法参数分别为 是否裁剪、裁剪后图片的宽(单位px)、裁剪后图片的高、宽比例、高比例。都不传则默认为裁剪，宽200，高200，宽高比例为1：1。         */</span>        PictureSelector                <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> PictureSelector<span class="token punctuation">.</span>SELECT_REQUEST_CODE<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">selectPicture</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）Step 4. 获取图片地址进行显示</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> Intent data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*结果回调*/</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>requestCode <span class="token operator">==</span> PictureSelector<span class="token punctuation">.</span>SELECT_REQUEST_CODE<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                String picturePath <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span>PictureSelector<span class="token punctuation">.</span>PICTURE_PATH<span class="token punctuation">)</span><span class="token punctuation">;</span>                mIvImage<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeFile</span><span class="token punctuation">(</span>picturePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/*如果使用 Glide 加载图片，则需要禁止 Glide 从缓存中加载，因为裁剪后保存的图片地址是相同的*/</span>                <span class="token comment" spellcheck="true">/*RequestOptions requestOptions = RequestOptions                        .circleCropTransform()                        .diskCacheStrategy(DiskCacheStrategy.NONE)                        .skipMemoryCache(true);                Glide.with(this).load(picturePath).apply(requestOptions).into(mIvImage);*/</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h2><p>每个类的注释我都写的很清楚了，所以这里只贴出主要的图片工具类，其他可以到我的Github上查看源码（见文末）。<br>选择图片工具类：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wildma<span class="token punctuation">.</span>pictureselector<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Activity<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Intent<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Bitmap<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>BitmapFactory<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Uri<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Build<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>MediaStore<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v4<span class="token punctuation">.</span>content<span class="token punctuation">.</span>FileProvider<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileNotFoundException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Author       wildma * Github       https://github.com/wildma * CreateDate   2018/6/10 * Desc            ${选择图片工具类} * 使用方法： * 1. 调用getByCamera()、getByAlbum()可通过拍照或相册获取图片 * 2. 在onActivityResult中调用本工具类的onActivityResult方法处理通过相册或拍照获取的图片 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PictureSelectUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> GET_BY_ALBUM  <span class="token operator">=</span> <span class="token number">0x11</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//相册标记</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> GET_BY_CAMERA <span class="token operator">=</span> <span class="token number">0x12</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//拍照标记</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CROP          <span class="token operator">=</span> <span class="token number">0x13</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//裁剪标记</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Uri takePictureUri<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//拍照图片uri</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Uri cropPictureTempUri<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//裁剪图片uri</span>    <span class="token comment" spellcheck="true">/**     * 通过相册获取图片     * @param activity     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getByAlbum</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>ACTION_PICK<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>EXTERNAL_CONTENT_URI<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token string">"image/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        activity<span class="token punctuation">.</span><span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> GET_BY_ALBUM<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 通过拍照获取图片     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> activity     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getByCamera</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>        takePictureUri <span class="token operator">=</span> <span class="token function">createImagePathUri</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>takePictureUri <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Intent i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>MediaStore<span class="token punctuation">.</span>ACTION_IMAGE_CAPTURE<span class="token punctuation">)</span><span class="token punctuation">;</span>            i<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span>MediaStore<span class="token punctuation">.</span>EXTRA_OUTPUT<span class="token punctuation">,</span> takePictureUri<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出路径（拍照后的保存路径）</span>            activity<span class="token punctuation">.</span><span class="token function">startActivityForResult</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> GET_BY_CAMERA<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> <span class="token string">"无法保存到相册"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 创建一个图片地址uri,用于保存拍照后的照片     *     * @param activity     * @return          图片的uri     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Uri <span class="token function">createImagePathUri</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            FileUtils<span class="token punctuation">.</span><span class="token function">createOrExistsDir</span><span class="token punctuation">(</span>Constant<span class="token punctuation">.</span>DIR_ROOT<span class="token punctuation">)</span><span class="token punctuation">;</span>            StringBuffer buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String pathName <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Constant<span class="token punctuation">.</span>DIR_ROOT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Constant<span class="token punctuation">.</span>APP_NAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">".jpg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>pathName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT <span class="token operator">>=</span> Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>N<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//解决Android 7.0 拍照出现FileUriExposedException的问题</span>                String authority <span class="token operator">=</span> activity<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".fileProvider"</span><span class="token punctuation">;</span>                takePictureUri <span class="token operator">=</span> FileProvider<span class="token punctuation">.</span><span class="token function">getUriForFile</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> authority<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                takePictureUri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">fromFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> <span class="token string">"无法保存到相册"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> takePictureUri<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理拍照或相册获取的图片，默认大小480*480，比例1:1     * @param activity      上下文     * @param requestCode   请求码     * @param resultCode    结果码     * @param data          Intent     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Bitmap <span class="token function">onActivityResult</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> Intent data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理拍照或相册获取的图片     * @param activity      上下文     * @param requestCode   请求码     * @param resultCode    结果码     * @param data          Intent     * @param w             输出宽     * @param h             输出高     * @param aspectX       宽比例     * @param aspectY       高比例     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Bitmap <span class="token function">onActivityResult</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> Intent data<span class="token punctuation">,</span>                                          <span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token keyword">int</span> aspectX<span class="token punctuation">,</span> <span class="token keyword">int</span> aspectY<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Bitmap bm <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>resultCode <span class="token operator">==</span> Activity<span class="token punctuation">.</span>RESULT_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Uri uri <span class="token operator">=</span> null<span class="token punctuation">;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> GET_BY_ALBUM<span class="token operator">:</span>                    uri <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    activity<span class="token punctuation">.</span><span class="token function">startActivityForResult</span><span class="token punctuation">(</span><span class="token function">crop</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> aspectX<span class="token punctuation">,</span> aspectY<span class="token punctuation">)</span><span class="token punctuation">,</span> CROP<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> GET_BY_CAMERA<span class="token operator">:</span>                    uri <span class="token operator">=</span> takePictureUri<span class="token punctuation">;</span>                    activity<span class="token punctuation">.</span><span class="token function">startActivityForResult</span><span class="token punctuation">(</span><span class="token function">crop</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> aspectX<span class="token punctuation">,</span> aspectY<span class="token punctuation">)</span><span class="token punctuation">,</span> CROP<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> CROP<span class="token operator">:</span>                    bm <span class="token operator">=</span> <span class="token function">dealCrop</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> bm<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 裁剪,默认裁剪输出480*480，比例1:1     * @param uri   图片的uri     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Intent <span class="token function">crop</span><span class="token punctuation">(</span>Uri uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">crop</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 裁剪，例如：输出100*100大小的图片，宽高比例是1:1     * @param uri     图片的uri     * @param w       输出宽     * @param h       输出高     * @param aspectX 宽比例     * @param aspectY 高比例     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Intent <span class="token function">crop</span><span class="token punctuation">(</span>Uri uri<span class="token punctuation">,</span> <span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token keyword">int</span> aspectX<span class="token punctuation">,</span> <span class="token keyword">int</span> aspectY<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> h <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            w <span class="token operator">=</span> h <span class="token operator">=</span> <span class="token number">480</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>aspectX <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> aspectY <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            aspectX <span class="token operator">=</span> aspectY <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.android.camera.action.CROP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">setDataAndType</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token string">"image/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"crop"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"aspectX"</span><span class="token punctuation">,</span> aspectX<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"aspectY"</span><span class="token punctuation">,</span> aspectY<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"outputX"</span><span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"outputY"</span><span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">/</span><span class="token operator">*</span>解决图片有黑边问题<span class="token operator">*</span><span class="token operator">/</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"scale"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"scaleUpIfNeeded"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*解决跳转到裁剪提示“图片加载失败”问题*/</span>        intent<span class="token punctuation">.</span><span class="token function">addFlags</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>FLAG_GRANT_READ_URI_PERMISSION<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">addFlags</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>FLAG_GRANT_WRITE_URI_PERMISSION<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*解决小米miui系统调用系统裁剪图片功能camera.action.CROP后崩溃或重新打开app的问题*/</span>        StringBuffer buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String pathName <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"file:///"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>FileUtils<span class="token punctuation">.</span><span class="token function">getRootPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>File<span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Constant<span class="token punctuation">.</span>APP_NAME<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">".temp.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cropPictureTempUri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>pathName<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span>MediaStore<span class="token punctuation">.</span>EXTRA_OUTPUT<span class="token punctuation">,</span> cropPictureTempUri<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出路径(裁剪后的保存路径)</span>        <span class="token comment" spellcheck="true">// 输出格式</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"outputFormat"</span><span class="token punctuation">,</span> <span class="token string">"JPEG"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 不启用人脸识别</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"noFaceDetection"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//是否将数据保留在Bitmap中返回</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"return-data"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> intent<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理裁剪，获取裁剪后的图片     * @param context   上下文     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Bitmap <span class="token function">dealCrop</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Bitmap bitmap <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            bitmap <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeStream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openInputStream</span><span class="token punctuation">(</span>cropPictureTempUri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> bitmap<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>github地址：<a href="https://github.com/wildma/PictureSelector" target="_blank" rel="noopener">PictureSelector</a><br>ps：如果对你有帮助，点下 star 就是对我最大的认可。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 开源库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片选择 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详细讲解 Android Studio 中使用 Git——结合 GitLab</title>
      <link href="/git/"/>
      <url>/git/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文已授权微信公众号《鸿洋》原创首发，转载请注明出处。</p></blockquote><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>以前项目版本管理工具一直用的都是SVN，现在换成Git，并且项目托管平台使用的是GitLab。虽然经常用GitHub，但是却很少使用到分支，因为都是自己在写，也不用开发版与发布版、打Tag那些，所以这篇文章主要讲下GitLab与Git的使用。这篇文章还是会按我以前的写作风格，写的通俗易懂，并且全程自己操作一遍，目的是为了初学者也能看懂。</p><h2 id="二、简介"><a href="#二、简介" class="headerlink" title="二、简介"></a>二、简介</h2><ul><li>Git：Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。简单说，它就是一个管理项目版本的工具。</li><li>GitLab：GitLab 是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务。简单说，GitLab的性质是和GitHub一样的，都是用来存储项目的仓库。</li></ul><h2 id="三、准备Git"><a href="#三、准备Git" class="headerlink" title="三、准备Git"></a>三、准备Git</h2><h3 id="3-1-安装Git"><a href="#3-1-安装Git" class="headerlink" title="3.1 安装Git"></a>3.1 安装Git</h3><p>下载地址：<a href="http://git-scm.com/download/" target="_blank" rel="noopener">http://git-scm.com/download/</a><br>安装步骤：双击安装，按默认选项一路下去即可。<br>安装完成后，在开始菜单里找到“Git”–&gt;“Git Bash”，出现如下图，就说明Git安装成功！<img src="1.png" alt></p><h3 id="3-2-配置信息"><a href="#3-2-配置信息" class="headerlink" title="3.2 配置信息"></a>3.2 配置信息</h3><p>在上图命令行中输入你的用户名与邮箱</p><pre class="line-numbers language-java"><code class="language-java">$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">"Your Name"</span>$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">"email@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>命令中的 –global 参数表示你这台机器上所有的Git仓库都会使用这个配置。</p><h3 id="3-3-Android-Studio中配置Git"><a href="#3-3-Android-Studio中配置Git" class="headerlink" title="3.3 Android Studio中配置Git"></a>3.3 Android Studio中配置Git</h3><p>在Android Studio中点击Settings–&gt;Version Control –&gt; Git，然后在Path To Git executable上输入你刚刚安装Git的位置，最后点击Test按钮出现Git executed successfully说明配置成功，如下图：<img src="2.png" alt></p><h2 id="四、GitLab使用"><a href="#四、GitLab使用" class="headerlink" title="四、GitLab使用"></a>四、GitLab使用</h2><h3 id="4-1-注册账号"><a href="#4-1-注册账号" class="headerlink" title="4.1 注册账号"></a>4.1 注册账号</h3><p>这里说下注册账号的时候需要注意的事项。<br>如果注册账号的时候提示如下错误</p><pre class="line-numbers language-java"><code class="language-java">there was an error with the reCAPTCHA<span class="token punctuation">,</span>please solve the reCAPTCHA again<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那是因为注册时需要验证码验证，就是reCAPTCHA，是一个图形验证码。但是这个验证码需要翻Q才能看得到，否则你一直都注册不了。如图：<img src="3.png" alt></p><h3 id="4-2-GitLab账户配置SSH-Keys"><a href="#4-2-GitLab账户配置SSH-Keys" class="headerlink" title="4.2 GitLab账户配置SSH Keys"></a>4.2 GitLab账户配置SSH Keys</h3><h4 id="4-2-1-首先需要检查你电脑是否已经有-SSH-Keys"><a href="#4-2-1-首先需要检查你电脑是否已经有-SSH-Keys" class="headerlink" title="4.2.1 首先需要检查你电脑是否已经有 SSH Keys"></a>4.2.1 首先需要检查你电脑是否已经有 SSH Keys</h4><p>在Git Bash 客户端，输入如下代码：</p><pre class="line-numbers language-java"><code class="language-java">$ cd <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh$ ls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如下说明已经存在，存在就可以忽略步骤4.2.2，直接进入步骤4.2.3<br><img src="4.png" alt></p><h4 id="4-2-2-创建一个-SSH-Keys"><a href="#4-2-2-创建一个-SSH-Keys" class="headerlink" title="4.2.2 创建一个 SSH Keys"></a>4.2.2 创建一个 SSH Keys</h4><p>在Git Bash 客户端，输入如下代码：</p><pre class="line-numbers language-java"><code class="language-java">$ ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span>C <span class="token string">"your_email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后根据提示进行相应操作，如下图所示：<br>第一个Enter表示Keys存储的位置，默认按回车键即可。第二个和第三个Enter表示Push文件的时候要输入的密码，不需要密码就默认按回车键即可，然后出现如图底部信息就说明创建成功了！<br><img src="5.png" alt></p><h4 id="4-2-3-GitLab配置SSH-Keys"><a href="#4-2-3-GitLab配置SSH-Keys" class="headerlink" title="4.2.3 GitLab配置SSH Keys"></a>4.2.3 GitLab配置SSH Keys</h4><p>进入上图所示存储 id_rsa.pub 的文件夹拷贝该文件中的内容，然后登录你的GitLab账号，点击网页右上角的头像–&gt;Settings，点击左边菜单栏的 SSH Keys 进入页面添加 SSH key。如下操作：<img src="6.png" alt><br><img src="7.png" alt></p><h3 id="4-3-创建项目"><a href="#4-3-创建项目" class="headerlink" title="4.3 创建项目"></a>4.3 创建项目</h3><p>在GitLab网站点击导航条上的 “+” 即可进入创建项目的页面，然后根据提示填写相应信息，如下图：<img src="8.png" alt></p><p><img src="9.png" alt></p><ul><li>Project path：项目路径</li><li>Project name：项目名称</li><li>Project description (optional)：项目描述（可选项）</li><li>Visibility Level：可见登记，Private表示私有的，只有你自己或者组内的成员能访问，Internal表示所有登录的用户，Public表示公开的，所有人都可以访问。</li></ul><p>创建完成后是这样的：<img src="10.png" alt></p><h2 id="五、Android-Studio中使用Git"><a href="#五、Android-Studio中使用Git" class="headerlink" title="五、Android Studio中使用Git"></a>五、Android Studio中使用Git</h2><h3 id="5-1-将项目上传到GitLab"><a href="#5-1-将项目上传到GitLab" class="headerlink" title="5.1 将项目上传到GitLab"></a>5.1 将项目上传到GitLab</h3><p>本地已创建好的项目为WildmaGit</p><h4 id="5-1-1-配置忽略文件"><a href="#5-1-1-配置忽略文件" class="headerlink" title="5.1.1 配置忽略文件"></a>5.1.1 配置忽略文件</h4><p>Android Studio创建项目后会自动生成.gitignore文件，这个文件可以用来忽略那些不用加入到仓库的文件。项目根目录下与module目录下都会生成该文件，如下：<img src="11.png" alt></p><p>一般情况下我们只需要将项目根目录下的/.idea/workspace.xml与/.idea/libraries改成.idea即可，其他没有特殊要求就用默认的。如下：<br>修改前：<img src="12.png" alt><br>修改后：<img src="13.png" alt></p><h4 id="5-1-2-初始化本地Git仓库"><a href="#5-1-2-初始化本地Git仓库" class="headerlink" title="5.1.2 初始化本地Git仓库"></a>5.1.2 初始化本地Git仓库</h4><p>点击Android Studio顶部菜单栏上的VCS–&gt;Import into Version Control–&gt;Create Git Repository，如图：<img src="14.png" alt></p><p>然后选择需要初始化的项目根目录，如图：<img src="15.png" alt></p><p>初始化之后发现文件名由原来的白色变成了红色，这表示文件已经被git跟踪了，但是并没有添加到仓库中。如图：<img src="16.png" alt></p><h4 id="5-1-3-将本地Git仓库已与远程仓库进行关联"><a href="#5-1-3-将本地Git仓库已与远程仓库进行关联" class="headerlink" title="5.1.3 将本地Git仓库已与远程仓库进行关联"></a>5.1.3 将本地Git仓库已与远程仓库进行关联</h4><p>打开项目文件夹，在该文件夹中打开Git Bash。输入如下命令后就代表本地Git仓库已与远程仓库进行关联了。</p><pre class="line-numbers language-java"><code class="language-java">git remote add origin git<span class="token annotation punctuation">@gitlab</span><span class="token punctuation">.</span>com<span class="token operator">:</span>wildma<span class="token operator">/</span>WildmaGit<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>具体步骤见下图：<img src="17.png" alt><br><img src="18.png" alt></p><p>其中 <a href="mailto:git@gitlab.com" target="_blank" rel="noopener">git@gitlab.com</a>:wildma/WildmaGit.git 为我们项目的远程地址，可以到我们前面创建项目中复制，如下：<br><img src="19.png" alt></p><h4 id="5-1-4-添加文件"><a href="#5-1-4-添加文件" class="headerlink" title="5.1.4 添加文件"></a>5.1.4 添加文件</h4><p>选中项目的根目录，点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Add…，如下图：<img src="20.png" alt></p><p>添加文件后发现文件名由原来的红色变成了绿色，说明已经将文件添加进仓库了。如下图：<img src="21.png" alt></p><h4 id="5-1-5-提交文件"><a href="#5-1-5-提交文件" class="headerlink" title="5.1.5 提交文件"></a>5.1.5 提交文件</h4><p>每次提交前需要先更新项目，原因是如果是多人合作的项目，需要先将远程仓库中他人提交的最新代码更新到本地仓库。如图：<img src="22.png" alt></p><p>然后选中Merge，点击OK，如果本地代码与远程代码有冲突就会弹出冲突提示，根据需求Merge即可，如图：<img src="23.png" alt></p><p>Update后就可以提交文件了，选中项目的根目录，点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Commit Directory…，如图：<img src="24.png" alt></p><p>然后会弹出如下提交框，这里可以选择你要提交的文件和填写提交信息，如图：<img src="25.png" alt></p><p>提交文件后发现文件名由原来的绿色又变成了最开始的白色，说明已经将文件提交上仓库了。如图：<img src="26.png" alt></p><h4 id="5-1-6-将提交的文件推送到远程仓库"><a href="#5-1-6-将提交的文件推送到远程仓库" class="headerlink" title="5.1.6 将提交的文件推送到远程仓库"></a>5.1.6 将提交的文件推送到远程仓库</h4><p>选中项目的根目录，点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Push…，如下图：<img src="27.png" alt></p><p>然后会弹出如下推送框<img src="28.png" alt></p><p>点击Push后，就可以在GitLab上看到刚刚推送的内容了。如下图：<img src="29.png" alt></p><h3 id="5-2-从GitLab上clone项目"><a href="#5-2-从GitLab上clone项目" class="headerlink" title="5.2 从GitLab上clone项目"></a>5.2 从GitLab上clone项目</h3><p>首先到GitLab上复制项目的地址，如图：<img src="30.png" alt></p><p>然后点击Android Studio顶部菜单栏上的VCS–&gt;Checkout from Version Control–&gt;Git ，如图：<img src="31.png" alt></p><p>最后填写相应的信息即可，如下图：</p><ul><li>Git Repository URL：填写刚刚复制的项目地址</li><li>Parent Directory：项目路径</li><li>Directory Name：项目文件夹名称</li></ul><p><img src="32.png" alt></p><p>点击clone后，项目就clone下来了！</p><h3 id="5-3-分支管理"><a href="#5-3-分支管理" class="headerlink" title="5.3 分支管理"></a>5.3 分支管理</h3><h4 id="5-3-1-分支策略"><a href="#5-3-1-分支策略" class="headerlink" title="5.3.1 分支策略"></a>5.3.1 分支策略</h4><p>在实际开发中，我们会用到很多分支。这里说下各分支的作用。</p><ul><li>master分支：最稳定的分支，保存需要发布的版本，不在该分支上做任何开发。</li><li>dev分支：开发分支，保存最新的代码，平时开发就在该分支上。当某个版本开发完成后就合并到master分支，然后在master分支进行版本发布。</li><li>bug分支：用来修复bug的分支，一般是线上版出现bug的时候，从master分支创建一个新的bug分支进行bug修复，修复完成合并到master分支和dev分支（保证master分支与dev分支同步），然后删除该bug分支。</li></ul><p>实际开发中我主要用到这三个分支，当然每个人都不同，有些人还会细分到功能分支，预发分支。其中master分支与dev分支都需要推送到远程，为了其他成员能共同开发，bug分支则放在本地即可，你自己修复完bug删掉即可。</p><h4 id="5-3-2-分支操作"><a href="#5-3-2-分支操作" class="headerlink" title="5.3.2 分支操作"></a>5.3.2 分支操作</h4><ol><li>创建分支<br>点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Branches…，如图：<img src="33.png" alt></li></ol><p>然后选择New Branch，输入分支的名字，例如“dev”，如图：<img src="34.png" alt></p><p><img src="35.png" alt></p><p>点击OK，分支dev就创建成功了，并且默认切换到该分支。重复上面的步骤可以看到当前分支显示的是dev，如图：<img src="36.png" alt></p><ol start="2"><li>推送分支到远程<br>这时候我们在dev分支上修改内容，然后按照前面说的提交文件（步骤5.1.5），将提交的文件推送到远程仓库（步骤5.1.6）即可。如图：<img src="37.png" alt> <img src="38.png" alt></li></ol><p>点击push，然后就可以到Gitlab上看到我们刚刚推送的dev分支了，如图：<img src="39.png" alt></p><ol start="3"><li>切换分支<br>dev分支上版本V1.0开发完了，需要将代码合并到master上进行发布。因为当前在dev分支，所以需要先切换到master分支，点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Branches…，打开Git Branches窗口，然后选择本地分支栏下的master-&gt;origin/master，然后点击Checkout。如图：<img src="40.png" alt></li></ol><ol start="4"><li>合并分支<br>第三步已经将分支切换到master了，现在进行分支合并。点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Branches…，打开Git Branches窗口，然后选择远程分支栏下的origin/dev，然后点击Merge。如图：<img src="41.png" alt></li></ol><p>这个时候到GitLab上却发现master分支上并没有合并到dev分支修改的内容，那是因为刚刚只是将远程dev分支的内容合并到本地master分支，本地master分支还没有push到远程，push一下就可以啦~ 如图：<img src="42.png" alt></p><p>这个时候发现GitLab上master分支与dev分支是保持一致的了。然后将最新的master分支打包发布即可！</p><ol start="5"><li>删除分支<br>删除本地分支：<br>点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Branches…，打开Git Branches窗口，选中本地dev分支，选择Delete即可。如图：<img src="43.png" alt></li></ol><p>删除远程分支：<br>点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Branches…，打开Git Branches窗口，选中远程dev分支，选择Delete即可。如图：<img src="44.png" alt></p><h3 id="5-4-标签-Tag-管理"><a href="#5-4-标签-Tag-管理" class="headerlink" title="5.4 标签(Tag)管理"></a>5.4 标签(Tag)管理</h3><p>标签一般是用于标记某个发布的版本， 例如你发布了版本v1.0，这个时候会打一个v1.0的Tag，主要是方便以后查看和管理某个版本的代码。</p><ol><li>创建标签<br>点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Tag…，如图：<img src="45.png" alt></li></ol><p>然后填写Tag名称与Tag信息，点击Create Tag即可创建本地标签。其中Commit可填写以前某次提交记录的id，表示在该次提交上打Tag。如果不填表示Tag打在最新提交的commit上。如图：<img src="46.png" alt></p><ol start="2"><li>推送标签到远程<br>点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Push…，如图：<br><img src="47.png" alt></li></ol><p>然后弹出Push框，选中Push Tags，点击Push即可推送到远程。如图：<br><img src="48.png" alt></p><p>最后到GitLab就可以看到刚刚创建的Tag了，如图：<br><img src="49.png" alt></p><ol start="3"><li>checkout某个标签的代码<br>点击Android Studio顶部菜单栏上的VCS–&gt;Git–&gt;Branches…，如图：<img src="50.png" alt></li></ol><p>然后选择Checkout Tag or Revision…，最后在弹出的Checkout框中填入Tag的名称即可。如图：<img src="51.png" alt><br><img src="52.png" alt></p><ol start="4"><li>删除标签<br>在Android Studio中没找到删除Tag的操作，所以这里用Git命令。（有发现的小伙伴可以告诉我）</li></ol><p>查看本地标签：</p><pre class="line-numbers language-java"><code class="language-java">git tag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除本地标签：</p><pre class="line-numbers language-java"><code class="language-java">git tag <span class="token operator">-</span>d tagName<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除远程标签：</p><pre class="line-numbers language-java"><code class="language-java">git push origin <span class="token operator">:</span>refs<span class="token operator">/</span>tags<span class="token operator">/</span>tagName<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上命令需要在Android Studio自带的命令行中输入，如图：<img src="53.png" alt></p><p>希望这种图文结合的方式大家都能看懂吧！写的不好的地方请多交流~</p><p>项目地址：<a href="https://gitlab.com/wildma/WildmaGit" target="_blank" rel="noopener">WildmaGit</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitLab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 友盟统计的集成与使用（包含多渠道打包配置）</title>
      <link href="/umeng-statistics/"/>
      <url>/umeng-statistics/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>app上线后，一般公司都希望跟踪app在市场上的使用情况。包括新增用户、活跃用户、渠道信息、错误信息等，还有例如商城类的app，需要跟踪用户最喜欢浏览哪种类型的店铺或商品。这些都可以通过集成友盟统计来轻松实现。</p><p>（小提示：由于截的都是大图，可能显示比较模糊，需要查看清晰图片则鼠标点击图片放大即可）</p><h2 id="一、集成"><a href="#一、集成" class="headerlink" title="一、集成"></a>一、集成</h2><h3 id="1-1-获取Appkey"><a href="#1-1-获取Appkey" class="headerlink" title="1.1 获取Appkey"></a>1.1 获取Appkey</h3><p>集成友盟SDK之前，首先需要到<a href="http://www.umeng.com/" target="_blank" rel="noopener">友盟官网</a>注册并且添加新应用，获取Appkey（一般公司项目不需要自己申请账号，跟项目经理要即可）。每个应用对应的Appkey是唯一的，如下：<br><img src="1.png" alt></p><h3 id="1-2-导入SDK"><a href="#1-2-导入SDK" class="headerlink" title="1.2 导入SDK"></a>1.2 导入SDK</h3><p>有两种方法：（本Demo中采用第二种方法）</p><ul><li><p>方法一：下载SDK，将解压出来的jar包复制到工程libs/目录下。<br>下载地址：<a href="http://mobile.umeng.com/custom_sdk" target="_blank" rel="noopener">http://mobile.umeng.com/custom_sdk</a><br>只需要下载Analytics SDK即可，如下：<br><img src="2.png" alt></p></li><li><p>方法二：添加SDK在maven中心库的线上依赖<br>1、在app的builde.gradle中添加依赖</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/*友盟统计需要的最新版本组件化基础库和统计SDK*/</span>compile <span class="token string">'com.umeng.sdk:common:latest.integration'</span>compile <span class="token string">'com.umeng.sdk:analytics:latest.integration'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果无法正常集成，则需要在项目的builde.gradle中添加如下配置：</p><pre class="line-numbers language-java"><code class="language-java">allprojects <span class="token punctuation">{</span>  repositories <span class="token punctuation">{</span>          <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-在AndroidManifest-xml中添加权限、配置Appkey与渠道（Channel）"><a href="#1-3-在AndroidManifest-xml中添加权限、配置Appkey与渠道（Channel）" class="headerlink" title="1.3 在AndroidManifest.xml中添加权限、配置Appkey与渠道（Channel）"></a>1.3 在AndroidManifest.xml中添加权限、配置Appkey与渠道（Channel）</h3><p>1、添加权限</p><pre class="line-numbers language-java"><code class="language-java">  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>友盟统计所需权限<span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、配置Appkey</p><pre class="line-numbers language-java"><code class="language-java">      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>value的值填写你在友盟后台申请的应用Appkey<span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"5a910933f29d986f35000064"</span> android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"UMENG_APPKEY"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3、配置渠道<br>由于一般会有多个渠道，所以这里的渠道名称不能写死，应该设置成动态的，如下：</p><pre class="line-numbers language-java"><code class="language-java">      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>value的值填写渠道名称，例如yingyongbao。这里设置动态渠道名称变量<span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"${UMENG_CHANNEL_VALUE}"</span> android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"UMENG_CHANNEL"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在app的builde.gradle中配置需要的渠道（这里只测试应用宝、豌豆荚、小米），对应上面的渠道名称变量。</p><pre class="line-numbers language-java"><code class="language-java">  <span class="token comment" spellcheck="true">/*配置渠道*/</span>  productFlavors <span class="token punctuation">{</span>      yingyongbao <span class="token punctuation">{</span>          manifestPlaceholders <span class="token operator">=</span> <span class="token punctuation">[</span>UMENG_CHANNEL_VALUE<span class="token operator">:</span> <span class="token string">"yingyongbao"</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span>      wandoujia <span class="token punctuation">{</span>          manifestPlaceholders <span class="token operator">=</span> <span class="token punctuation">[</span>UMENG_CHANNEL_VALUE<span class="token operator">:</span> <span class="token string">"wandoujia"</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span>      xiaomi <span class="token punctuation">{</span>          manifestPlaceholders <span class="token operator">=</span> <span class="token punctuation">[</span>UMENG_CHANNEL_VALUE<span class="token operator">:</span> <span class="token string">"xiaomi"</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>完整AndroidManifest.xml如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>manifest <span class="token keyword">package</span><span class="token operator">=</span><span class="token string">"com.wildma.umenganalytics"</span>        xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>友盟统计所需权限<span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span>  <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span>  <span class="token operator">&lt;</span>application      android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".MyApplication"</span>      android<span class="token operator">:</span>allowBackup<span class="token operator">=</span><span class="token string">"true"</span>      android<span class="token operator">:</span>icon<span class="token operator">=</span><span class="token string">"@mipmap/ic_launcher"</span>      android<span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"@string/app_name"</span>      android<span class="token operator">:</span>supportsRtl<span class="token operator">=</span><span class="token string">"true"</span>      android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@style/AppTheme"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>activity android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".MainActivity"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>              <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.MAIN"</span><span class="token operator">/</span><span class="token operator">></span>              <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.LAUNCHER"</span><span class="token operator">/</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>友盟统计配置Appkey与Channel<span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>value的值填写你在友盟后台申请的应用Appkey<span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"5a910933f29d986f35000064"</span> android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"UMENG_APPKEY"</span><span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>value的值填写渠道名称，例如yingyongbao。这里设置动态渠道变量<span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"${UMENG_CHANNEL_VALUE}"</span> android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"UMENG_CHANNEL"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>application<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>```<ul><li>完整app的builde.gradle如下：<pre class="line-numbers language-java"><code class="language-java">apply plugin<span class="token operator">:</span> <span class="token string">'com.android.application'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>android {<br>    compileSdkVersion 26<br>    buildToolsVersion “26.0.2”<br>    defaultConfig {<br>        applicationId “com.wildma.umenganalytics”<br>        minSdkVersion 14<br>        targetSdkVersion 26<br>        versionCode 1<br>        versionName “1.0”<br>        testInstrumentationRunner “android.support.test.runner.AndroidJUnitRunner”<br>    }<br>    buildTypes {<br>        release {<br>            minifyEnabled false<br>            proguardFiles getDefaultProguardFile(‘proguard-android.txt’), ‘proguard-rules.pro’<br>        }<br>    }</p><pre><code>//签名信息配置signingConfigs {    release {        storeFile file(&quot;./keystore/UMengAnalyticsKeystore.jks&quot;)        keyAlias &quot;UMengAnalyticsKeystore&quot;        storePassword &quot;123456&quot;        keyPassword &quot;123456&quot;    }    debug {        storeFile file(&quot;./keystore/debug.keystore&quot;)    }}/*配置渠道*/productFlavors {    yingyongbao {        manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;yingyongbao&quot;]    }    wandoujia {        manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;wandoujia&quot;]    }    xiaomi {        manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;xiaomi&quot;]    }}</code></pre><p>}</p><p>dependencies {<br>    compile fileTree(dir: ‘libs’, include: [‘*.jar’])<br>    androidTestCompile(‘com.android.support.test.espresso:espresso-core:2.2.2’, {<br>        exclude group: ‘com.android.support’, module: ‘support-annotations’<br>    })<br>    compile ‘com.android.support:appcompat-v7:26.0.0-alpha1’<br>    testCompile ‘junit:junit:4.12’</p><pre><code>/*友盟统计需要的最新版本组件化基础库和统计SDK*/compile &#39;com.umeng.sdk:common:latest.integration&#39;compile &#39;com.umeng.sdk:analytics:latest.integration&#39;</code></pre><p>}</p><pre><code>### 1.4 添加初始化方法在项目工程的自定义application中的onCreate方法中添加以下方法：```javapublic class MyApplication extends Application {    @Override    public void onCreate() {        super.onCreate();        /**         * 初始化common库         * 参数1:上下文，必须的参数，不能为空         * 参数2:友盟 app key，非必须参数，如果Manifest文件中已配置app key，该参数可以传空，则使用Manifest中配置的app key，否则该参数必须传入         * 参数3:友盟 channel，非必须参数，如果Manifest文件中已配置channel，该参数可以传空，则使用Manifest中配置的channel，否则该参数必须传入，channel命名请详见channel渠道命名规范         * 参数4:设备类型，必须参数，传参数为UMConfigure.DEVICE_TYPE_PHONE则表示手机；传参数为UMConfigure.DEVICE_TYPE_BOX则表示盒子；默认为手机         * 参数5:Push推送业务的secret，需要集成Push功能时必须传入Push的secret，否则传空         */        //如果AndroidManifest.xml清单配置中没有设置appkey和channel，则可以在这里设置        //        UMConfigure.init(this, &quot;58edcfeb310c93091c000be2&quot;, &quot;Umeng&quot;, UMConfigure.DEVICE_TYPE_PHONE, &quot;1fe6a20054bcef865eeb0991ee84525b&quot;);        UMConfigure.init(this, UMConfigure.DEVICE_TYPE_PHONE,&quot;&quot;);    }}</code></pre><p>通过上面的步骤，友盟统计就已经集成好了，下面来看看它各种统计的使用。</p><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><h3 id="2-1-Session统计"><a href="#2-1-Session统计" class="headerlink" title="2.1 Session统计"></a>2.1 Session统计</h3><p>即启动数据的统计（包括新增用户、活跃用户、启动次数、使用时长等基本数据）</p><p>需要在每个Activity的onResume方法中调用 MobclickAgent.onResume(Context),<br>onPause方法中调用 MobclickAgent.onPause(Context)，如下：</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        MobclickAgent<span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        MobclickAgent<span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>确保在所有的Activity中都调用 MobclickAgent.onResume() 和onPause()方法。</p></li><li><p>如果Activity之间有继承或者控制关系请不要同时在父和子Activity中重复添加nPause和nResume方法，否则会造成重复统计。例如在BaseActivity中添加过，则它的子类就不需要添加了。</p></li><li><p>当应用在后台运行超过30秒（默认）再回到前端，将被认为是两个独立的session(启动)，例如用户回到home，或进入其他程序，经过一段时间后再返回之前的应用。可通过接口：setSessionContinueMillis(long interval) 来自定义这个间隔（参数单位为毫秒）。</p></li><li><p>如果开发者调用kill或者exit之类的方法杀死进程，请务必在此之前调用onKillProcess(Context context)方法，用来保存统计数据。</p></li></ul><p>安装app启动后。在友盟后台就可以看到统计的数据了。如下：</p><p>新增用户、启动次数、日活等数据：<br><img src="3.png" alt><br>渠道分析数据：<br><img src="4.png" alt></p><h3 id="2-2-自定义事件统计"><a href="#2-2-自定义事件统计" class="headerlink" title="2.2 自定义事件统计"></a>2.2 自定义事件统计</h3><p>自定义事件可以实现在应用程序中埋点来统计用户的点击行为。例如我们的应用是商城类的，就需要统计用户是喜欢进入“nike”店铺，还是“new banlance”店铺。自定义事件目前包括”计数事件”和”计算事件”，这里主要讲下计数事件。</p><p>1、首先需要在友盟后台添加自定义事件：设置-事件-手工添加-添加事件。如下：<br><img src="5.png" alt></p><p>2、在需要监听自定义事件的地方添加代码，如下模拟点击进入”nike“店铺。<br>第二个参数为当前统计的事件ID，需要与友盟后台设置的事件ID一致（即上图的事件ID）。</p><pre class="line-numbers language-java"><code class="language-java">MobclickAgent<span class="token punctuation">.</span><span class="token function">onEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"nike"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//参数二为当前统计的事件ID</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、运行app，触发该事件后。在友盟后台就可以看到统计的数据了。如下：<br>其中消息数量即为事件被触发的次数。<br><img src="6.png" alt></p><h3 id="2-3-错误统计"><a href="#2-3-错误统计" class="headerlink" title="2.3 错误统计"></a>2.3 错误统计</h3><p>错误分析是友盟为移动开发者提供的Crash收集和分析工具，帮助开发者监测App在移动设备上的运行状况，及时发现并解决错误，提升App的稳定性。</p><p>Android统计SDK从V4.6版本开始内建错误统计，不需要开发者再手动集成。<br>SDK通过Thread.UncaughtExceptionHandler 捕获程序崩溃日志，并在程序下次启动时发送到服务器。 如不需要错误统计功能，可通过此方法关闭</p><pre class="line-numbers language-java"><code class="language-java">MobclickAgent<span class="token punctuation">.</span><span class="token function">setCatchUncaughtExceptions</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果开发者自己捕获了错误，需要上传到【友盟+】服务器可以调用下面方法：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">reportError</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> String error<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//或  </span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">reportError</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Throwable e<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>现在我在demo中模拟一次错误，如下：</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 模拟错误     * @param view     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createError</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再到友盟后台查看错误，如下：<br><img src="7.png" alt></p><h3 id="2-4-其他统计"><a href="#2-4-其他统计" class="headerlink" title="2.4 其他统计"></a>2.4 其他统计</h3><p>上面三个统计是比较常用的统计，还有很多统计，例如账号统计、页面统计等就不一一列举了。有需求的可以参考<a href="http://dev.umeng.com/sdk_integate/android_sdk/analytics_doc#1" target="_blank" rel="noopener">友盟统计集成文档</a></p><p>本文demo源码地址：<a href="https://github.com/wildma/UMengAnalytics" target="_blank" rel="noopener">https://github.com/wildma/UMengAnalytics</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多渠道打包 </tag>
            
            <tag> 友盟统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>带你通俗易懂的理解——线程、多线程与线程池</title>
      <link href="/thread/"/>
      <url>/thread/</url>
      
        <content type="html"><![CDATA[<h2 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h2><ul><li><strong>进程</strong>：进程就是正在执行的程序。</li><li><strong>线程</strong>：是程序执行的一条路径, 一个进程中可以包含多条线程。<br>通俗理解：例如你打开微信就是打开一个进程，在微信里面和好友视频聊天就是开启了一条线程。</li><li><strong>两者之间的关系</strong>：<br>一个进程里面可以有多条线程，至少有一条线程。<br>一条线程一定会在一个进程里面。</li></ul><p>关于进程与线程的讲解，这篇文章讲的挺好的–&gt;<a href="http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html" target="_blank" rel="noopener">进程与线程的一个简单解释</a></p><h2 id="创建线程的三种方式"><a href="#创建线程的三种方式" class="headerlink" title="创建线程的三种方式"></a>创建线程的三种方式</h2><h3 id="一、继承Thread"><a href="#一、继承Thread" class="headerlink" title="一、继承Thread"></a>一、继承Thread</h3><p>1、定义一个类MyThread继承Thread，并重写run方法。<br>2、将要执行的代码写在run方法中。<br>3、创建该类的实例，并调用start()方法开启线程。<br>代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、创建该类的实例，并调用start()方法开启线程。</span>        MyThread myThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        myThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//1、定义一个类MyThread继承Thread，并重写run方法。</span>    <span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//2、将执行的代码写在run方法中。</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"线程名字:"</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">+</span> <span class="token string">"  i="</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、实现Runnable接口"><a href="#二、实现Runnable接口" class="headerlink" title="二、实现Runnable接口"></a>二、实现Runnable接口</h3><p>1、定义一个类MyRunnable实现Runnable接口，并重写run方法。<br>2、将要执行的代码写在run方法中。<br>3、创建Thread对象, 传入MyRunnable的实例，并调用start()方法开启线程。<br>代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、创建Thread对象, 传入MyRunnable的实例，并调用start()方法开启线程。</span>        Thread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//1、定义一个类MyRunnable实现Runnable接口，并重写run方法。</span>    <span class="token keyword">class</span> <span class="token class-name">MyRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//2、将执行的代码写在run方法中。</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"线程名字:"</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"  i="</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、实现Callable接口"><a href="#三、实现Callable接口" class="headerlink" title="三、实现Callable接口"></a>三、实现Callable接口</h3><p>Callable是类似于Runnable的接口，实现Callable接口的类和实现Runnable的类都是可被其它线程执行的任务。</p><p>1、自定义一个类MyCallable实现Callable接口，并重写call()方法<br>2、将要执行的代码写在call()方法中<br>3、创建线程池对象，调用submit()方法执行MyCallable任务，并返回Future对象<br>4、调用Future对象的get()方法获取call()方法执行完后的值<br>代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、创建线程池对象，调用submit()方法执行MyCallable任务，并返回Future对象</span>        ExecutorService pool <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Future<span class="token operator">&lt;</span>Integer<span class="token operator">></span> f1 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyCallable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//4、调用Future对象的get()方法获取call()方法执行完后的值</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"sum="</span> <span class="token operator">+</span> f1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//关闭线程池</span>        pool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//1、自定义一个类MyCallable实现Callable接口，并重写call()方法</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCallable</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> Integer <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//2、将要执行的代码写在call()方法中</span>            <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> sum<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建线程的三种方式对比"><a href="#创建线程的三种方式对比" class="headerlink" title="创建线程的三种方式对比"></a>创建线程的三种方式对比</h2><h3 id="一、继承Thread类与实现Runnable接口的区别"><a href="#一、继承Thread类与实现Runnable接口的区别" class="headerlink" title="一、继承Thread类与实现Runnable接口的区别"></a>一、继承Thread类与实现Runnable接口的区别</h3><p>我们都知道java支持单继承，多实现。实现Runnable接口还可以继承其他类，而使用继承Thread就不能继承其他类了。所以当你想创建一个线程又希望继承其他类的时候就该选择实现Runnable接口的方式。</p><h3 id="二、实现Callable接口与Runnable接口的区别"><a href="#二、实现Callable接口与Runnable接口的区别" class="headerlink" title="二、实现Callable接口与Runnable接口的区别"></a>二、实现Callable接口与Runnable接口的区别</h3><p>Callable执行的方法是call() ，而Runnable执行的方法是run()。<br> call() 方法有返回值还能抛出异常， run() 方法则没有没有返回值，也不能抛出异常。</p><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><h3 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h3><p>一个进程中开启了不止一个线程。</p><h3 id="二、多线程的优缺点"><a href="#二、多线程的优缺点" class="headerlink" title="二、多线程的优缺点"></a>二、多线程的优缺点</h3><ul><li><p><strong>优点</strong><br>1、提高CPU的使用率<br>例如朋友圈发表图片，当你上传9张图片的时候，如果开启一个线程用同步的方式一张张上传图片，假设每次上传图片的线程只占用了CPU 1%d的资源，剩下的99%资源就浪费了。但是如果你开启9个线程同时上传图片，CPU就可以使用9%的资源了。<br>2、提高程序的工作效率<br>还是拿朋友圈发表图片来说，假设开启一个线程上传一张图片的时间是1秒，那么同步的方式上传9张就需要9秒，但是你开启9个线程同时上传图片，那么就只需要1秒就完成了。</p></li><li><p><strong>缺点</strong><br>1、如果有大量的线程,会影响性能,因为CPU需要在它们之间切换。<br>2、更多的线程需要更多的内存空间。<br>3、多线程操作可能会出现线程安全或者死锁等问题。</p></li></ul><h3 id="三、多线程并行和并发的区别"><a href="#三、多线程并行和并发的区别" class="headerlink" title="三、多线程并行和并发的区别"></a>三、多线程并行和并发的区别</h3><ul><li><p><strong>概念</strong><br>并行：多个处理器或者多核处理器同时执行多个不同的任务。<br>并发：一个处理器处理多个任务。</p></li><li><p><strong>打个比喻</strong><br>并行就是一个人用他的左手喂女儿吃饭，同时用右手喂儿子吃饭。<br>并发就是一个人先喂女儿吃一口饭，接着喂儿子吃一口，然后再喂女儿吃一口，轮流喂。</p></li><li><p><strong>举个多线程并发操作同一数据出现线程安全的例子</strong><br>利用多线程上传9张图片，并提示还剩几张图片未上传。代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//开启2条线程上传图片</span>      MyRunnable myRunnable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>myRunnable<span class="token punctuation">,</span> <span class="token string">"线程1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>myRunnable<span class="token punctuation">,</span> <span class="token string">"线程2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>      <span class="token keyword">private</span> <span class="token keyword">int</span> imgNum <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//图片数量</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>imgNum <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">break</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>              <span class="token keyword">try</span> <span class="token punctuation">{</span>                  Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//模拟上传一张图片需要1秒钟的时间</span>              <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>              Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"正在上传图片...，还剩"</span> <span class="token operator">+</span> imgNum<span class="token operator">--</span> <span class="token operator">+</span> <span class="token string">"张图片未上传"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>打印结果如下：</p><p><img src="1.jpg" alt><br>由图可知，图片数量出现了负数，显然是错误的。</p><p>原因：<br>出现这种错误的原因是有多个线程在操作共享的数据。即一个线程在操作共享数据的过程中CPU切换到其他线程又对该数据进行操作，这就是所谓的多线程并发。</p><p>解决：<br>把操作数据的那段代码用synchronized进行同步, 这样就能保证在同一时刻只能有一个线程能够访问。<br>代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//开启2条线程上传图片</span>        MyRunnable myRunnable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>myRunnable<span class="token punctuation">,</span> <span class="token string">"线程1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>myRunnable<span class="token punctuation">,</span> <span class="token string">"线程2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token keyword">int</span> imgNum <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//图片数量</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>MyRunnable<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//加上synchronized进行同步，保证在同一时刻只能有一个线程能够访问。</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>imgNum <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//模拟上传一张图片需要1秒钟的时间</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"正在上传图片...，还剩"</span> <span class="token operator">+</span> imgNum<span class="token operator">--</span> <span class="token operator">+</span> <span class="token string">"张图片未上传"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印结果如下：</p><p><img src="2.jpg" alt></p><h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><h3 id="关于线程池"><a href="#关于线程池" class="headerlink" title="关于线程池"></a>关于线程池</h3><p>前面举的朋友圈发表图片的多线程例子中，为了提高CPU的使用率和程序的工作效率就需要创建9个线程来上传图片。但是线程的创建和销毁是非常耗CPU和内存的，因为它涉及到要与操作系统进行交互。这样就可能导致创建与销毁线程的开销比实际业务还大，而线程池就能很好的解决这些问题。线程池里的每一个线程结束后，并不会销毁（可以设置超时销毁），而是回到线程池中成为空闲状态，等待下一个对象来使用。</p><h3 id="使用线程池的优点"><a href="#使用线程池的优点" class="headerlink" title="使用线程池的优点"></a>使用线程池的优点</h3><p>1、减少创建与销毁线程带来的性能开销。<br>2、可控制最大并发线程数，避免过多资源竞争而导致系统内存消耗完。<br>3、能更好的控制线程的开启与回收，并且能定时执行任务。</p><h3 id="线程池中重要的几个类"><a href="#线程池中重要的几个类" class="headerlink" title="线程池中重要的几个类"></a>线程池中重要的几个类</h3><ul><li><strong>Executor</strong>：java中线程池的顶级接口，可以称它为一个执行器，通过查看源码也知道，他只有一个简单的方法execute(Runnable command)，就是用来执行提交的任务。源码如下：<br>【Executor.java】<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Executor</span> <span class="token punctuation">{</span>  <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span>Runnable command<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><strong>ExecutorService</strong>：Executor的子类，也是真正的线程池接口。它提供了提交任务和关闭线程池等方法。调用submit方法提交任务还可以返回一个Future对象，利用该对象可以了解任务执行情况，获得任务的执行结果或取消任务。</li><li><strong>Executors</strong>：由于线程池配置比较复杂，自己配置的线程池可能性能不是最好的。Executors就是用来方便创建各种常用线程池的工具类。</li><li><strong>ThreadPoolExecutor</strong>：ExecutorService的默认实现，Executors创建各种线程池的时候内部其实就是调用了ThreadPoolExecutor的构造方法。下面通过查看源码验证。<br>例如随便创建一个线程池：<pre class="line-numbers language-java"><code class="language-java">ExecutorService newCachedThreadPool <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>点击newCachedThreadPool()进去，里面确实调用了ThreadPoolExecutor的构造方法，如下：<br>【Executor.java】<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">static</span> ExecutorService <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span>                                    60L<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>                                    <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token operator">&lt;</span>Runnable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ThreadPoolExecutor构造函数参数说明"><a href="#ThreadPoolExecutor构造函数参数说明" class="headerlink" title="ThreadPoolExecutor构造函数参数说明"></a>ThreadPoolExecutor构造函数参数说明</h3>下面从源码中拿一个参数最完整的来讲解，如下：<br>【ThreadPoolExecutor.java】<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token function">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>                            <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>                            <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>                            TimeUnit unit<span class="token punctuation">,</span>                            BlockingQueue<span class="token operator">&lt;</span>Runnable<span class="token operator">></span> workQueue<span class="token punctuation">,</span>                            ThreadFactory threadFactory<span class="token punctuation">,</span>                            RejectedExecutionHandler handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>corePoolSize</strong>：核心线程数，如果运行的线程数少于corePoolSize，当有新的任务过来时会创建新的线程来执行这个任务，即使线程池中有其他空闲的线程。</li><li><strong>maximumPoolSize</strong>：线程池中允许的最大线程数。</li><li><strong>keepAliveTime</strong>：如果线程数多于核心线程数，那么这些多出来的线程如果空闲时间超过keepAliveTime将会被终止。</li><li><strong>unit</strong>：keepAliveTime参数的时间单位。</li><li><strong>workQueue</strong>：任务队列，通过线程池的execute方法会将任务Runnable存储在队列中。</li><li><strong>threadFactory</strong>：线程工厂，用来创建新线程。</li><li><strong>handler</strong>：添加任务出错时的策略捕获器，默认是ThreadPoolExecutor.AbortPolicy ，即添加任务出错就直接抛出异常 。</li></ul><h3 id="四种线程池"><a href="#四种线程池" class="headerlink" title="四种线程池"></a>四种线程池</h3><ul><li><strong>newFixedThreadPool</strong>：创建固定大小的线程池，这样可以控制线程最大并发数，超出的线程会在队列中等待。如果线程池中的某个线程由于异常而结束，线程池则会再补充一条新线程。<br>例子：创建线程数为3的线程池<pre class="line-numbers language-java"><code class="language-java">      ExecutorService newFixedThreadPool <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">final</span> <span class="token keyword">int</span> finalI <span class="token operator">=</span> i<span class="token punctuation">;</span>          newFixedThreadPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token annotation punctuation">@Override</span>              <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">try</span> <span class="token punctuation">{</span>                      Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"线程名字:"</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"  i="</span> <span class="token operator">+</span> finalI<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>打印结果：</li></ul><p><img src="3.jpg" alt><br>由打印结果可知，10个任务始终在3个线程中执行。</p><ul><li><p><strong>newSingleThreadExecutor</strong>：创建一个单线程的线程池，即这个线程池永远只有一个线程在运行，这样能保证所有任务按指定顺序来执行。如果这个线程异常结束，那么会有一个新的线程来替代它。<br>例子：</p><pre class="line-numbers language-java"><code class="language-java">      ExecutorService newSingleThreadExecutor <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">final</span> <span class="token keyword">int</span> finalI <span class="token operator">=</span> i<span class="token punctuation">;</span>          newSingleThreadExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token annotation punctuation">@Override</span>              <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">try</span> <span class="token punctuation">{</span>                      Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"线程名字:"</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"  i="</span> <span class="token operator">+</span> finalI<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印结果：<br><img src="4.jpg" alt><br>由打印结果可知，10个任务始终在1个线程中执行。</p></li><li><p><strong>newCachedThreadPool</strong>：创建带有缓存的线程池，在执行新的任务时，当线程池中有之前创建的可用线程就重用之前的线程，否则就新建一条线程。如果线程池中的线程在60秒未被使用，就会将它从线程池中移除。<br>例子：</p><pre class="line-numbers language-java"><code class="language-java">      ExecutorService newCachedThreadPool <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">final</span> <span class="token keyword">int</span> finalI <span class="token operator">=</span> i<span class="token punctuation">;</span>          newCachedThreadPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token annotation punctuation">@Override</span>              <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"线程名字:"</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"  i="</span> <span class="token operator">+</span> finalI<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="5.jpg" alt><br>由打印结果可知，线程1出现了很多次，说明有重用之前创建的线程。</p></li><li><p><strong>newScheduledThreadPool</strong>：创建定时和周期性执行的线程池。</p><pre class="line-numbers language-java"><code class="language-java">      ScheduledExecutorService newScheduledThreadPool <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/**       * 延迟2秒执行任务       */</span>      newScheduledThreadPool<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"线程名字:"</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"定时任务"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/**       * 延迟1秒后每2秒执行一次任务       */</span>      newScheduledThreadPool<span class="token punctuation">.</span><span class="token function">scheduleAtFixedRate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"线程名字:"</span> <span class="token operator">+</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"周期性任务"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><img src="6.jpg" alt><br>由打印结果可知，定时任务是2秒后执行任务，周期性任务是延迟1秒后每2秒执行一次任务。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> Java 并发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thread </tag>
            
            <tag> 线程 </tag>
            
            <tag> 多线程 </tag>
            
            <tag> 线程池 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一步一步教你集成腾讯浏览服务 X5 内核</title>
      <link href="/tencent-x5/"/>
      <url>/tencent-x5/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>腾讯浏览服务（TBS，Tencent Browsing Service）整合腾讯底层浏览技术和腾讯平台资源及能力，提供整体浏览服务解决方案。（来自-<a href="https://x5.tencent.com/tbs/product/tbs.html" target="_blank" rel="noopener">腾讯浏览服务</a>） 通俗点讲就是系统webview的增强版。我在项目中选择它来替代系统webview的主要原因是：</p><ol><li>速度快：相比系统webview的网页打开速度有30+%的提升；</li><li>省流量：使用云端优化技术使流量节省20+%；</li><li>解决系统webview播放视频不能全屏的问题；<br>其他更多优势见-<a href="https://x5.tencent.com/tbs/guide/sdkInit.html" target="_blank" rel="noopener">TBS(腾讯浏览服务)的优势</a></li></ol><h2 id="一、集成"><a href="#一、集成" class="headerlink" title="一、集成"></a>一、集成</h2><h3 id="1-1-导入jar包"><a href="#1-1-导入jar包" class="headerlink" title="1.1 导入jar包"></a>1.1 导入jar包</h3><p>（1）下载SDK，下载地址：<a href="https://x5.tencent.com/tbs/sdk.html" target="_blank" rel="noopener">https://x5.tencent.com/tbs/sdk.html</a> （选择第一个完整版即可-“Android SDK（3.5完整版）”）<br>（2）将下载的 SDK中的 jar 包放到工程的libs目录下，如图：<br><img src="1.jpg" alt></p><h3 id="1-2-导入so库"><a href="#1-2-导入so库" class="headerlink" title="1.2 导入so库"></a>1.2 导入so库</h3><p>（1）下载Demo, 下载地址：<a href="https://x5.tencent.com/tbs/sdk.html" target="_blank" rel="noopener">https://x5.tencent.com/tbs/sdk.html</a> （选择“SDK接入示例-Android Studio”下载即可）<br>（2）将下载的Demo中的so库-liblbs.so拷贝到项目相应目录下，如图：</p><p><img src="2.jpg" alt></p><p>x5暂时不提供64位so文件，为了保证64位手机能正常加载x5内核。需要在app.build文件的defaultConfig{}中添加如下配置：</p><pre class="line-numbers language-java"><code class="language-java">        ndk <span class="token punctuation">{</span>            abiFilters <span class="token string">"armeabi"</span><span class="token punctuation">,</span> <span class="token string">"armeabi-v7a"</span><span class="token punctuation">,</span> <span class="token string">"x86"</span><span class="token punctuation">,</span> <span class="token string">"mips"</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置后如图：</p><p><img src="3.jpg" alt></p><h3 id="1-3-AndroidManifest-xml里加入权限"><a href="#1-3-AndroidManifest-xml里加入权限" class="headerlink" title="1.3 AndroidManifest.xml里加入权限"></a>1.3 AndroidManifest.xml里加入权限</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4-在Application中预加载X5内核"><a href="#1-4-在Application中预加载X5内核" class="headerlink" title="1.4 在Application中预加载X5内核"></a>1.4 在Application中预加载X5内核</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initX5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 初始化X5     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initX5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//x5內核初始化回调</span>        QbSdk<span class="token punctuation">.</span>PreInitCallback cb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QbSdk<span class="token punctuation">.</span>PreInitCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onViewInitFinished</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> arg0<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>                <span class="token comment" spellcheck="true">//x5內核初始化完成的回调，为true表示x5内核加载成功，否则表示x5内核加载失败，会自动切换到系统内核。</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">,</span> <span class="token string">" onViewInitFinished is "</span> <span class="token operator">+</span> arg0<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCoreInitFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//x5内核初始化接口</span>        QbSdk<span class="token punctuation">.</span><span class="token function">initX5Environment</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-5-配置兼容视频播放"><a href="#1-5-配置兼容视频播放" class="headerlink" title="1.5 配置兼容视频播放"></a>1.5 配置兼容视频播放</h3><p>需要全屏播放视频或者享受页面视频的完整播放体验，则需要在页面的Activity添加如下配置android:configChanges=”orientation|screenSize|keyboardHidden”，如下：</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".MainActivity"</span>            android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"orientation|keyboardHidden|screenSize"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.MAIN"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.LAUNCHER"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、使用（与原生Webview基本差不多）"><a href="#二、使用（与原生Webview基本差不多）" class="headerlink" title="二、使用（与原生Webview基本差不多）"></a>二、使用（与原生Webview基本差不多）</h2><p>（1）【activity_main.xml】</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>RelativeLayout    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/activity_main"</span>    xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    xmlns<span class="token operator">:</span>tools<span class="token operator">=</span><span class="token string">"http://schemas.android.com/tools"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>paddingBottom<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span>    android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>    android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>    android<span class="token operator">:</span>paddingTop<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span>    tools<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">"com.wildma.wildmax5web.MainActivity"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>smtt<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>WebView        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/webview"</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"fill_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"fill_parent"</span>        android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"5dp"</span>        android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"5dp"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>RelativeLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）【MainActivity.java】</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wildma<span class="token punctuation">.</span>wildmax5web<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>smtt<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>WebView<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>smtt<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>WebViewClient<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> WebView mWebView<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        mWebView <span class="token operator">=</span> <span class="token punctuation">(</span>com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>smtt<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>WebView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>webview<span class="token punctuation">)</span><span class="token punctuation">;</span>        mWebView<span class="token punctuation">.</span><span class="token function">getSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setJavaScriptEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 支持js</span>        mWebView<span class="token punctuation">.</span><span class="token function">setWebViewClient</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebViewClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//防止加载网页时调起系统浏览器</span>        mWebView<span class="token punctuation">.</span><span class="token function">loadUrl</span><span class="token punctuation">(</span><span class="token string">"http://mp.weixin.qq.com/s/6QiZXzpUSuJKjoIoKovgtg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、辨别是否使用x5webview的方法"><a href="#三、辨别是否使用x5webview的方法" class="headerlink" title="三、辨别是否使用x5webview的方法"></a>三、辨别是否使用x5webview的方法</h2><p>（1）显示网页文字时，可通过长按选择文字的标识判断，如下水滴状选择效果是x5webview 的标志。如图：<br><img src="4.jpg" alt><br>（2）是否可以全屏播放网页视频</p><p>Demo下载地址：<a href="https://github.com/wildma/WildmaX5Web" target="_blank" rel="noopener">WildmaX5Web</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯 X5 内核 </tag>
            
            <tag> webview 增强版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 仿微信朋友圈全文、收起功能</title>
      <link href="/expand-fold-text/"/>
      <url>/expand-fold-text/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一般在社交APP中都有类似朋友圈的功能，其中发表的动态内容很长的时候不可能让它全部显示。这里就需要做一个仿微信朋友圈全文、收起功能来解决该问题。在网上看到一个例子–&gt; <a href="http://blog.csdn.net/e042kuuw/article/details/55107537" target="_blank" rel="noopener">http://blog.csdn.net/e042kuuw/article/details/55107537</a> ，写的很不错，但是有个bug，他这个Demo只有在条目固定的时候才正常，当增加、删除条目的时候会出现全文、收起显示混乱的问题。原因是他使用了固定的position作为key来保存当前显示的状态。这篇文章在他的基础上进行优化。</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="1.jpg" alt></p><h2 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h2><p>（详细解释在代码注释中都有，这里就省略了）</p><p><strong>MainActivity.java：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> RecyclerView mRecyclerView<span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>ExpandFoldTextBean<span class="token operator">></span> mList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ExpandFoldTextAdapter adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExpandFoldTextAdapter</span><span class="token punctuation">(</span>mList<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mRecyclerView <span class="token operator">=</span> <span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recyclerview<span class="token punctuation">)</span><span class="token punctuation">;</span>        mRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> LinearLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 初始化数据     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        String longContent <span class="token operator">=</span> <span class="token string">"-->游泳、快走、慢跑、骑自行车，及一切有氧运动都能锻炼心脏。有氧运动好处多：能锻炼心肺、增强循环系统功能、燃烧脂肪、加大肺活量、降低血压，甚至能预防糖尿病，减少心脏病的发生。美国运动医学院建议，想知道有氧运动强度是否合适，可在运动后测试心率，以达到最高心率的60%—90%为宜。如果想通过有氧运动来减肥，可以选择低度到中度的运动强度，同时延长运动时间，这种方法消耗的热量更多。运动频率每周3—5次，每次20—60分钟。想要锻炼肌肉，可以练举重、做体操以及其他重复伸、屈肌肉的运动。肌肉锻炼可以燃烧热量、增强骨密度、减少受伤，尤其是关节受伤的几率，还能预防骨质疏松。 在做举重运动前，先测一下，如果连续举8次你最多能举多重的东西，就从这个重量开始练习。当你可以连续12次举起这个重量时，试试增加5%的重量。注意每次练习时，要连续举8—12次，这样可以达到肌肉最大耐力的70%—80%，锻炼效果较好。每周2—3次，但要避免连续两天锻炼同一组肌肉群， 以便让肌肉有充分的恢复时间。"</span><span class="token punctuation">;</span>        String shortContent <span class="token operator">=</span> <span class="token string">"-->健身是一种体育项目，如各种徒手健美操、韵律操、形体操以及各种自抗力动作。"</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ExpandFoldTextBean bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExpandFoldTextBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                bean<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>i <span class="token operator">+</span> shortContent<span class="token punctuation">)</span><span class="token punctuation">;</span>                bean<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                bean<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>i <span class="token operator">+</span> longContent<span class="token punctuation">)</span><span class="token punctuation">;</span>                bean<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            mList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>ExpandFoldTextAdapter.java：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Author     wildma * DATE       2017/8/3 * Des          ${展开折叠文本适配器} */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExpandFoldTextAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>ExpandFoldTextAdapter<span class="token punctuation">.</span>MyViewHolder<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Activity mContent<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_LINE_COUNT <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//最大显示行数</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_UNKNOW <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//未知状态</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_NOT_OVERFLOW <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//文本行数小于最大可显示行数</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_COLLAPSED <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//折叠状态</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_EXPANDED <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//展开状态</span>    <span class="token comment" spellcheck="true">/**     * 注意：保存文本状态集合的key一定要是唯一的，如果用position。     * 如果使用position作为key，则删除、增加条目的时候会出现显示错乱     */</span>    <span class="token keyword">private</span> SparseArray<span class="token operator">&lt;</span>Integer<span class="token operator">></span> mTextStateList<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保存文本状态集合</span>    List<span class="token operator">&lt;</span>ExpandFoldTextBean<span class="token operator">></span> mList<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ExpandFoldTextAdapter</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>ExpandFoldTextBean<span class="token operator">></span> list<span class="token punctuation">,</span> Activity context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        mContent <span class="token operator">=</span> context<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mList <span class="token operator">=</span> list<span class="token punctuation">;</span>        mTextStateList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparseArray</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> MyViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span>ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyViewHolder</span><span class="token punctuation">(</span>mContent<span class="token punctuation">.</span><span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_expand_fold_text<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token keyword">final</span> MyViewHolder holder<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> state <span class="token operator">=</span> mTextStateList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STATE_UNKNOW<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第一次初始化，未知状态</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> STATE_UNKNOW<span class="token punctuation">)</span> <span class="token punctuation">{</span>            holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">getViewTreeObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addOnPreDrawListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewTreeObserver<span class="token punctuation">.</span>OnPreDrawListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token annotation punctuation">@Override</span>                <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onPreDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//这个回掉会调用多次，获取完行数后记得注销监听</span>                    holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">getViewTreeObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeOnPreDrawListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//holder.content.getViewTreeObserver().addOnPreDrawListener(null);</span>                    <span class="token comment" spellcheck="true">//如果内容显示的行数大于最大显示行数</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">getLineCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> MAX_LINE_COUNT<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setMaxLines</span><span class="token punctuation">(</span>MAX_LINE_COUNT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置最大显示行数</span>                        holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示“全文”</span>                        holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"全文"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        mTextStateList<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STATE_COLLAPSED<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保存状态</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>                        mTextStateList<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STATE_NOT_OVERFLOW<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setMaxLines</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置文本的最大行数，为整数的最大数值</span>            holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果之前已经初始化过了，则使用保存的状态。</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> STATE_NOT_OVERFLOW<span class="token operator">:</span>                    holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> STATE_COLLAPSED<span class="token operator">:</span>                    holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setMaxLines</span><span class="token punctuation">(</span>MAX_LINE_COUNT<span class="token punctuation">)</span><span class="token punctuation">;</span>                    holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                    holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"全文"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> STATE_EXPANDED<span class="token operator">:</span>                    holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setMaxLines</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>                    holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>                    holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"收起"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//全文和收起的点击事件</span>        holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> state <span class="token operator">=</span> mTextStateList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STATE_UNKNOW<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> STATE_COLLAPSED<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setMaxLines</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>                    holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"收起"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    mTextStateList<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STATE_EXPANDED<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> STATE_EXPANDED<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    holder<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setMaxLines</span><span class="token punctuation">(</span>MAX_LINE_COUNT<span class="token punctuation">)</span><span class="token punctuation">;</span>                    holder<span class="token punctuation">.</span>expandOrFold<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"全文"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    mTextStateList<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STATE_COLLAPSED<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//删除点击事件</span>        holder<span class="token punctuation">.</span>delete<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>                mList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> mList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> TextView nickname<span class="token punctuation">;</span>        <span class="token keyword">public</span> TextView content<span class="token punctuation">;</span>        <span class="token keyword">public</span> TextView delete<span class="token punctuation">;</span>        <span class="token keyword">public</span> TextView expandOrFold<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">MyViewHolder</span><span class="token punctuation">(</span>View itemView<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>            nickname <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_nickname<span class="token punctuation">)</span><span class="token punctuation">;</span>            content <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_content<span class="token punctuation">)</span><span class="token punctuation">;</span>            delete <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_delete<span class="token punctuation">)</span><span class="token punctuation">;</span>            expandOrFold <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_expand_or_fold<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>ExpandFoldTextBean.java：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExpandFoldTextBean</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String content<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//内容</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//该条数据的id</span>    <span class="token keyword">public</span> String <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> content<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContent</span><span class="token punctuation">(</span>String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>activity_main.xml：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>RelativeLayout    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/activity_main"</span>    xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>paddingBottom<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span>    android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>    android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>    android<span class="token operator">:</span>paddingTop<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/recyclerview"</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>RelativeLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>item_expand_fold_text.xml：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>LinearLayout xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>              android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>              android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>              android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>              android<span class="token operator">:</span>paddingBottom<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span>              android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>              android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>              android<span class="token operator">:</span>paddingTop<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>LinearLayout        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"center_vertical"</span>        android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"horizontal"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>ImageView            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"40dp"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"40dp"</span>            android<span class="token operator">:</span>layout_marginRight<span class="token operator">=</span><span class="token string">"16dp"</span>            android<span class="token operator">:</span>gravity<span class="token operator">=</span><span class="token string">"center"</span>            android<span class="token operator">:</span>scaleType<span class="token operator">=</span><span class="token string">"centerCrop"</span>            android<span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"@mipmap/ic_launcher"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>RelativeLayout            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>TextView                android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_nickname"</span>                android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>                android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>                android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"wildma"</span>                android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"@android:color/black"</span>                android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"14sp"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>TextView                android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_delete"</span>                android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>                android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>                android<span class="token operator">:</span>layout_alignParentRight<span class="token operator">=</span><span class="token string">"true"</span>                android<span class="token operator">:</span>layout_marginLeft<span class="token operator">=</span><span class="token string">"12dp"</span>                android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"5dp"</span>                android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"5dp"</span>                android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"删除"</span>                android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"@android:color/holo_red_dark"</span>                android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"14sp"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>RelativeLayout<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span>    <span class="token operator">&lt;</span>LinearLayout        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_marginLeft<span class="token operator">=</span><span class="token string">"56dp"</span>        android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>        android<span class="token operator">:</span>paddingBottom<span class="token operator">=</span><span class="token string">"8dp"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>TextView            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_content"</span>            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_marginBottom<span class="token operator">=</span><span class="token string">"8dp"</span>            android<span class="token operator">:</span>alpha<span class="token operator">=</span><span class="token string">"0.85"</span>            android<span class="token operator">:</span>ellipsize<span class="token operator">=</span><span class="token string">"end"</span>            android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"内容"</span>            android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"@android:color/black"</span>            android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"14sp"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>TextView            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_expand_or_fold"</span>            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"全文"</span>            android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"@color/colorPrimaryDark"</span>            android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"14sp"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span>    <span class="token operator">&lt;</span>View        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"0.5dp"</span>        android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"@android:color/black"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>源码地址：<a href="https://github.com/wildma/WildmaExpandFoldText" target="_blank" rel="noopener">https://github.com/wildma/WildmaExpandFoldText</a><br>参考：<a href="http://blog.csdn.net/e042kuuw/article/details/55107537" target="_blank" rel="noopener">http://blog.csdn.net/e042kuuw/article/details/55107537</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折叠文本 </tag>
            
            <tag> 全文、收起功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 利用 Glide 获取图片真正的宽高</title>
      <link href="/glide-get-image-height/"/>
      <url>/glide-get-image-height/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有时候需要获取网络图片的宽高来设置图片显示的大小，很多人会直接利用Glide的加载监听去拿图片的宽高，但是这样拿到的不是图片真正的宽高，而是图片显示在ImageView后的宽高。如下：</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token comment" spellcheck="true">//获取图片显示在ImageView后的宽高</span>        Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asBitmap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//强制Glide返回一个Bitmap对象</span>                <span class="token punctuation">.</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestListener</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Bitmap<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onException</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">,</span> String model<span class="token punctuation">,</span> Target<span class="token operator">&lt;</span>Bitmap<span class="token operator">></span> target<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFirstResource<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onException "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span>Bitmap bitmap<span class="token punctuation">,</span> String model<span class="token punctuation">,</span> Target<span class="token operator">&lt;</span>Bitmap<span class="token operator">></span> target<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFromMemoryCache<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFirstResource<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">int</span> width <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">int</span> height <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"width2 "</span> <span class="token operator">+</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//400px</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"height2 "</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//400px</span>                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>mIv_img<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>想要拿到图片真正的宽高，应该利用Glide的Target。如下：</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token comment" spellcheck="true">//获取图片真正的宽高</span>        Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asBitmap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//强制Glide返回一个Bitmap对象</span>                <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleTarget</span><span class="token operator">&lt;</span>Bitmap<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span>Bitmap bitmap<span class="token punctuation">,</span> GlideAnimation<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> Bitmap<span class="token operator">></span> glideAnimation<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">int</span> width <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">int</span> height <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"width "</span> <span class="token operator">+</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//200px</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"height "</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//200px</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><strong>MainActivity.java：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> ImageView mIv_img<span class="token punctuation">;</span>    String imgUrl <span class="token operator">=</span> <span class="token string">"https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=523024675,1399288021&amp;fm=117&amp;gp=0.jpg"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        mIv_img <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_img<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取图片真正的宽高</span>        Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asBitmap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//强制Glide返回一个Bitmap对象</span>                <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleTarget</span><span class="token operator">&lt;</span>Bitmap<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span>Bitmap bitmap<span class="token punctuation">,</span> GlideAnimation<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> Bitmap<span class="token operator">></span> glideAnimation<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">int</span> width <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">int</span> height <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"width "</span> <span class="token operator">+</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//200px</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"height "</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//200px</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取图片显示在ImageView后的宽高</span>        Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asBitmap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//强制Glide返回一个Bitmap对象</span>                <span class="token punctuation">.</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestListener</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Bitmap<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onException</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">,</span> String model<span class="token punctuation">,</span> Target<span class="token operator">&lt;</span>Bitmap<span class="token operator">></span> target<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFirstResource<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onException "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span>Bitmap bitmap<span class="token punctuation">,</span> String model<span class="token punctuation">,</span> Target<span class="token operator">&lt;</span>Bitmap<span class="token operator">></span> target<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFromMemoryCache<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFirstResource<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">int</span> width <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">int</span> height <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"width2 "</span> <span class="token operator">+</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//400px</span>                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"height2 "</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//400px</span>                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>mIv_img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>activity_main.xml：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>RelativeLayout    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/activity_main"</span>    xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>ImageView        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/iv_img"</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"200dp"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"200dp"</span>        android<span class="token operator">:</span>layout_centerInParent<span class="token operator">=</span><span class="token string">"true"</span>        android<span class="token operator">:</span>scaleType<span class="token operator">=</span><span class="token string">"centerCrop"</span>        android<span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"@mipmap/ic_launcher"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>RelativeLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Glide </tag>
            
            <tag> 图片高度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 使用友盟集成 QQ、微信、微博等第三方登录</title>
      <link href="/umeng-login/"/>
      <url>/umeng-login/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近项目需要加入第三方分享和登录功能，之前其他项目的第三方分享和登录一直都使用ShareSDK实现的。为了统一使用友盟的全家桶，所以三方分享和登录也就选择了友盟。这里记录一下完整的集成与使用流程。</p><h2 id="一、申请友盟Appkey"><a href="#一、申请友盟Appkey" class="headerlink" title="一、申请友盟Appkey"></a>一、申请友盟Appkey</h2><p>直接到<a href="http://www.umeng.com/" target="_blank" rel="noopener">友盟官网</a>申请即可。一般都不用自己去申请，跟项目经理要即可。<br>（我这里的Demo为了方便就直接用友盟Demo里面提供的Appkey，但是创建的项目包名也要和友盟一样。真实项目要自己另外申请）</p><h2 id="二、下载SDK"><a href="#二、下载SDK" class="headerlink" title="二、下载SDK"></a>二、下载SDK</h2><p>下载地址：<a href="http://dev.umeng.com/social/android/sdk-download" target="_blank" rel="noopener">http://dev.umeng.com/social/android/sdk-download</a></p><p>下载的时候根据自己需求进行选择，我这里选择选择的是精简版（包含常用的分享与登录功能），只测试微信，QQ，新浪微博。<br><img src="1.jpg" alt></p><p>下载后解压出来是这样的：<br><img src="2.jpg" alt></p><h2 id="三、准备资源"><a href="#三、准备资源" class="headerlink" title="三、准备资源"></a>三、准备资源</h2><p>使用友盟的集成工具快速集成友盟的分享SDK：双击 友盟集成工具.jar–&gt;选择使用的平台和IDE，如图：<br><img src="3.jpg" alt></p><p>点击OK键，会在当前目录生成名为umeng_integratetool_result的文件夹，如图：<br><img src="4.jpg" alt></p><h2 id="四、开始集成"><a href="#四、开始集成" class="headerlink" title="四、开始集成"></a>四、开始集成</h2><p>（1）将上面的文件夹依次粘贴到工程相应的文件夹即可，如图：<br><img src="5.jpg" alt></p><p>（2）将debug.keystore文件拷贝到项目的app目录下（对应app build中相应的位置），目的是为了使用友盟的签名，如图：<br><img src="6.jpg" alt></p><p>（3）添加回调Activity<br>微信回调：<br>其实在第一步拷贝的时候已经添加了。即在包名目录下创建wxapi文件夹，新建一个名为WXEntryActivity的activity继承WXCallbackActivity</p><p>QQ与新浪微博的回调：<br>QQ与新浪不需要添加Activity，但需要在使用QQ分享或者授权的Activity中添加如下代码：<br>（注意onActivityResult不可在fragment中实现，如果在fragment中调用登录或分享，需要在fragment依赖的Activity中实现）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> Intent data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        UMShareAPI<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）配置清单文件Android Manifest<br>添加权限：</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_FINE_LOCATION"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_COARSE_LOCATION"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加sdk中需要的Activity：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>微信<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".wxapi.WXEntryActivity"</span>            android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation|screenSize"</span>            android<span class="token operator">:</span>exported<span class="token operator">=</span><span class="token string">"true"</span>            android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span>            android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>新浪微博<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".WBShareActivity"</span>            android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation"</span>            android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.sina.weibo.sdk.action.ACTION_SDK_REQ_ACTIVITY"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>qq精简版<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.umeng.qq.tencent.AuthActivity"</span>            android<span class="token operator">:</span>launchMode<span class="token operator">=</span><span class="token string">"singleTask"</span>            android<span class="token operator">:</span>noHistory<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.VIEW"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.BROWSABLE"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>这里的scheme是qq分享要用的，<span class="token number">100424468</span>为自己申请的appid，真实项目中需要替换<span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>data android<span class="token operator">:</span>scheme<span class="token operator">=</span><span class="token string">"tencent100424468"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.umeng.qq.tencent.AssistActivity"</span>            android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"orientation|keyboardHidden|screenSize"</span>            android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span>            android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>分享编辑页<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.umeng.socialize.editorpage.ShareActivity"</span>            android<span class="token operator">:</span>excludeFromRecents<span class="token operator">=</span><span class="token string">"true"</span>            android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@style/Theme.UMDefault"</span>            <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加友盟appkey：</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"UMENG_APPKEY"</span>            android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"561cae6ae0f55abd990035bf"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>meta<span class="token operator">-</span>data<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（5）配置三方appkey<br>新建MyApplication继承Application（注意：需要在清单文件中配置该MyApplication），在MyApplication文件中配置三方平台的appkey和初始化sdk。如下:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        UMShareAPI<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化sdk</span>        <span class="token comment" spellcheck="true">//开启debug模式，方便定位错误，具体错误检查方式可以查看http://dev.umeng.com/social/android/quick-integration的报错必看，正式发布，请关闭该模式</span>        Config<span class="token punctuation">.</span>DEBUG <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//各个平台的配置</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//微信</span>        PlatformConfig<span class="token punctuation">.</span><span class="token function">setWeixin</span><span class="token punctuation">(</span><span class="token string">"wxdc1e388c3822c80b"</span><span class="token punctuation">,</span> <span class="token string">"3baf1193c85774b3fd9d18447d76cab0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//新浪微博(第三个参数为回调地址)</span>        PlatformConfig<span class="token punctuation">.</span><span class="token function">setSinaWeibo</span><span class="token punctuation">(</span><span class="token string">"3921700954"</span><span class="token punctuation">,</span> <span class="token string">"04b48b094faeb16683c32669824ebdad"</span><span class="token punctuation">,</span><span class="token string">"http://sns.whalecloud.com/sina2/callback"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//QQ</span>        PlatformConfig<span class="token punctuation">.</span><span class="token function">setQQZone</span><span class="token punctuation">(</span><span class="token string">"100424468"</span><span class="token punctuation">,</span> <span class="token string">"c7394704798a158208a74ab60104f0ba"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（6）登录代码MainActivity.java：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">qqLogin</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">authorization</span><span class="token punctuation">(</span>SHARE_MEDIA<span class="token punctuation">.</span>QQ<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">weiXinLogin</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">authorization</span><span class="token punctuation">(</span>SHARE_MEDIA<span class="token punctuation">.</span>WEIXIN<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sinaLogin</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">authorization</span><span class="token punctuation">(</span>SHARE_MEDIA<span class="token punctuation">.</span>SINA<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//授权</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">authorization</span><span class="token punctuation">(</span>SHARE_MEDIA share_media<span class="token punctuation">)</span> <span class="token punctuation">{</span>        UMShareAPI<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPlatformInfo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> share_media<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">UMAuthListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span>SHARE_MEDIA share_media<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onStart "</span> <span class="token operator">+</span> <span class="token string">"授权开始"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span>SHARE_MEDIA share_media<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onComplete "</span> <span class="token operator">+</span> <span class="token string">"授权完成"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//sdk是6.4.4的,但是获取值的时候用的是6.2以前的(access_token)才能获取到值,未知原因</span>                String uid <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"uid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String openid <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"openid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//微博没有</span>                String unionid <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"unionid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//微博没有</span>                String access_token <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"access_token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String refresh_token <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"refresh_token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//微信,qq,微博都没有获取到</span>                String expires_in <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"expires_in"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String name <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String gender <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"gender"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String iconurl <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"iconurl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">",gender="</span> <span class="token operator">+</span> gender<span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//拿到信息去请求登录接口。。。</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>SHARE_MEDIA share_media<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> Throwable throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onError "</span> <span class="token operator">+</span> <span class="token string">"授权失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCancel</span><span class="token punctuation">(</span>SHARE_MEDIA share_media<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onCancel "</span> <span class="token operator">+</span> <span class="token string">"授权取消"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> Intent data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        UMShareAPI<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：<br><img src="7.jpg" alt></p><p>Demo下载地址：<a href="https://github.com/wildma/UMengThirdPartyShareLogin" target="_blank" rel="noopener">https://github.com/wildma/UMengThirdPartyShareLogin</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三方登录 </tag>
            
            <tag> 友盟登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 使用友盟集成 QQ、微信、微博等第三方分享</title>
      <link href="/umeng-share/"/>
      <url>/umeng-share/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近项目需要加入第三方分享和登录功能，之前其他项目的第三方分享和登录一直都使用ShareSDK实现的。为了统一使用友盟的全家桶，所以三方分享和登录也就选择了友盟。这里记录一下完整的集成与使用流程。</p><h2 id="一、申请友盟Appkey"><a href="#一、申请友盟Appkey" class="headerlink" title="一、申请友盟Appkey"></a>一、申请友盟Appkey</h2><p>直接到<a href="http://www.umeng.com/" target="_blank" rel="noopener">友盟官网</a>申请即可。一般都不用自己去申请，跟项目经理要即可。<br>（我这里的Demo为了方便就直接用友盟Demo里面提供的Appkey，但是创建的项目包名也要和友盟一样。真实项目要自己另外申请）</p><h2 id="二、下载SDK"><a href="#二、下载SDK" class="headerlink" title="二、下载SDK"></a>二、下载SDK</h2><p>下载地址：<a href="http://dev.umeng.com/social/android/sdk-download" target="_blank" rel="noopener">http://dev.umeng.com/social/android/sdk-download</a></p><p>下载的时候根据自己需求进行选择，我这里选择选择的是精简版（包含常用的分享与登录功能），只测试微信，QQ，新浪微博。<br><img src="1.jpg" alt></p><p>下载后解压出来是这样的：<br><img src="2.jpg" alt></p><h2 id="三、准备资源"><a href="#三、准备资源" class="headerlink" title="三、准备资源"></a>三、准备资源</h2><p>使用友盟的集成工具快速集成友盟的分享SDK：双击 友盟集成工具.jar–&gt;选择使用的平台和IDE，如图：<br><img src="3.jpg" alt></p><p>点击OK键，会在当前目录生成名为umeng_integratetool_result的文件夹，如图：<br><img src="4.jpg" alt></p><h2 id="四、开始集成"><a href="#四、开始集成" class="headerlink" title="四、开始集成"></a>四、开始集成</h2><p>（1）将上面的文件夹依次粘贴到工程相应的文件夹即可，如图：<br><img src="5.jpg" alt></p><p>（2）将debug.keystore文件拷贝到项目的app目录下（对应app build中相应的位置），目的是为了使用友盟的签名，如图：<br><img src="6.jpg" alt></p><p>（3）添加回调Activity<br>微信回调：<br>其实在第一步拷贝的时候已经添加了。即在包名目录下创建wxapi文件夹，新建一个名为WXEntryActivity的activity继承WXCallbackActivity</p><p>QQ与新浪微博的回调：<br>QQ与新浪不需要添加Activity，但需要在使用QQ分享或者授权的Activity中添加如下代码：<br>（注意onActivityResult不可在fragment中实现，如果在fragment中调用登录或分享，需要在fragment依赖的Activity中实现）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> Intent data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        UMShareAPI<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）配置清单文件Android Manifest<br>添加权限：</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_FINE_LOCATION"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_COARSE_LOCATION"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加sdk中需要的Activity：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>微信<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".wxapi.WXEntryActivity"</span>            android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation|screenSize"</span>            android<span class="token operator">:</span>exported<span class="token operator">=</span><span class="token string">"true"</span>            android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span>            android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>新浪微博<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".WBShareActivity"</span>            android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation"</span>            android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.sina.weibo.sdk.action.ACTION_SDK_REQ_ACTIVITY"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>qq精简版<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.umeng.qq.tencent.AuthActivity"</span>            android<span class="token operator">:</span>launchMode<span class="token operator">=</span><span class="token string">"singleTask"</span>            android<span class="token operator">:</span>noHistory<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.VIEW"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.BROWSABLE"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>这里的scheme是qq分享要用的，<span class="token number">100424468</span>为自己申请的appid，真实项目中需要替换<span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>data android<span class="token operator">:</span>scheme<span class="token operator">=</span><span class="token string">"tencent100424468"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.umeng.qq.tencent.AssistActivity"</span>            android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"orientation|keyboardHidden|screenSize"</span>            android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span>            android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>分享编辑页<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.umeng.socialize.editorpage.ShareActivity"</span>            android<span class="token operator">:</span>excludeFromRecents<span class="token operator">=</span><span class="token string">"true"</span>            android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@style/Theme.UMDefault"</span>            <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加友盟appkey：</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"UMENG_APPKEY"</span>            android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"561cae6ae0f55abd990035bf"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>meta<span class="token operator">-</span>data<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（5）配置三方appkey<br>新建MyApplication继承Application（注意：需要在清单文件中配置该MyApplication），在MyApplication文件中配置三方平台的appkey和初始化sdk。如下:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        UMShareAPI<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化sdk</span>        <span class="token comment" spellcheck="true">//开启debug模式，方便定位错误，具体错误检查方式可以查看http://dev.umeng.com/social/android/quick-integration的报错必看，正式发布，请关闭该模式</span>        Config<span class="token punctuation">.</span>DEBUG <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//各个平台的配置</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//微信</span>        PlatformConfig<span class="token punctuation">.</span><span class="token function">setWeixin</span><span class="token punctuation">(</span><span class="token string">"wxdc1e388c3822c80b"</span><span class="token punctuation">,</span> <span class="token string">"3baf1193c85774b3fd9d18447d76cab0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//新浪微博(第三个参数为回调地址)</span>        PlatformConfig<span class="token punctuation">.</span><span class="token function">setSinaWeibo</span><span class="token punctuation">(</span><span class="token string">"3921700954"</span><span class="token punctuation">,</span> <span class="token string">"04b48b094faeb16683c32669824ebdad"</span><span class="token punctuation">,</span><span class="token string">"http://sns.whalecloud.com/sina2/callback"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//QQ</span>        PlatformConfig<span class="token punctuation">.</span><span class="token function">setQQZone</span><span class="token punctuation">(</span><span class="token string">"100424468"</span><span class="token punctuation">,</span> <span class="token string">"c7394704798a158208a74ab60104f0ba"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（6）分享代码MainActivity.java：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String TAG <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">qq</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ShareUtils<span class="token punctuation">.</span><span class="token function">shareWeb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>url<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>title                <span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>text<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>imageurl<span class="token punctuation">,</span> R<span class="token punctuation">.</span>mipmap<span class="token punctuation">.</span>icon_logo_share<span class="token punctuation">,</span> SHARE_MEDIA<span class="token punctuation">.</span>QQ        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">weiXin</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ShareUtils<span class="token punctuation">.</span><span class="token function">shareWeb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>url<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>title                <span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>text<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>imageurl<span class="token punctuation">,</span> R<span class="token punctuation">.</span>mipmap<span class="token punctuation">.</span>icon_logo_share<span class="token punctuation">,</span> SHARE_MEDIA<span class="token punctuation">.</span>WEIXIN        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">weixinCircle</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ShareUtils<span class="token punctuation">.</span><span class="token function">shareWeb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>url<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>title                <span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>text<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>imageurl<span class="token punctuation">,</span> R<span class="token punctuation">.</span>mipmap<span class="token punctuation">.</span>icon_logo_share<span class="token punctuation">,</span> SHARE_MEDIA<span class="token punctuation">.</span>WEIXIN_CIRCLE        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sina</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ShareUtils<span class="token punctuation">.</span><span class="token function">shareWeb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>url<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>title                <span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>text<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>imageurl<span class="token punctuation">,</span> R<span class="token punctuation">.</span>mipmap<span class="token punctuation">.</span>icon_logo_share<span class="token punctuation">,</span> SHARE_MEDIA<span class="token punctuation">.</span>SINA        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">Qzone</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ShareUtils<span class="token punctuation">.</span><span class="token function">shareWeb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>url<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>title                <span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>text<span class="token punctuation">,</span> Defaultcontent<span class="token punctuation">.</span>imageurl<span class="token punctuation">,</span> R<span class="token punctuation">.</span>mipmap<span class="token punctuation">.</span>icon_logo_share<span class="token punctuation">,</span> SHARE_MEDIA<span class="token punctuation">.</span>QZONE        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> Intent data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        UMShareAPI<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（7）分享工具类ShareUtils.java：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShareUtils</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 分享链接     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">shareWeb</span><span class="token punctuation">(</span><span class="token keyword">final</span> Activity activity<span class="token punctuation">,</span> String WebUrl<span class="token punctuation">,</span> String title<span class="token punctuation">,</span> String description<span class="token punctuation">,</span> String imageUrl<span class="token punctuation">,</span> <span class="token keyword">int</span> imageID<span class="token punctuation">,</span> SHARE_MEDIA platform<span class="token punctuation">)</span> <span class="token punctuation">{</span>        UMWeb web <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UMWeb</span><span class="token punctuation">(</span>WebUrl<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//连接地址</span>        web<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//标题</span>        web<span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//描述</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>TextUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>imageUrl<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            web<span class="token punctuation">.</span><span class="token function">setThumb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UMImage</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> imageID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//本地缩略图</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            web<span class="token punctuation">.</span><span class="token function">setThumb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UMImage</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> imageUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//网络缩略图</span>        <span class="token punctuation">}</span>        <span class="token keyword">new</span> <span class="token class-name">ShareAction</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setPlatform</span><span class="token punctuation">(</span>platform<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withMedia</span><span class="token punctuation">(</span>web<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setCallback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UMShareListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span>SHARE_MEDIA share_media<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token keyword">final</span> SHARE_MEDIA share_media<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        activity<span class="token punctuation">.</span><span class="token function">runOnUiThread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token annotation punctuation">@Override</span>                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>share_media<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"WEIXIN_FAVORITE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> share_media <span class="token operator">+</span> <span class="token string">" 收藏成功"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> share_media <span class="token operator">+</span> <span class="token string">" 分享成功"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">final</span> SHARE_MEDIA share_media<span class="token punctuation">,</span> <span class="token keyword">final</span> Throwable throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>throwable <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"throw"</span><span class="token punctuation">,</span> <span class="token string">"throw:"</span> <span class="token operator">+</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        activity<span class="token punctuation">.</span><span class="token function">runOnUiThread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token annotation punctuation">@Override</span>                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> share_media <span class="token operator">+</span> <span class="token string">" 分享失败"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token keyword">final</span> SHARE_MEDIA share_media<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        activity<span class="token punctuation">.</span><span class="token function">runOnUiThread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token annotation punctuation">@Override</span>                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> share_media <span class="token operator">+</span> <span class="token string">" 分享取消"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">share</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//新浪微博中图文+链接</span>        <span class="token comment" spellcheck="true">/*new ShareAction(activity)                .setPlatform(platform)                .withText(description + " " + WebUrl)                .withMedia(new UMImage(activity,imageID))                .share();*/</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：<br><img src="7.jpg" alt></p><p>Demo下载地址：<a href="https://github.com/wildma/UMengThirdPartyShareLogin" target="_blank" rel="noopener">https://github.com/wildma/UMengThirdPartyShareLogin</a><br>如果对你有帮助，点个star就是对我最大的支持~</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三方分享 </tag>
            
            <tag> 友盟分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热修复框架 Tinker 最完整讲解（03）——使用 Tinker 常见问题</title>
      <link href="/hot-fix-tinker-3-question/"/>
      <url>/hot-fix-tinker-3-question/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>该系列第一篇文章<a href="https://wildma.github.io/hot-fix-tinker-1-integrate/"> 热修复框架Tinker最完整讲解（01）——集成之路</a> 主要讲了tinker的集成，第二篇文章<a href="https://wildma.github.io/hot-fix-tinker-2-walle/">热修复框架Tinker最完整讲解（02）——加入Walle多渠道打包</a>主要讲了Tinker与Walle多渠道打包在项目中的使用。这篇文章主要讲讲真实项目中使用Tinker的常见问题。</p><h2 id="一、存放补丁包的平台选取"><a href="#一、存放补丁包的平台选取" class="headerlink" title="一、存放补丁包的平台选取"></a>一、存放补丁包的平台选取</h2><p>1，存放在自己公司的服务器<br>2，使用TinkerPatch平台，需要收费<br>3，腾讯Bugly平台，免费<br>为了安全与经济考虑，我们公司选取了第一种。大家可以根据自己的需要选择。</p><h2 id="二、tinkerId应该如何选择？"><a href="#二、tinkerId应该如何选择？" class="headerlink" title="二、tinkerId应该如何选择？"></a>二、tinkerId应该如何选择？</h2><p>tinkerId主要作用是区分当前打出的补丁包是基于哪个版本的apk，也就是说当前打出的补丁包能修复哪个版本的bug。每次发布版本需要保证tinkerId一定是要唯一性的，Tiker官方推荐使用git版本号或者versionName作为tinkerId。我自己项目使用的是versionName，你可以将versionName配置在项目的gradle.properties文件中，这样就不用每次都修改tinkerId了。如图：<br><img src="1.jpg" alt></p><p><img src="2.jpg" alt></p><p><img src="3.jpg" alt></p><h2 id="三、后台接口的设计"><a href="#三、后台接口的设计" class="headerlink" title="三、后台接口的设计"></a>三、后台接口的设计</h2><p>问题:如果A用户用1.0.0版本的APK，B用户用2.0.0版本的APK，这个时候1.0.0和2.0.0都有对应的补丁包。接口该怎么设计?</p><p>方案: (可以保证用1.0.0还是2.0.0的用户都可以修复)<br>叫后台给一个接口,前端传versionName给后台(这里的versionName要保证和TinkerID一样), 传1.0.0后台就返回1.0.0的补丁包。传2.0.0后台则返回2.0.0的补丁包。字段后台返回一个补丁包的链接就可以了，每次更新补丁包后台都要换不同的链接（下面前端设计有讲到）。没有则返回空。</p><h2 id="四、前端设计与问题"><a href="#四、前端设计与问题" class="headerlink" title="四、前端设计与问题"></a>四、前端设计与问题</h2><p>问题: 前端下载APK的时机和逻辑<br>方案: 放在启动页-SplashActivity请求比较好(越早请求越好),每次都去请求,把请求回来的链接保存在本地,进行对比,链接不一样则下载补丁包并加载。链接一样则不用重复下载。</p><p>问题: 前端下载的时候需不需要提示用户?<br>方案: 这个看产品经理的需求,一般可以不提示,我修复bug告诉你干嘛…</p><p>问题: 如果1.0.0版本上线后,过了很久才发现有bug, 我的trunk主线代码已经改了很多了。这个时候打补丁包那不是把其他代码也认为是差异的代码,然后直接加载补丁包到1.0.0的apk上?这样不合理吧？<br>方案:<br>发布1.0.0版本后, 新建一个1.0.0的分支, 然后在1.0.0分支上修改bug，打出补丁包发给后台，最后把1.0.0的代码merge到trunk主线即可。</p><p>问题: 要给同一个版本多次打补丁包,又怎样弄呢?<br>直接在每次发布版本新建的分支上修复bug，然后每次打不同的补丁包，就需要叫后台返回不通的连接（为了区分该补丁包是否已加载过，上面后台接口的设计有讲到）。即都要以发布时的版本作为基础包进行bug修改。</p><p>问题：加载补丁包后，怎样才能让修改的bug生效呢？<br>解决：因为Tinker不是即时生效的。所以我们这里不用处理，加载完补丁包，用户退出下次进来就自然生效。</p><h2 id="五、华为H60-L03-Android4-4-2手机上运行直接crash"><a href="#五、华为H60-L03-Android4-4-2手机上运行直接crash" class="headerlink" title="五、华为H60-L03 Android4.4.2手机上运行直接crash"></a>五、华为H60-L03 Android4.4.2手机上运行直接crash</h2><p>最近测试的时候将项目运行在华为荣耀6（H60-L03）Android版本4.4.2的手机上就直接crash了，找资料发现其他人测试红米2A Android4.4.4，华为 MT7-TL00 Android4.4.2都会出现同样的问题（猜测5.0以下的手机都会出现该问题）。错误日志如下：</p><pre class="line-numbers language-java"><code class="language-java">Caused by<span class="token operator">:</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>TinkerRuntimeException<span class="token operator">:</span> Tinker Exception<span class="token operator">:</span>createDelegate failedTinker<span class="token punctuation">.</span>UncaughtHandler<span class="token operator">:</span> <span class="token keyword">catch</span> exception when loading tinker<span class="token operator">:</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>RuntimeException<span class="token operator">:</span> Unable to instantiate application tinker<span class="token punctuation">.</span>sample<span class="token punctuation">.</span>android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>SampleApplication<span class="token operator">:</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>TinkerRuntimeException<span class="token operator">:</span> Tinker Exception<span class="token operator">:</span>createDelegate failedCaused by<span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ClassNotFoundException<span class="token operator">:</span> Didn't find <span class="token keyword">class</span> <span class="token string">"com.wildma.wildmatinker.global.MyApplication"</span> on path<span class="token operator">:</span> DexPathList<span class="token punctuation">[</span><span class="token punctuation">[</span>zip file <span class="token string">"/system/framework/org.simalliance.openmobileapi.jar"</span><span class="token punctuation">,</span> zip file <span class="token string">"/data/app/com.wildma.wildmatinker-1.apk"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>nativeLibraryDirectories<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">-</span>lib<span class="token operator">/</span>com<span class="token punctuation">.</span>wildma<span class="token punctuation">.</span>wildmatinker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">/</span>vendor<span class="token operator">/</span>lib<span class="token punctuation">,</span> <span class="token operator">/</span>system<span class="token operator">/</span>lib<span class="token punctuation">,</span> <span class="token operator">/</span>data<span class="token operator">/</span>datalib<span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经过自己测试，发现只有将tinkerEnabled设置为false的时候运行在该手机上才会报错。最后在issues上找到作者解释说是分包问题，如果关了tinkerEnabled。需要将ApplicationLike类放在main dex keep</p><p>解决一：打开tinkerEnabled</p><p>解决二：如果想在关闭tinkerEnabled的时候又运行在5.0以下的手机上, 那必须自己写分包规则。<br>1，将app/build/intermediates/tinker_intermediates/tinker_multidexkeep.pro文件复制到app的根目录下<br>2，在app build中对对应该文件即可。</p><pre class="line-numbers language-java"><code class="language-java">    defaultConfig <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//其他。。。</span>        <span class="token comment" spellcheck="true">//tinker分包规则</span>        multiDexKeepProguard <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">"./tinker_multidexkeep.pro"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//keep specific classes using proguard syntax</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Tinker系列文章讲的已经非常详细了，有不足的地方希望指出。遇到不懂的问题都可以直接在博客下评论问我，只要我遇到过并且能回答出来的都会乐意回答。</p><p>Demo下载地址：<a href="https://github.com/wildma/WildmaTinker" target="_blank" rel="noopener">https://github.com/wildma/WildmaTinker</a><br>如果对你有帮助请点赞，star支持下哈~</p><h2 id="热修复Tinker系列文章"><a href="#热修复Tinker系列文章" class="headerlink" title="热修复Tinker系列文章"></a>热修复Tinker系列文章</h2><ul><li><a href="https://wildma.github.io/hot-fix-tinker-1-integrate/">热修复框架Tinker最完整讲解（01）——集成之路</a></li><li><a href="https://wildma.github.io/hot-fix-tinker-2-walle/">热修复框架Tinker最完整讲解（02）——加入Walle多渠道打包</a></li><li><a href="https://wildma.github.io/hot-fix-tinker-3-question/">热修复框架Tinker最完整讲解（03）——使用Tinker常见问题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
          <category> 热修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热修复 </tag>
            
            <tag> Tinker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热修复框架 Tinker 最完整讲解（02）——加入 Walle 多渠道打包</title>
      <link href="/hot-fix-tinker-2-walle/"/>
      <url>/hot-fix-tinker-2-walle/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上一篇文章<a href="https://wildma.github.io/hot-fix-tinker-1-integrate/"> 热修复框架Tinker最完整讲解（01）——集成之路</a> 已经介绍我们的项目渠道包有20个，并且我们多渠道打包是采用productFlavors实现的。但是这种多渠道打包会造成20个渠道包的热更新就需要20个补丁，这样肯定是不合理的。那怎样才能实现20个渠道包只需要一个补丁包呢？Tinker官方也说了，推荐我们多渠道打包使用Walle，这样就能实现多个渠道包只使用一个补丁包了！</p><h2 id="一、什么是Walle？"><a href="#一、什么是Walle？" class="headerlink" title="一、什么是Walle？"></a>一、什么是Walle？</h2><p>Walle（瓦力）：Android Signature V2 Scheme签名下的新一代渠道包打包神器。<br>瓦力通过在Apk中的APK Signature Block区块添加自定义的渠道信息来生成渠道包，从而提高了渠道包生成效率，可以作为单机工具来使用，也可以部署在HTTP服务器上来实时处理渠道包Apk的升级网络请求。<br>——介绍来自<a href="https://github.com/Meituan-Dianping/walle" target="_blank" rel="noopener">Walle</a></p><h2 id="二、集成"><a href="#二、集成" class="headerlink" title="二、集成"></a>二、集成</h2><p>为了方便大家的使用，Walle提供了2种使用方式：（这里主要讲常用的第一种方式）</p><ul><li>Gradle插件方式，方便快速集成</li><li>命令行方式，最大化满足各种自定义需求</li></ul><p><strong>配置build.gradle：</strong></p><p>（1）在项目的build.gradle 文件中添加Walle Gradle插件的依赖， 如下：</p><pre class="line-numbers language-java"><code class="language-java">buildscript <span class="token punctuation">{</span>    dependencies <span class="token punctuation">{</span>        classpath <span class="token string">'com.meituan.android.walle:plugin:1.1.4'</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）在app的 build.gradle 文件中apply这个插件，并添加上用于读取渠道号的AAR，如下：</p><pre class="line-numbers language-java"><code class="language-java">apply plugin<span class="token operator">:</span> <span class="token string">'walle'</span>dependencies <span class="token punctuation">{</span>    compile <span class="token string">'com.meituan.android.walle:library:1.1.4'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）在app的 build.gradle 文件中配置插件，如下：</p><pre class="line-numbers language-java"><code class="language-java">walle <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 指定渠道包的输出路径</span>    apkOutputFolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"${project.buildDir}/outputs/channels"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 定制渠道包的APK的文件名称</span>    apkFileNameFormat <span class="token operator">=</span> <span class="token string">'${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 渠道配置文件</span>    channelFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"${project.getProjectDir()}/channel"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置项具体解释：</p><pre class="line-numbers language-java"><code class="language-java">apkOutputFolder：指定渠道包的输出路径， 默认值为<span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"${project.buildDir}/outputs/apk"</span><span class="token punctuation">)</span>apkFileNameFormat：定制渠道包的APK的文件名称<span class="token punctuation">,</span> 默认值为<span class="token string">'${appName}-${buildType}-${channel}.apk'</span>可使用以下变量<span class="token operator">:</span>     projectName <span class="token operator">-</span> 项目名字     appName <span class="token operator">-</span> App模块名字     packageName <span class="token operator">-</span> <span class="token function">applicationId</span> <span class="token punctuation">(</span>App包名packageName<span class="token punctuation">)</span>     buildType <span class="token operator">-</span> <span class="token function">buildType</span> <span class="token punctuation">(</span>release<span class="token operator">/</span>debug等<span class="token punctuation">)</span>     channel <span class="token operator">-</span> channel名称 <span class="token punctuation">(</span>对应渠道打包中的渠道名字<span class="token punctuation">)</span>     versionName <span class="token operator">-</span> <span class="token function">versionName</span> <span class="token punctuation">(</span>显示用的版本号<span class="token punctuation">)</span>     versionCode <span class="token operator">-</span> <span class="token function">versionCode</span> <span class="token punctuation">(</span>内部版本号<span class="token punctuation">)</span>     buildTime <span class="token operator">-</span> <span class="token function">buildTime</span> <span class="token punctuation">(</span>编译构建日期时间<span class="token punctuation">)</span>     fileSHA1 <span class="token operator">-</span> <span class="token function">fileSHA1</span> <span class="token punctuation">(</span>最终APK文件的SHA1哈希值<span class="token punctuation">)</span>     flavorName <span class="token operator">-</span> 编译构建 productFlavors 名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>channelFile：包含渠道配置信息的文件路径：</p><p>在app目录下新建名为channel的文件，如图</p><p><img src="1.jpg" alt></p><p>在该文件里写上需要打包的渠道号（渠道号支持使用#号添加注释。具体内容格式详见下图，这里只测试2个渠道）</p><p><img src="2.jpg" alt></p><h2 id="三、相关API和命令"><a href="#三、相关API和命令" class="headerlink" title="三、相关API和命令"></a>三、相关API和命令</h2><p><strong>获取渠道信息：</strong><br>在需要渠道等信息时可以通过下面代码进行获取</p><pre class="line-numbers language-java"><code class="language-java">String channel <span class="token operator">=</span> WalleChannelReader<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>生成渠道包：</strong><br>生成渠道包的方式是和assemble${variantName}Channels指令结合，渠道包的生成目录默认存放在 build/outputs/apk/，也可以通过walle闭包中的apkOutputFolder参数来指定输出目录</p><pre><code>生成渠道包 ./gradlew clean assembleReleaseChannels</code></pre><p>更多API和命令可参考 <a href="https://github.com/Meituan-Dianping/walle#%E6%9B%B4%E5%A4%9A%E7%94%A8%E6%B3%95" target="_blank" rel="noopener">更多用法</a></p><h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><p>在Android Studio的Terminal中输入命令gradlew clean assembleReleaseChannels进行多渠道打包,当运行完成会出现BUILD SUCCESSFUL, 如图：</p><p><img src="3.jpg" alt></p><p>并且会在channels文件夹中生成所有渠道的apk，如图：<br><img src="4.jpg" alt></p><p>一一对应关系为：<br><img src="5.jpg" alt></p><h2 id="五、Tinker与Walle在真实项目中的使用流程"><a href="#五、Tinker与Walle在真实项目中的使用流程" class="headerlink" title="五、Tinker与Walle在真实项目中的使用流程"></a>五、Tinker与Walle在真实项目中的使用流程</h2><p>上一篇文章<a href="https://wildma.github.io/hot-fix-tinker-1-integrate/"> 热修复框架Tinker最完整讲解（01）——集成之路</a> 主要修复的是单个渠道包，这里结合Walle修复多个渠道包。</p><h3 id="5-1-发布版本流程"><a href="#5-1-发布版本流程" class="headerlink" title="5.1 发布版本流程"></a>5.1 发布版本流程</h3><p>（1）我们在发布版本的时候都需要改版本号，因为我这里使用版本名称作为tinkerId，所以发布版本修改版本名称的时候，tinkerId也要跟着修改。(tinkerId主要作用是当前打出的补丁包是基于哪个版本的apk, tinkerId的选取见我下一篇文章 <a href="https://wildma.github.io/hot-fix-tinker-3-question/">热修复框架Tinker最完整讲解（03）——使用Tinker常见问题</a>。</p><p><img src="6.jpg" alt></p><p>（2）检查app build中是否开启了热修复功能, 即tinkerEnabled需要设置为true。如图：<br><img src="7.jpg" alt></p><p>（3）打包前先建一个当前版本的分支！！！（热更新修复bug就在该分支上修改）</p><p>（4）在AS的Terminal中输入命令gradlew clean assembleReleaseChannels进行多渠道打包<br>命令行运行完成会在channels文件夹中生成所有渠道的apk， 如图：<br><img src="8.jpg" alt></p><p>（5）同时会在bakApk文件中生成三个文件，如图： （这三个文件需要保存在本地，svn或者git服务器，每次发布补丁包的时候需要用到！）<br><img src="9.jpg" alt></p><h3 id="5-2-发补丁包流程"><a href="#5-2-发补丁包流程" class="headerlink" title="5.2 发补丁包流程"></a>5.2 发补丁包流程</h3><p>（1）在新建的分支上修改bug</p><p>（2）将发布版本第5步中的三个文件路径复制到app build中对应的位置，如图：<br><img src="10.jpg" alt></p><p>（3）修改bug</p><p>（4）运行补丁命令获取补丁包。单击AS右侧顶部gradle，双击tinkerPatchRelease，如图:<br><img src="11.jpg" alt></p><p>（5）运行完成会在build-&gt;outputs-&gt;tinkerPatch-&gt;release文件夹中生成一个名为patch_signed_7zip.apk的补丁包，如图：<br><img src="12.jpg" alt></p><p>（6）将该补丁包重修修改名字后发给后台（注意：这里的一个补丁包就适用于各个渠道包！），关于补丁包的存放与后台设计请看下一篇文章<a href="https://wildma.github.io/hot-fix-tinker-3-question/">热修复框架Tinker最完整讲解（03）——使用Tinker常见问题</a>。</p><p>（7）bug修改完成后将该分支合并到trunk主干上即可。这样能保证分支上修改了bug，trunk主干上也跟着更新了。</p><p>Tinker系列文章讲的已经非常详细了，有不足的地方希望指出。遇到不懂的问题都可以直接在博客下评论问我，只要我遇到过并且能回答出来的都会乐意回答。</p><p>Demo下载地址：<a href="https://github.com/wildma/WildmaTinker" target="_blank" rel="noopener">https://github.com/wildma/WildmaTinker</a><br>如果对你有帮助请点赞，star支持下哈~</p><h2 id="热修复Tinker系列文章"><a href="#热修复Tinker系列文章" class="headerlink" title="热修复Tinker系列文章"></a>热修复Tinker系列文章</h2><ul><li><a href="https://wildma.github.io/hot-fix-tinker-1-integrate/">热修复框架Tinker最完整讲解（01）——集成之路</a></li><li><a href="https://wildma.github.io/hot-fix-tinker-2-walle/">热修复框架Tinker最完整讲解（02）——加入Walle多渠道打包</a></li><li><a href="https://wildma.github.io/hot-fix-tinker-3-question/">热修复框架Tinker最完整讲解（03）——使用Tinker常见问题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
          <category> 热修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热修复 </tag>
            
            <tag> Tinker </tag>
            
            <tag> 多渠道打包 </tag>
            
            <tag> Walle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热修复框架 Tinker 最完整讲解（01）——集成之路</title>
      <link href="/hot-fix-tinker-1-integrate/"/>
      <url>/hot-fix-tinker-1-integrate/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2017/09/22 更新：为了同步Tinker官方，故将github上的Demo中的Tinker版本升级到了1.8.1（不要使用1.8.0的版本，该版本不支持加固）。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上个月我们的产品又更新了一个版本，当一个测试把产品上传了十几个应用市场的时候，另外一个测试突然测出一个重要bug。项目经理就说把全部渠道上传的先退回来，重新改好bug再发布。这时候我们就苦逼了，又要走一遍 签名打包-&gt;加固-&gt;签名-&gt;上传应用市场的流程。要知道我们的渠道有接近20个，整个流程又要花上2，3小时。只能全部加班加点了。。。 </p><p>为了解决有一个bug又要重新发布版本的问题，项目经理就叫我赶紧把热修复集成到项目中去。一开始觉得3天就能搞定，就跟项目经理要了4天时间。结果是整整搞了5天！集成tinker Demo确实一天可以搞定，但是还要自定义Application类（我们项目的Application还比较复杂），集成美团Walle多渠道打包（我们以前多渠道打包是采用productFlavors实现的），与后台沟通接口的设计（补丁包的存放），svn的分支管理，测试整个流程等等就花了很多时间了。这其中遇到了很多坑和问题。这个系列文章都会一一讲解，新手看了肯定会少走很多弯路。</p><h2 id="一、Tinker是什么"><a href="#一、Tinker是什么" class="headerlink" title="一、Tinker是什么"></a>一、Tinker是什么</h2><p>Tinker是微信官方的Android热补丁解决方案，它支持动态下发代码、So库以及资源，让应用能够在不需要重新安装的情况下实现更新。当然，你也可以使用Tinker来更新你的插件。</p><h2 id="二、为什么使用Tinker"><a href="#二、为什么使用Tinker" class="headerlink" title="二、为什么使用Tinker"></a>二、为什么使用Tinker</h2><p>当前市面的热补丁方案有很多，其中比较出名的有阿里的AndFix、美团的Robust以及QZone的超级补丁方案。但它们都存在无法解决的问题，这也是正是我们推出Tinker的原因。<br><img src="1.jpg" alt></p><p>总的来说:<br>1、AndFix作为native解决方案，首先面临的是稳定性与兼容性问题，更重要的是它无法实现类替换，它是需要大量额外的开发成本的；<br>2、Robust兼容性与成功率较高，但是它与AndFix一样，无法新增变量与类只能用做的bugFix方案；<br>3、Qzone方案可以做到发布产品功能，但是它主要问题是插桩带来Dalvik的性能问题，以及为了解决Art下内存地址问题而导致补丁包急速增大的。</p><p>  特别是在Android N之后，由于混合编译的inline策略修改，对于市面上的各种方案都不太容易解决。而Tinker热补丁方案不仅支持类、So以及资源的替换，它还是2.X－7.X的全平台支持。利用Tinker我们不仅可以用做bugfix,甚至可以替代功能的发布。Tinker已运行在微信的数亿Android设备上，那么为什么你不使用Tinker呢？</p><h2 id="三、Tinker的已知问题"><a href="#三、Tinker的已知问题" class="headerlink" title="三、Tinker的已知问题"></a>三、Tinker的已知问题</h2><p> 由于原理与系统限制，Tinker有以下已知问题：<br>1、Tinker不支持修改AndroidManifest.xml，Tinker不支持新增四大组件；<br>2、由于Google Play的开发者条款限制，不建议在GP渠道动态更新代码；<br>3、在Android N上，补丁对应用启动时间有轻微的影响；<br>4、不支持部分三星android-21机型，加载补丁时会主动抛出”TinkerRuntimeException:checkDexInstall failed”；<br>5、对于资源替换，不支持修改remoteView。例如transition动画，notification icon以及桌面图标。</p><p><a href="https://github.com/Tencent/tinker/wiki" target="_blank" rel="noopener">以上关于Tinker的介绍来自Tinker官方Wiki</a></p><h2 id="四、Tinker集成"><a href="#四、Tinker集成" class="headerlink" title="四、Tinker集成"></a>四、Tinker集成</h2><h3 id="4-1-配置gradle"><a href="#4-1-配置gradle" class="headerlink" title="4.1 配置gradle"></a>4.1 配置gradle</h3><p>（1）在项目的gradle.properties文件中添加Tinker的版本号</p><pre class="line-numbers language-java"><code class="language-java">#Tinker版本号TINKER_VERSION<span class="token operator">=</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">11</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（2）在项目的build.gradle中，添加tinker-patch-gradle-plugin的依赖</p><pre class="line-numbers language-java"><code class="language-java">buildscript <span class="token punctuation">{</span>    repositories <span class="token punctuation">{</span>        <span class="token function">jcenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    dependencies <span class="token punctuation">{</span>        classpath <span class="token string">'com.android.tools.build:gradle:2.2.2'</span>        <span class="token comment" spellcheck="true">//tinker</span>        classpath <span class="token string">"com.tencent.tinker:tinker-patch-gradle-plugin:${TINKER_VERSION}"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）在app的gradle文件app/build.gradle，添加tinker的库依赖(有注释的3个)</p><pre class="line-numbers language-java"><code class="language-java">dependencies <span class="token punctuation">{</span>    compile <span class="token function">fileTree</span><span class="token punctuation">(</span>include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'*.jar'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dir<span class="token operator">:</span> <span class="token string">'libs'</span><span class="token punctuation">)</span>    testCompile <span class="token string">'junit:junit:4.12'</span>    compile <span class="token string">'com.android.support:appcompat-v7:23.1.1'</span>    <span class="token comment" spellcheck="true">// 多dex 打包的类库</span>    compile <span class="token string">'com.android.support:multidex:1.0.1'</span>    <span class="token comment" spellcheck="true">//tinker的核心库</span>    <span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> changing <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//用于生成application类</span>    <span class="token function">provided</span><span class="token punctuation">(</span><span class="token string">"com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> changing <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）在app的gradle文件app/build.gradle，添加tinker的相关配置<br>下面就把整个app/build.gradle配置贴出来，其中标有Tinker相关配置即为tinker的相关配置，其中比较重要的属性都标有中文注释，其余属性解释可以自行参考 <a href="https://github.com/Tencent/tinker/wiki/Tinker-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97" target="_blank" rel="noopener">Tinker 接入指南</a></p><pre class="line-numbers language-java"><code class="language-java">apply plugin<span class="token operator">:</span> <span class="token string">'com.android.application'</span>android <span class="token punctuation">{</span>    compileSdkVersion <span class="token number">23</span>    buildToolsVersion <span class="token string">"23.0.2"</span>    <span class="token comment" spellcheck="true">//recommend Tinker相关配置</span>    dexOptions <span class="token punctuation">{</span>        jumboMode <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//签名信息配置</span>    signingConfigs <span class="token punctuation">{</span>        release <span class="token punctuation">{</span>                storeFile <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">"./keystore/wildmatinker.jks"</span><span class="token punctuation">)</span>                keyAlias <span class="token string">"wildmatinker"</span>                storePassword <span class="token string">"123456"</span>                keyPassword <span class="token string">"123456"</span>        <span class="token punctuation">}</span>        debug <span class="token punctuation">{</span>            storeFile <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">"./keystore/debug.keystore"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    defaultConfig <span class="token punctuation">{</span>        applicationId <span class="token string">"com.wildma.wildmatinker"</span>        minSdkVersion <span class="token number">14</span>        targetSdkVersion <span class="token number">22</span>        versionCode <span class="token number">1</span>        versionName <span class="token string">"1.0.0"</span>        <span class="token comment" spellcheck="true">//Tinker相关配置start======================================</span>        testInstrumentationRunner <span class="token string">"android.support.test.runner.AndroidJUnitRunner"</span>        <span class="token comment" spellcheck="true">/**         * you can use multiDex and install it in your ApplicationLifeCycle implement         */</span>        multiDexEnabled <span class="token boolean">true</span>        <span class="token comment" spellcheck="true">/**         * buildConfig can change during patch!         * we can use the newly value when patch         */</span>        buildConfigField <span class="token string">"String"</span><span class="token punctuation">,</span> <span class="token string">"MESSAGE"</span><span class="token punctuation">,</span> <span class="token string">"\"I am the base apk\""</span><span class="token comment" spellcheck="true">//        buildConfigField "String", "MESSAGE", "\"I am the patch apk\""</span>        <span class="token comment" spellcheck="true">/**         * client version would update with patch         * so we can get the newly git version easily!         */</span>        buildConfigField <span class="token string">"String"</span><span class="token punctuation">,</span> <span class="token string">"TINKER_ID"</span><span class="token punctuation">,</span> <span class="token string">"\"${getTinkerIdValue()}\""</span>        buildConfigField <span class="token string">"String"</span><span class="token punctuation">,</span> <span class="token string">"PLATFORM"</span><span class="token punctuation">,</span>  <span class="token string">"\"all\""</span>        <span class="token comment" spellcheck="true">//Tinker相关配置end======================================</span>    <span class="token punctuation">}</span>    buildTypes <span class="token punctuation">{</span>        release <span class="token punctuation">{</span>            minifyEnabled <span class="token boolean">true</span>            signingConfig signingConfigs<span class="token punctuation">.</span>release            proguardFiles <span class="token function">getDefaultProguardFile</span><span class="token punctuation">(</span><span class="token string">'proguard-android.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'proguard-rules.pro'</span>        <span class="token punctuation">}</span>        debug <span class="token punctuation">{</span>            debuggable <span class="token boolean">true</span>            minifyEnabled <span class="token boolean">false</span>            signingConfig signingConfigs<span class="token punctuation">.</span>debug        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    sourceSets <span class="token punctuation">{</span>        main <span class="token punctuation">{</span>            jniLibs<span class="token punctuation">.</span>srcDirs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'libs'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>dependencies <span class="token punctuation">{</span>    compile <span class="token function">fileTree</span><span class="token punctuation">(</span>include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'*.jar'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dir<span class="token operator">:</span> <span class="token string">'libs'</span><span class="token punctuation">)</span>    testCompile <span class="token string">'junit:junit:4.12'</span>    compile <span class="token string">'com.android.support:appcompat-v7:23.1.1'</span>    <span class="token comment" spellcheck="true">// 多dex 打包的类库</span>    compile <span class="token string">'com.android.support:multidex:1.0.1'</span>    <span class="token comment" spellcheck="true">//tinker的核心库</span>    <span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> changing <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//用于生成application类</span>    <span class="token function">provided</span><span class="token punctuation">(</span><span class="token string">"com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> changing <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//Tinker相关配置start======================================</span>def <span class="token function">gitSha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        String gitRev = 'git rev-parse --short HEAD'.execute(null, project.rootDir).text.trim()</span>        String gitRev <span class="token operator">=</span> <span class="token string">'1.0.0'</span> <span class="token comment" spellcheck="true">//tinkerID,每次发布新版本都需要修改!</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>gitRev <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">GradleException</span><span class="token punctuation">(</span><span class="token string">"can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> gitRev    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">GradleException</span><span class="token punctuation">(</span><span class="token string">"can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>def javaVersion <span class="token operator">=</span> JavaVersion<span class="token punctuation">.</span>VERSION_1_7def bakPath <span class="token operator">=</span> <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">"${buildDir}/bakApk/"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/** * you can use assembleRelease to build you base apk * use tinkerPatchRelease -POLD_APK=  -PAPPLY_MAPPING=  -PAPPLY_RESOURCE= to build patch * add apk from the build/bakApk */</span>ext <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//是否打开tinker的功能</span>    tinkerEnabled <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment" spellcheck="true">//old apk地址</span>    tinkerOldApkPath <span class="token operator">=</span> <span class="token string">"${bakPath}/app-release-0708-21-59-49.apk"</span>    <span class="token comment" spellcheck="true">//old apk 混淆文件地址</span>    tinkerApplyMappingPath <span class="token operator">=</span> <span class="token string">"${bakPath}/app-release-0708-21-59-49-mapping.txt"</span>    <span class="token comment" spellcheck="true">//old apk R 文件地址</span>    tinkerApplyResourcePath <span class="token operator">=</span> <span class="token string">"${bakPath}/app-release-0708-21-59-49-R.txt"</span>    <span class="token comment" spellcheck="true">//only use for build all flavor, if not, just ignore this field</span>    tinkerBuildFlavorDirectory <span class="token operator">=</span> <span class="token string">"${bakPath}/app-1018-17-32-47"</span><span class="token punctuation">}</span>def <span class="token function">getOldApkPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string">"OLD_APK"</span><span class="token punctuation">)</span> <span class="token operator">?</span> OLD_APK <span class="token operator">:</span> ext<span class="token punctuation">.</span>tinkerOldApkPath<span class="token punctuation">}</span>def <span class="token function">getApplyMappingPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string">"APPLY_MAPPING"</span><span class="token punctuation">)</span> <span class="token operator">?</span> APPLY_MAPPING <span class="token operator">:</span> ext<span class="token punctuation">.</span>tinkerApplyMappingPath<span class="token punctuation">}</span>def <span class="token function">getApplyResourceMappingPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string">"APPLY_RESOURCE"</span><span class="token punctuation">)</span> <span class="token operator">?</span> APPLY_RESOURCE <span class="token operator">:</span> ext<span class="token punctuation">.</span>tinkerApplyResourcePath<span class="token punctuation">}</span>def <span class="token function">getTinkerIdValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string">"TINKER_ID"</span><span class="token punctuation">)</span> <span class="token operator">?</span> TINKER_ID <span class="token operator">:</span> <span class="token function">gitSha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>def <span class="token function">buildWithTinker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string">"TINKER_ENABLE"</span><span class="token punctuation">)</span> <span class="token operator">?</span> TINKER_ENABLE <span class="token operator">:</span> ext<span class="token punctuation">.</span>tinkerEnabled<span class="token punctuation">}</span>def <span class="token function">getTinkerBuildFlavorDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> ext<span class="token punctuation">.</span>tinkerBuildFlavorDirectory<span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">buildWithTinker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    apply plugin<span class="token operator">:</span> <span class="token string">'com.tencent.tinker.patch'</span>    tinkerPatch <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/**         * necessary，default 'null'         * the old apk path, use to diff with the new apk to build         * add apk from the build/bakApk         */</span>        oldApk <span class="token operator">=</span> <span class="token function">getOldApkPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">/**         * optional，default 'false'         * there are some cases we may get some warnings         * if ignoreWarning is true, we would just assert the patch process         * case 1: minSdkVersion is below 14, but you are using dexMode with raw.         *         it must be crash when load.         * case 2: newly added Android Component in AndroidManifest.xml,         *         it must be crash when load.         * case 3: loader classes in dex.loader{} are not keep in the main dex,         *         it must be let tinker not work.         * case 4: loader classes in dex.loader{} changes,         *         loader classes is ues to load patch dex. it is useless to change them.         *         it won't crash, but these changes can't effect. you may ignore it         * case 5: resources.arsc has changed, but we don't use applyResourceMapping to build         */</span>        ignoreWarning <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token comment" spellcheck="true">/**         * optional，default 'true'         * whether sign the patch file         * if not, you must do yourself. otherwise it can't check success during the patch loading         * we will use the sign config with your build type         */</span>        useSign <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token comment" spellcheck="true">/**         * optional，default 'true'         * whether use tinker to build         */</span>        tinkerEnable <span class="token operator">=</span> <span class="token function">buildWithTinker</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">/**         * Warning, applyMapping will affect the normal android build!         */</span>        buildConfig <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/**             * optional，default 'null'             * if we use tinkerPatch to build the patch apk, you'd better to apply the old             * apk mapping file if minifyEnabled is enable!             * Warning:             * you must be careful that it will affect the normal assemble build!             */</span>            applyMapping <span class="token operator">=</span> <span class="token function">getApplyMappingPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">/**             * optional，default 'null'             * It is nice to keep the resource id from R.txt file to reduce java changes             */</span>            applyResourceMapping <span class="token operator">=</span> <span class="token function">getApplyResourceMappingPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">/**             * necessary，default 'null'             * because we don't want to check the base apk with md5 in the runtime(it is slow)             * tinkerId is use to identify the unique base apk when the patch is tried to apply.             * we can use git rev, svn rev or simply versionCode.             * we will gen the tinkerId in your manifest automatic             */</span>            tinkerId <span class="token operator">=</span> <span class="token function">getTinkerIdValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">/**             * if keepDexApply is true, class in which dex refer to the old apk.             * open this can reduce the dex diff file size.             */</span>            keepDexApply <span class="token operator">=</span> <span class="token boolean">false</span>            <span class="token comment" spellcheck="true">//是否开启加固</span>            isProtectedApp <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span>        dex <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/**             * optional，default 'jar'             * only can be 'raw' or 'jar'. for raw, we would keep its original format             * for jar, we would repack dexes with zip format.             * if you want to support below 14, you must use jar             * or you want to save rom or check quicker, you can use raw mode also             */</span>            dexMode <span class="token operator">=</span> <span class="token string">"jar"</span>            <span class="token comment" spellcheck="true">/**             * necessary，default '[]'             * what dexes in apk are expected to deal with tinkerPatch             * it support * or ? pattern.             */</span>            pattern <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"classes*.dex"</span><span class="token punctuation">,</span>                       <span class="token string">"assets/secondary-dex-?.jar"</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">/**             * necessary，default '[]'             * Warning, it is very very important, loader classes can't change with patch.             * thus, they will be removed from patch dexes.             * you must put the following class into main dex.             * Simply, you should add your own application {@code tinker.sample.android.SampleApplication}             * own tinkerLoader, and the classes you use in them             *             */</span>            loader <span class="token operator">=</span> <span class="token punctuation">[</span>                    <span class="token comment" spellcheck="true">//use sample, let BaseBuildInfo unchangeable with tinker</span>                    <span class="token string">"tinker.sample.android.app.BaseBuildInfo"</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>        lib <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/**             * optional，default '[]'             * what library in apk are expected to deal with tinkerPatch             * it support * or ? pattern.             * for library in assets, we would just recover them in the patch directory             * you can get them in TinkerLoadResult with Tinker             */</span>            pattern <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"lib/*/*.so"</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>        res <span class="token punctuation">{</span>            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>             <span class="token operator">*</span> optional，<span class="token keyword">default</span> <span class="token string">'[]'</span>             <span class="token operator">*</span> what resource in apk are expected to deal with tinkerPatch             <span class="token operator">*</span> it support <span class="token operator">*</span> or <span class="token operator">?</span> pattern<span class="token punctuation">.</span>             <span class="token operator">*</span> you must include all your resources in apk here<span class="token punctuation">,</span>             <span class="token operator">*</span> otherwise<span class="token punctuation">,</span> they won't repack in the <span class="token keyword">new</span> <span class="token class-name">apk</span> resources<span class="token punctuation">.</span>             <span class="token operator">*</span><span class="token operator">/</span>            pattern <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"res/*"</span><span class="token punctuation">,</span> <span class="token string">"assets/*"</span><span class="token punctuation">,</span> <span class="token string">"resources.arsc"</span><span class="token punctuation">,</span> <span class="token string">"AndroidManifest.xml"</span><span class="token punctuation">]</span>            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>             <span class="token operator">*</span> optional，<span class="token keyword">default</span> <span class="token string">'[]'</span>             <span class="token operator">*</span> the resource file exclude patterns<span class="token punctuation">,</span> ignore add<span class="token punctuation">,</span> delete or modify resource change             <span class="token operator">*</span> it support <span class="token operator">*</span> or <span class="token operator">?</span> pattern<span class="token punctuation">.</span>             <span class="token operator">*</span> Warning<span class="token punctuation">,</span> we can only use <span class="token keyword">for</span> files no relative with resources<span class="token punctuation">.</span>arsc             <span class="token operator">*</span><span class="token operator">/</span>            ignoreChange <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"assets/sample_meta.txt"</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">/**             * default 100kb             * for modify resource, if it is larger than 'largeModSize'             * we would like to use bsdiff algorithm to reduce patch file size             */</span>            largeModSize <span class="token operator">=</span> <span class="token number">100</span>        <span class="token punctuation">}</span>        packageConfig <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/**             * optional，default 'TINKER_ID, TINKER_ID_VALUE' 'NEW_TINKER_ID, NEW_TINKER_ID_VALUE'             * package meta file gen. path is assets/package_meta.txt in patch file             * you can use securityCheck.getPackageProperties() in your ownPackageCheck method             * or TinkerLoadResult.getPackageConfigByName             * we will get the TINKER_ID from the old apk manifest for you automatic,             * other config files (such as patchMessage below)is not necessary             */</span>            <span class="token function">configField</span><span class="token punctuation">(</span><span class="token string">"patchMessage"</span><span class="token punctuation">,</span> <span class="token string">"tinker is sample to use"</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">/**             * just a sample case, you can use such as sdkVersion, brand, channel...             * you can parse it in the SamplePatchListener.             * Then you can use patch conditional!             */</span>            <span class="token function">configField</span><span class="token punctuation">(</span><span class="token string">"platform"</span><span class="token punctuation">,</span> <span class="token string">"all"</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">/**             * patch version via packageConfig             */</span>            <span class="token function">configField</span><span class="token punctuation">(</span><span class="token string">"patchVersion"</span><span class="token punctuation">,</span> <span class="token string">"1.0"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//or you can add config filed outside, or get meta value from old apk</span>        <span class="token comment" spellcheck="true">//project.tinkerPatch.packageConfig.configField("test1", project.tinkerPatch.packageConfig.getMetaDataFromOldApk("Test"))</span>        <span class="token comment" spellcheck="true">//project.tinkerPatch.packageConfig.configField("test2", "sample")</span>        <span class="token comment" spellcheck="true">/**         * if you don't use zipArtifact or path, we just use 7za to try         */</span>        sevenZip <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/**             * optional，default '7za'             * the 7zip artifact path, it will use the right 7za with your platform             */</span>            zipArtifact <span class="token operator">=</span> <span class="token string">"com.tencent.mm:SevenZip:1.1.10"</span>            <span class="token comment" spellcheck="true">/**             * optional，default '7za'             * you can specify the 7za path yourself, it will overwrite the zipArtifact value             */</span><span class="token comment" spellcheck="true">//        path = "/usr/local/bin/7za"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> flavors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    project<span class="token punctuation">.</span>android<span class="token punctuation">.</span>productFlavors<span class="token punctuation">.</span>each <span class="token punctuation">{</span>flavor <span class="token operator">-</span><span class="token operator">></span>        flavors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>flavor<span class="token punctuation">.</span>name<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">boolean</span> hasFlavors <span class="token operator">=</span> flavors<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span>    def date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"MMdd-HH-mm-ss"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">/**     * bak apk and mapping     */</span>    android<span class="token punctuation">.</span>applicationVariants<span class="token punctuation">.</span>all <span class="token punctuation">{</span> variant <span class="token operator">-</span><span class="token operator">></span>        <span class="token comment" spellcheck="true">/**         * task type, you want to bak         */</span>        def taskName <span class="token operator">=</span> variant<span class="token punctuation">.</span>name        tasks<span class="token punctuation">.</span>all <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"assemble${taskName.capitalize()}"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                it<span class="token punctuation">.</span>doLast <span class="token punctuation">{</span>                    copy <span class="token punctuation">{</span>                        def fileNamePrefix <span class="token operator">=</span> <span class="token string">"${project.name}-${variant.baseName}"</span>                        def newFileNamePrefix <span class="token operator">=</span> hasFlavors <span class="token operator">?</span> <span class="token string">"${fileNamePrefix}"</span> <span class="token operator">:</span> <span class="token string">"${fileNamePrefix}-${date}"</span>                        def destPath <span class="token operator">=</span> hasFlavors <span class="token operator">?</span> <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">"${bakPath}/${project.name}-${date}/${variant.flavorName}"</span><span class="token punctuation">)</span> <span class="token operator">:</span> bakPath                        from variant<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>outputFile                        into destPath                        rename <span class="token punctuation">{</span> String fileName <span class="token operator">-</span><span class="token operator">></span>                            fileName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"${fileNamePrefix}.apk"</span><span class="token punctuation">,</span> <span class="token string">"${newFileNamePrefix}.apk"</span><span class="token punctuation">)</span>                        <span class="token punctuation">}</span>                        from <span class="token string">"${buildDir}/outputs/mapping/${variant.dirName}/mapping.txt"</span>                        into destPath                        rename <span class="token punctuation">{</span> String fileName <span class="token operator">-</span><span class="token operator">></span>                            fileName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"mapping.txt"</span><span class="token punctuation">,</span> <span class="token string">"${newFileNamePrefix}-mapping.txt"</span><span class="token punctuation">)</span>                        <span class="token punctuation">}</span>                        from <span class="token string">"${buildDir}/intermediates/symbols/${variant.dirName}/R.txt"</span>                        into destPath                        rename <span class="token punctuation">{</span> String fileName <span class="token operator">-</span><span class="token operator">></span>                            fileName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"R.txt"</span><span class="token punctuation">,</span> <span class="token string">"${newFileNamePrefix}-R.txt"</span><span class="token punctuation">)</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    project<span class="token punctuation">.</span>afterEvaluate <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//sample use for build all flavor for one time</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>hasFlavors<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">task</span><span class="token punctuation">(</span>tinkerPatchAllFlavorRelease<span class="token punctuation">)</span> <span class="token punctuation">{</span>                group <span class="token operator">=</span> <span class="token string">'tinker'</span>                def originOldPath <span class="token operator">=</span> <span class="token function">getTinkerBuildFlavorDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>String flavor <span class="token operator">:</span> flavors<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    def tinkerTask <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">"tinkerPatch${flavor.capitalize()}Release"</span><span class="token punctuation">)</span>                    dependsOn tinkerTask                    def preAssembleTask <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">"process${flavor.capitalize()}ReleaseManifest"</span><span class="token punctuation">)</span>                    preAssembleTask<span class="token punctuation">.</span>doFirst <span class="token punctuation">{</span>                        String flavorName <span class="token operator">=</span> preAssembleTask<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> preAssembleTask<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> preAssembleTask<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">)</span>                        project<span class="token punctuation">.</span>tinkerPatch<span class="token punctuation">.</span>oldApk <span class="token operator">=</span> <span class="token string">"${originOldPath}/${flavorName}/${project.name}-${flavorName}-release.apk"</span>                        project<span class="token punctuation">.</span>tinkerPatch<span class="token punctuation">.</span>buildConfig<span class="token punctuation">.</span>applyMapping <span class="token operator">=</span> <span class="token string">"${originOldPath}/${flavorName}/${project.name}-${flavorName}-release-mapping.txt"</span>                        project<span class="token punctuation">.</span>tinkerPatch<span class="token punctuation">.</span>buildConfig<span class="token punctuation">.</span>applyResourceMapping <span class="token operator">=</span> <span class="token string">"${originOldPath}/${flavorName}/${project.name}-${flavorName}-release-R.txt"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">task</span><span class="token punctuation">(</span>tinkerPatchAllFlavorDebug<span class="token punctuation">)</span> <span class="token punctuation">{</span>                group <span class="token operator">=</span> <span class="token string">'tinker'</span>                def originOldPath <span class="token operator">=</span> <span class="token function">getTinkerBuildFlavorDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>String flavor <span class="token operator">:</span> flavors<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    def tinkerTask <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">"tinkerPatch${flavor.capitalize()}Debug"</span><span class="token punctuation">)</span>                    dependsOn tinkerTask                    def preAssembleTask <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">"process${flavor.capitalize()}DebugManifest"</span><span class="token punctuation">)</span>                    preAssembleTask<span class="token punctuation">.</span>doFirst <span class="token punctuation">{</span>                        String flavorName <span class="token operator">=</span> preAssembleTask<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> preAssembleTask<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> preAssembleTask<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">13</span><span class="token punctuation">)</span>                        project<span class="token punctuation">.</span>tinkerPatch<span class="token punctuation">.</span>oldApk <span class="token operator">=</span> <span class="token string">"${originOldPath}/${flavorName}/${project.name}-${flavorName}-debug.apk"</span>                        project<span class="token punctuation">.</span>tinkerPatch<span class="token punctuation">.</span>buildConfig<span class="token punctuation">.</span>applyMapping <span class="token operator">=</span> <span class="token string">"${originOldPath}/${flavorName}/${project.name}-${flavorName}-debug-mapping.txt"</span>                        project<span class="token punctuation">.</span>tinkerPatch<span class="token punctuation">.</span>buildConfig<span class="token punctuation">.</span>applyResourceMapping <span class="token operator">=</span> <span class="token string">"${originOldPath}/${flavorName}/${project.name}-${flavorName}-debug-R.txt"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//Tinker相关配置end======================================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-自定义Application类"><a href="#4-2-自定义Application类" class="headerlink" title="4.2 自定义Application类"></a>4.2 自定义Application类</h3><p>程序启动时会加载默认的Application类，这导致补丁包无法对它做修改。所以Tinker官方说不建议自己去实现Application，而是由Tinker自动生成。即需要创建一个SampleApplication类，继承DefaultApplicationLike，然后将我们自己的MyApplication中所有逻辑放在SampleApplication中的onCreate中。最后需要将我们项目中之前的MyApplication类删除。如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wildma<span class="token punctuation">.</span>wildmatinker<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>TargetApi<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Application<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Intent<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Build<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>multidex<span class="token punctuation">.</span>MultiDex<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>anno<span class="token punctuation">.</span>DefaultLifeCycle<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>Tinker<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>TinkerInstaller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>app<span class="token punctuation">.</span>DefaultApplicationLike<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>shareutil<span class="token punctuation">.</span>ShareConstants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wildma<span class="token punctuation">.</span>wildmatinker<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>MyLogImp<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wildma<span class="token punctuation">.</span>wildmatinker<span class="token punctuation">.</span>tinker<span class="token punctuation">.</span>TinkerManager<span class="token punctuation">;</span><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unused"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@DefaultLifeCycle</span><span class="token punctuation">(</span>  application <span class="token operator">=</span> <span class="token string">"com.wildma.wildmatinker.MyApplication"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 自定义生成</span>                    flags <span class="token operator">=</span> ShareConstants<span class="token punctuation">.</span>TINKER_ENABLE_ALL<span class="token punctuation">,</span>                    loadVerifyFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SampleApplication</span> <span class="token keyword">extends</span> <span class="token class-name">DefaultApplicationLike</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> SampleApplication sampleApplication<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">SampleApplication</span><span class="token punctuation">(</span>Application application<span class="token punctuation">,</span> <span class="token keyword">int</span> tinkerFlags<span class="token punctuation">,</span> <span class="token keyword">boolean</span> tinkerLoadVerifyFlag<span class="token punctuation">,</span>                             <span class="token keyword">long</span> applicationStartElapsedTime<span class="token punctuation">,</span> <span class="token keyword">long</span> applicationStartMillisTime<span class="token punctuation">,</span> Intent tinkerResultIntent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>application<span class="token punctuation">,</span> tinkerFlags<span class="token punctuation">,</span> tinkerLoadVerifyFlag<span class="token punctuation">,</span> applicationStartElapsedTime<span class="token punctuation">,</span> applicationStartMillisTime<span class="token punctuation">,</span> tinkerResultIntent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sampleApplication <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将我们自己的MyApplication中的所有逻辑放在这里，例如初始化一些第三方</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@TargetApi</span><span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>ICE_CREAM_SANDWICH<span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBaseContextAttached</span><span class="token punctuation">(</span>Context base<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onBaseContextAttached</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 其原理是分包架构，所以在加载初要加载其余的分包</span>        MultiDex<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Tinker管理类，保存当前对象</span>        TinkerManager<span class="token punctuation">.</span><span class="token function">setTinkerApplicationLike</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 崩溃保护</span>        TinkerManager<span class="token punctuation">.</span><span class="token function">initFastCrashProtect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 是否重试</span>        TinkerManager<span class="token punctuation">.</span><span class="token function">setUpgradeRetryEnable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//Log 实现，打印加载补丁的信息</span>        TinkerInstaller<span class="token punctuation">.</span><span class="token function">setLogIml</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyLogImp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 运行Tinker ，通过Tinker添加一些基本配置</span>        TinkerManager<span class="token punctuation">.</span><span class="token function">installTinker</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Tinker tinker <span class="token operator">=</span> Tinker<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token function">getApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@TargetApi</span><span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>ICE_CREAM_SANDWICH<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerActivityLifecycleCallbacks</span><span class="token punctuation">(</span>Application<span class="token punctuation">.</span>ActivityLifecycleCallbacks callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 生命周期，默认配置</span>        <span class="token function">getApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">registerActivityLifecycleCallbacks</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取SampleApplication实例     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> SampleApplication <span class="token function">getSampleApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> sampleApplication<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中DefaultLifeCycle中的MyApplication为我们真正的Application，清单文件中的Application的name改为MyApplication的全路径。如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>application        android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.wildma.wildmatinker.MyApplication"</span>        android<span class="token operator">:</span>allowBackup<span class="token operator">=</span><span class="token string">"true"</span>        android<span class="token operator">:</span>icon<span class="token operator">=</span><span class="token string">"@mipmap/ic_launcher"</span>        android<span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"@string/app_name"</span>        android<span class="token operator">:</span>supportsRtl<span class="token operator">=</span><span class="token string">"true"</span>        android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@style/AppTheme"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>activity android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".MainActivity"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.MAIN"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.LAUNCHER"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>application<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-添加Tinker相关类"><a href="#4-3-添加Tinker相关类" class="headerlink" title="4.3 添加Tinker相关类"></a>4.3 添加Tinker相关类</h3><p>这些类主要是加载补丁包过程的回调，打印log，崩溃保护等。具体见 <a href="https://github.com/Tencent/tinker/wiki/Tinker-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%89%A9%E5%B1%95#%E8%87%AA%E5%AE%9A%E4%B9%89application%E7%B1%BB" target="_blank" rel="noopener">Tinker 自定义扩展</a><br><img src="2.jpg" alt></p><h3 id="4-4-在清单文件添加读写sd卡的权限"><a href="#4-4-在清单文件添加读写sd卡的权限" class="headerlink" title="4.4 在清单文件添加读写sd卡的权限"></a>4.4 在清单文件添加读写sd卡的权限</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="4-5-加载补丁包代码"><a href="#4-5-加载补丁包代码" class="headerlink" title="4.5 加载补丁包代码"></a>4.5 加载补丁包代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wildma<span class="token punctuation">.</span>wildmatinker<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//加载补丁包</span>        TinkerInstaller<span class="token punctuation">.</span><span class="token function">onReceiveUpgradePatch</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Environment<span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/patch_signed_7zip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Tinker相关配置</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Utils<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Tinker相关配置</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Utils<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中第9行代码的路径为我们放在sd卡中的补丁包路径。</p><h2 id="五、测试Tinker热修复"><a href="#五、测试Tinker热修复" class="headerlink" title="五、测试Tinker热修复"></a>五、测试Tinker热修复</h2><p>这里只讲release版本。<br>（1）按正常流程打包出带签名的APK，并装到手机上<br>打包完成，会自动在项目的app/build文件夹下生成bakAPK文件夹并有三个文件（基础包的一些文件），如图：</p><p><img src="3.jpg" alt></p><p>（2）将上面的三个文件路径复制到app.build中对应的位置，如图<br><img src="4.jpg" alt></p><p>（3）修复bug（测试的时候随便改动一点代码）</p><p>（4）运行补丁命令获取补丁包<br>运行补丁命令，单击AS右侧顶部gradle–&gt;双击tinkerPatchRelease，如图:<br>(也可以直接在Android studio中的Terminal中输入命令gradlew tinkerPatchRelease)<br><img src="5.jpg" alt></p><p>运行完成会在build-&gt;outputs-&gt;tinkerPatch-&gt;release文件夹中生成一个名为patch_signed_7zip.apk的补丁包，如图：<br><img src="6.jpg" alt></p><p>（5）将该补丁包复制到之前加载补丁包中对应的SD卡路劲即可。<br>注意：该补丁包需要重新命名，不要以.apk结尾，因为有些运营商会挟持以.apk结尾的资源，名字要与之前加载补丁包的名字相同，例如Demo中命名为patch_signed_7zip。</p><p>（6）运行项目发现bug并没有修复，因为tinker是不支持即时修复的，关掉APP重启。恭喜你！bug已修复！</p><p>注意事项：</p><p>Tinker集成在这里讲的已经非常详细了，有不足的地方希望指出。遇到不懂的问题都可以直接在博客下评论问我，只要我遇到过并且能回答出来的都会乐意回答。</p><p>Demo下载地址：<a href="https://github.com/wildma/WildmaTinker" target="_blank" rel="noopener">https://github.com/wildma/WildmaTinker</a><br>如果对你有帮助请点赞，star支持下哈~</p><h2 id="热修复Tinker系列文章"><a href="#热修复Tinker系列文章" class="headerlink" title="热修复Tinker系列文章"></a>热修复Tinker系列文章</h2><ul><li><a href="https://wildma.github.io/hot-fix-tinker-1-integrate/">热修复框架Tinker最完整讲解（01）——集成之路</a></li><li><a href="https://wildma.github.io/hot-fix-tinker-2-walle/">热修复框架Tinker最完整讲解（02）——加入Walle多渠道打包</a></li><li><a href="https://wildma.github.io/hot-fix-tinker-3-question/">热修复框架Tinker最完整讲解（03）——使用Tinker常见问题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
          <category> 热修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热修复 </tag>
            
            <tag> Tinker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrollview 嵌套百度地图 MapView 导致滑动有黑边或者阴影问题</title>
      <link href="/scrollview-nest-baidu-map/"/>
      <url>/scrollview-nest-baidu-map/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>项目中需求经常会出现Scrollview嵌套百度地图MapView，如下：<br>但是这样嵌套会出现Scrollview滑动的时候百度地图周边有黑边或者阴影</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token operator">&lt;</span>ScrollView        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>scrollbars<span class="token operator">=</span><span class="token string">"none"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>其他组件<span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>com<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>mapapi<span class="token punctuation">.</span>map<span class="token punctuation">.</span>MapView                    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/map_mapview"</span>                    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>                    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"@dimen/dimen_154dp"</span>                    android<span class="token operator">:</span>clickable<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ScrollView<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>将MapView换成TextureMapView即可。如下：</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token operator">&lt;</span>ScrollView        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>scrollbars<span class="token operator">=</span><span class="token string">"none"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>其他组件<span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>com<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>mapapi<span class="token punctuation">.</span>map<span class="token punctuation">.</span>TextureMapView                    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/map_mapview"</span>                    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>                    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"@dimen/dimen_154dp"</span>                    android<span class="token operator">:</span>clickable<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ScrollView<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>3.6.0版本之前由于使用系统GLSurfaceView导致由于系统问题出现的黑屏等，在新版地图SDK3.6.0中可使用TextureMapView作为地图视图控件，解决此类问题，但要求系统在4.0以上并且开启强制GPU渲染。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度地图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试时最常问到的 Handler 消息机制源码详解</title>
      <link href="/handler/"/>
      <url>/handler/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>辞职后（非当前时间），最近又开始加入找工作的大队伍中。不得不说今年找工作确实比以前难了。从几个朋友说他们公司快倒闭的情况也验证了这一点。最近面了2家，竟然都问到了Handler消息机制，虽然以前看过源码，但是很久没看，也忘得差不多了，总体的虽然都讲的出，但是却没有彻底征服面试官，所以自己干脆再总结一遍写篇博客记录下来好了。</p><h2 id="一、正确阅读源码的姿势"><a href="#一、正确阅读源码的姿势" class="headerlink" title="一、正确阅读源码的姿势"></a>一、正确阅读源码的姿势</h2><p>有些人阅读源码是力求每行代码都要读懂，我个人感觉这个方法是错误的。正确的方法是应该按平时你使用某个框架或者某个系统源码的执行流程，抓重点去看。例如看Handler源码，应该按照创建Handler-发送消息-处理消息的执行流程去看。并且要看最新版本的源码。例如Android2.3与Android7.0的Handler源码相差还是很大的，Android2.3中Handler的构造方法是没有进行封装的，Android7.0则进行了封装。Android2.3中Handler回收消息的时候消息池大小判断不严谨，但是高版本的就改过来了。</p><h2 id="二、Handler的用法"><a href="#二、Handler的用法" class="headerlink" title="二、Handler的用法"></a>二、Handler的用法</h2><p>Handler最常用的用法，即子线程完成耗时任务然后通知主线程更新UI，步骤为：创建Handler-发送消息-处理消息。如下：</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token comment" spellcheck="true">//2，发送消息（子线程）</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Message message <span class="token operator">=</span> Message<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                message<span class="token punctuation">.</span>what <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                message<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> <span class="token number">666</span><span class="token punctuation">;</span>                mHandler<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TAG <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//1，创建Handler（主线程）</span>        <span class="token keyword">final</span> Handler mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//3,处理消息</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what <span class="token operator">==</span> TAG<span class="token punctuation">)</span><span class="token punctuation">{</span>                    tvText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>arg1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、开始阅读源码"><a href="#三、开始阅读源码" class="headerlink" title="三、开始阅读源码"></a>三、开始阅读源码</h2><p>现在我们就根据上面Handler使用的执行流程去解析源码。</p><h3 id="3-1-创建Handler—-Handler-handler-new-Handler"><a href="#3-1-创建Handler—-Handler-handler-new-Handler" class="headerlink" title="3.1 创建Handler—-Handler handler = new Handler();"></a>3.1 创建Handler—-Handler handler = new Handler();</h3><p>有人问：为什么要在主线程中创建Handler，而不在子线程中创建呢？<br>因为如果你在子线程创建Handler（如下），程序则会崩溃，并且会报错误：Can’t create handler inside thread that has not called Looper.prepare() ，翻译为：不能在没有调用Looper.prepare() 的线程中创建Handler。</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Handler handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那如果在子线程中先调用一下Looper.prepare()呢，如下：</p><pre class="line-numbers language-java"><code class="language-java">        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Looper<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                Handler handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>果然程序就能正常运行了。玄机就藏在源码当中！</p><p>首先我们点击我们创建的Handler进去源码是这样的：<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token function">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后再跟到这个构造方法里，发现是走了有参构造<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token function">Handler</span><span class="token punctuation">(</span>Callback callback<span class="token punctuation">,</span> <span class="token keyword">boolean</span> async<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>FIND_POTENTIAL_LEAKS<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">final</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Handler</span><span class="token operator">></span> klass <span class="token operator">=</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>klass<span class="token punctuation">.</span><span class="token function">isAnonymousClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> klass<span class="token punctuation">.</span><span class="token function">isMemberClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> klass<span class="token punctuation">.</span><span class="token function">isLocalClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                    <span class="token punctuation">(</span>klass<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> Modifier<span class="token punctuation">.</span>STATIC<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"The following Handler class should be static or leaks might occur: "</span> <span class="token operator">+</span>                    klass<span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        mLooper <span class="token operator">=</span> Looper<span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mLooper <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>                <span class="token string">"Can't create handler inside thread that has not called Looper.prepare()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        mQueue <span class="token operator">=</span> mLooper<span class="token punctuation">.</span>mQueue<span class="token punctuation">;</span>        mCallback <span class="token operator">=</span> callback<span class="token punctuation">;</span>        mAsynchronous <span class="token operator">=</span> async<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，在第13行抛出的异常错误刚好就是我们刚刚上面报的错误！报错的原因是mLooper对象为空了，而mLooper对象则是在第10行代码中获取的，接下来我们点进去看看myLooper()这个方法，如下：<br>【Looper.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> Looper <span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sThreadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到，mLooper对象是通过sThreadLocal的get()方法获取的。由此可以联想到应该是有sThreadLocal.set()方法设置了mLooper对象。在当前类中查找，果然找到了。如下：<br>【Looper.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> quitAllowed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sThreadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Only one Looper may be created per thread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        sThreadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Looper</span><span class="token punctuation">(</span>quitAllowed<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>果然，在第5行sThreadLocal.set()方法正是在Looper.prepare()方法里面。这段代码比较简单：首先判断sThreadLocal中有没有Looper对象，有就抛出异常，没有则new一个新的Looper进去。这样就得出结论：之前为什么会报如上错误了（不能在没有调用Looper.prepare() 的线程中创建Handler）。</p><p>但是但是！为什么在主线程中创建Handler之前就不用调用Looper.prepare() 呢？？<br>查找资料发现，Android程序的入口中，系统就默认帮我们调用了Looper.prepare()方法。<br>Android程序的入口在ActivityThread中的main()方法，ActivityThread这个类在Android studio中是看不到的，只能利用工具source insight来看。代码如下：<br>【ActivityThread.java】</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    SamplingProfilerIntegration<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    CloseGuard<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Environment<span class="token punctuation">.</span><span class="token function">initForCurrentUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    EventLogger<span class="token punctuation">.</span><span class="token function">setReporter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventLoggingReporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Process<span class="token punctuation">.</span><span class="token function">setArgV0</span><span class="token punctuation">(</span><span class="token string">"&lt;pre-initialized>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Looper<span class="token punctuation">.</span><span class="token function">prepareMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ActivityThread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActivityThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>sMainThreadHandler <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>        sMainThreadHandler <span class="token operator">=</span> thread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    AsyncTask<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Looper<span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMessageLogging</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LogPrinter</span><span class="token punctuation">(</span>Log<span class="token punctuation">.</span>DEBUG<span class="token punctuation">,</span> <span class="token string">"ActivityThread"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    Looper<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Main thread loop unexpectedly exited"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，在第7行调用了Looper.prepareMainLooper()方法，跟进去，prepareMainLooper()方法中又调用了prepare()方法<br>【ActivityThread.java】  </p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">prepareMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setMainLooper</span><span class="token punctuation">(</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Process<span class="token punctuation">.</span><span class="token function">supportsProcesses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mQueue<span class="token punctuation">.</span>mQuitAllowed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就说明了在主线程中创建Handler同样需要调用Looper.prepare()方法，只是这个方法系统已经帮我们调用了。</p><p>接下来Handler的有参构造就只剩下面三行了。</p><pre class="line-numbers language-java"><code class="language-java">        mQueue <span class="token operator">=</span> mLooper<span class="token punctuation">.</span>mQueue<span class="token punctuation">;</span>        mCallback <span class="token operator">=</span> callback<span class="token punctuation">;</span>        mAsynchronous <span class="token operator">=</span> async<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到，一开始我们用的是无参构造，即传入了一个null的Callback，async的值也是false，所以这里就不考虑这2行，mQueue = mLooper.mQueue;则是获取一个消息队列MessageQueue。用于将所有收到的消息以队列的形式进行排列，并提供入队和出队的方法。MessageQueue这个类是在Looper的构造函数中创建的，因此一个Looper也就对应了一个MessageQueue。</p><p><strong>小总结：主线程中可以直接创建Handler，在子线程中需要先调用Looper.prepare()才能创建Handler。Handler的构造方法中主要是获取轮询器（即Looper对象）和消息队列（即MessageQueue对象）。</strong></p><h3 id="3-2-发送消息—-mHandler-sendMessage-message"><a href="#3-2-发送消息—-mHandler-sendMessage-message" class="headerlink" title="3.2 发送消息—-mHandler.sendMessage(message);"></a>3.2 发送消息—-mHandler.sendMessage(message);</h3><p>点击sendMessage()方法进去，如下：<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">sendMessageDelayed</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，调用了sendMessageDelayed()方法，点进去，如下：<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">sendMessageDelayed</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">,</span> <span class="token keyword">long</span> delayMillis<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>delayMillis <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            delayMillis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">sendMessageAtTime</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> SystemClock<span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> delayMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，delayMillis &lt; 0判断是为了防止用户传入的延迟参数为负数。之后又调用了sendMessageAtTime()方法，点进去，如下：<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">sendMessageAtTime</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">,</span> <span class="token keyword">long</span> uptimeMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>        MessageQueue queue <span class="token operator">=</span> mQueue<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>queue <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            RuntimeException e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>                    <span class="token keyword">this</span> <span class="token operator">+</span> <span class="token string">" sendMessageAtTime() called with no mQueue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token string">"Looper"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">enqueueMessage</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> uptimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，我们代码中调用sendMessage()方法，最终就是走的sendMessageAtTime()方法。<br>而且其他发送消息的方法除了sendMessageAtFrontOfQueue(),例如sendMessageDelayed()，sendEmptyMessageDelayed()最终都会走sendMessageAtTime()方法。</p><p>sendMessageAtTime()方法接收两个参数，其中msg参数就是我们发送的Message对象，而uptimeMillis参数则表示发送消息的时间，它的值等于自系统开机到当前时间的毫秒数再加上延迟时间，如果你调用的不是sendMessageDelayed()方法，延迟时间就为0。第二行中的mQueue则是我们在创建Handler的时候获取的消息队列，然后将这三个参数都传递到enqueueMessage()方法中。<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">enqueueMessage</span><span class="token punctuation">(</span>MessageQueue queue<span class="token punctuation">,</span> Message msg<span class="token punctuation">,</span> <span class="token keyword">long</span> uptimeMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>        msg<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAsynchronous<span class="token punctuation">)</span> <span class="token punctuation">{</span>            msg<span class="token punctuation">.</span><span class="token function">setAsynchronous</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">enqueueMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> uptimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，enqueueMessage()方法中，首先将当前的Handler绑定给msg.target，接着调用MessageQueue的enqueueMessage()方法</p><p>MessageQueue的enqueueMessage()方法则是消息入队的方法，点击进去，如下：<br>【MessageQueue.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">boolean</span> <span class="token function">enqueueMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">,</span> <span class="token keyword">long</span> when<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>target <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Message must have a target."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">isInUse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>msg <span class="token operator">+</span> <span class="token string">" This message is already in use."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>mQuitting<span class="token punctuation">)</span> <span class="token punctuation">{</span>                IllegalStateException e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>                        msg<span class="token punctuation">.</span>target <span class="token operator">+</span> <span class="token string">" sending message to a Handler on a dead thread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>                msg<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            msg<span class="token punctuation">.</span><span class="token function">markInUse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            msg<span class="token punctuation">.</span>when <span class="token operator">=</span> when<span class="token punctuation">;</span>            Message p <span class="token operator">=</span> mMessages<span class="token punctuation">;</span>            <span class="token keyword">boolean</span> needWake<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> null <span class="token operator">||</span> when <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> when <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>when<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// New head, wake up the event queue if blocked.</span>                msg<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>                mMessages <span class="token operator">=</span> msg<span class="token punctuation">;</span>                needWake <span class="token operator">=</span> mBlocked<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// Inserted within the middle of the queue.  Usually we don't have to wake</span>                <span class="token comment" spellcheck="true">// up the event queue unless there is a barrier at the head of the queue</span>                <span class="token comment" spellcheck="true">// and the message is the earliest asynchronous message in the queue.</span>                needWake <span class="token operator">=</span> mBlocked <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span>target <span class="token operator">==</span> null <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span><span class="token function">isAsynchronous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                Message prev<span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    prev <span class="token operator">=</span> p<span class="token punctuation">;</span>                    p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> null <span class="token operator">||</span> when <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>when<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>needWake <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">isAsynchronous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        needWake <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                msg<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// invariant: p == prev.next</span>                prev<span class="token punctuation">.</span>next <span class="token operator">=</span> msg<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// We can assume mPtr != 0 because mQuitting is false.</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>needWake<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">nativeWake</span><span class="token punctuation">(</span>mPtr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，代码的第2行，当msg.target为null时是直接抛异常的。代码的第22-45行，首先判断如果当前的消息队列为空，或者新添加的消息的执行时间when是0，或者新添加的消息的执行时间比消息队列头的消息的执行时间还早，就把消息添加到消息队列头（消息队列按时间排序），否则就要找到合适的位置将当前消息添加到消息队列。</p><p><strong>小总结：发送消息的方法除了sendMessageAtFrontOfQueue(),例如sendMessage()，sendMessageDelayed()最终都会走sendMessageAtTime()方法。在sendMessageAtTime()方法中又调用MessageQueue的enqueueMessage()方法将所有的消息按时间来进行排序放在消息队列中。</strong></p><h3 id="3-3-处理消息—-Looper-loop"><a href="#3-3-处理消息—-Looper-loop" class="headerlink" title="3.3 处理消息—-Looper.loop()"></a>3.3 处理消息—-Looper.loop()</h3><p>消息发送完成并且也已经入队列了，接下来我们就是处理消息队列中的消息了。首先要从队列中取出消息，取消息主要靠轮询器，看Looper.loop()方法<br>【Looper.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> Looper me <span class="token operator">=</span> <span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>me <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"No Looper; Looper.prepare() wasn't called on this thread."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">final</span> MessageQueue queue <span class="token operator">=</span> me<span class="token punctuation">.</span>mQueue<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Make sure the identity of this thread is that of the local process,</span>        <span class="token comment" spellcheck="true">// and keep track of what that identity token actually is.</span>        Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> <span class="token keyword">long</span> ident <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Message msg <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// might block</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// No message indicates that the message queue is quitting.</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// This must be in a local variable, in case a UI event sets the logger</span>            <span class="token keyword">final</span> Printer logging <span class="token operator">=</span> me<span class="token punctuation">.</span>mLogging<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>logging <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                logging<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">">>>>> Dispatching to "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>target <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span>                        msg<span class="token punctuation">.</span>callback <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">final</span> <span class="token keyword">long</span> traceTag <span class="token operator">=</span> me<span class="token punctuation">.</span>mTraceTag<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>traceTag <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> Trace<span class="token punctuation">.</span><span class="token function">isTagEnabled</span><span class="token punctuation">(</span>traceTag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Trace<span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span>traceTag<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getTraceName</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                msg<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">dispatchMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>traceTag <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>traceTag<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>logging <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                logging<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;&lt;&lt;&lt;&lt; Finished to "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>target <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// Make sure that during the course of dispatching the</span>            <span class="token comment" spellcheck="true">// identity of the thread wasn't corrupted.</span>            <span class="token keyword">final</span> <span class="token keyword">long</span> newIdent <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ident <span class="token operator">!=</span> newIdent<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Log<span class="token punctuation">.</span><span class="token function">wtf</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Thread identity changed from 0x"</span>                        <span class="token operator">+</span> Long<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>ident<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" to 0x"</span>                        <span class="token operator">+</span> Long<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>newIdent<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" while dispatching to "</span>                        <span class="token operator">+</span> msg<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span>                        <span class="token operator">+</span> msg<span class="token punctuation">.</span>callback <span class="token operator">+</span> <span class="token string">" what="</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            msg<span class="token punctuation">.</span><span class="token function">recycleUnchecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，代码第6行，从轮询器中获取消息队列。接着通过一个死循环来把消息队列中的消息逐个取出来。代码第14行，通过MessageQueue的next()方法取出消息，当queue.next返回null时会退出消息循环。有消息则调用msg.target.dispatchMessage(msg)，target就是发送message时跟message关联的handler，Message被处理后会被调用recycleUnchecked()进行回收。</p><p>接下来看看MessageQueue的next()方法<br>【MessageQueue.java】</p><pre class="line-numbers language-java"><code class="language-java">    Message <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Return here if the message loop has already quit and been disposed.</span>        <span class="token comment" spellcheck="true">// This can happen if the application tries to restart a looper after quit</span>        <span class="token comment" spellcheck="true">// which is not supported.</span>        <span class="token keyword">final</span> <span class="token keyword">long</span> ptr <span class="token operator">=</span> mPtr<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ptr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> pendingIdleHandlerCount <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// -1 only during first iteration</span>        <span class="token keyword">int</span> nextPollTimeoutMillis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextPollTimeoutMillis <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Binder<span class="token punctuation">.</span><span class="token function">flushPendingCommands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">nativePollOnce</span><span class="token punctuation">(</span>ptr<span class="token punctuation">,</span> nextPollTimeoutMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// Try to retrieve the next message.  Return if found.</span>                <span class="token keyword">final</span> <span class="token keyword">long</span> now <span class="token operator">=</span> SystemClock<span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                Message prevMsg <span class="token operator">=</span> null<span class="token punctuation">;</span>                Message msg <span class="token operator">=</span> mMessages<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>target <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// Stalled by a barrier.  Find the next asynchronous message in the queue.</span>                    <span class="token keyword">do</span> <span class="token punctuation">{</span>                        prevMsg <span class="token operator">=</span> msg<span class="token punctuation">;</span>                        msg <span class="token operator">=</span> msg<span class="token punctuation">.</span>next<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>msg <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>msg<span class="token punctuation">.</span><span class="token function">isAsynchronous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">&lt;</span> msg<span class="token punctuation">.</span>when<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// Next message is not ready.  Set a timeout to wake up when it is ready.</span>                        nextPollTimeoutMillis <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>when <span class="token operator">-</span> now<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// Got a message.</span>                        mBlocked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>prevMsg <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            prevMsg<span class="token punctuation">.</span>next <span class="token operator">=</span> msg<span class="token punctuation">.</span>next<span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            mMessages <span class="token operator">=</span> msg<span class="token punctuation">.</span>next<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        msg<span class="token punctuation">.</span>next <span class="token operator">=</span> null<span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG<span class="token punctuation">)</span> Log<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Returning message: "</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                        msg<span class="token punctuation">.</span><span class="token function">markInUse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// No more messages.</span>                    nextPollTimeoutMillis <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// Process the quit message now that all pending messages have been handled.</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mQuitting<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> null<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// If first time idle, then get the number of idlers to run.</span>                <span class="token comment" spellcheck="true">// Idle handles only run if the queue is empty or if the first message</span>                <span class="token comment" spellcheck="true">// in the queue (possibly a barrier) is due to be handled in the future.</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>pendingIdleHandlerCount <span class="token operator">&lt;</span> <span class="token number">0</span>                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mMessages <span class="token operator">==</span> null <span class="token operator">||</span> now <span class="token operator">&lt;</span> mMessages<span class="token punctuation">.</span>when<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    pendingIdleHandlerCount <span class="token operator">=</span> mIdleHandlers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>pendingIdleHandlerCount <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// No idle handlers to run.  Loop and wait some more.</span>                    mBlocked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mPendingIdleHandlers <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    mPendingIdleHandlers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IdleHandler</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>pendingIdleHandlerCount<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                mPendingIdleHandlers <span class="token operator">=</span> mIdleHandlers<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>mPendingIdleHandlers<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// Run the idle handlers.</span>            <span class="token comment" spellcheck="true">// We only ever reach this code block during the first iteration.</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pendingIdleHandlerCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">final</span> IdleHandler idler <span class="token operator">=</span> mPendingIdleHandlers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                mPendingIdleHandlers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> null<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// release the reference to the handler</span>                <span class="token keyword">boolean</span> keep <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    keep <span class="token operator">=</span> idler<span class="token punctuation">.</span><span class="token function">queueIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Log<span class="token punctuation">.</span><span class="token function">wtf</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"IdleHandler threw exception"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>keep<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        mIdleHandlers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>idler<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// Reset the idle handler count to 0 so we do not run them again.</span>            pendingIdleHandlerCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// While calling an idle handler, a new message could have been delivered</span>            <span class="token comment" spellcheck="true">// so go back and look again for a pending message without waiting.</span>            nextPollTimeoutMillis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大概意思是如果当前MessageQueue中存在mMessages就将这个消息取出来，标记为已用并从消息队列中移除该消息，然后让下一条消息成为mMessages，否则就进入一个阻塞状态，一直等到有新的消息入队。</p><p>接下来看看Handler的dispatchMessage()方法<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dispatchMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>callback <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">handleCallback</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>mCallback <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mCallback<span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，第2行进行判断，如果msg.callback不为空，则调用handleCallback(msg);方法，否则直接调用Handler的handleMessage()方法。这里的handleMessage()方法是不是很熟悉？没错！就是我们在主线程中处理消息的handleMessage()方法。</p><p>接下来看看Handler的handleCallback()方法<br>【Handler.java】</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">handleCallback</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>            message<span class="token punctuation">.</span>callback<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到，处理消息是在run方法中，即Runnable对象的run方法，也就是我们不用最常用的方法使用handle，而是以callback的方式使用。如下：</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//1，创建Handler（主线程）</span>    Handler mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//3,处理消息</span>                mMessage <span class="token operator">=</span> Message<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span>mHandler<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------callback的形式处理消息--------------"</span> <span class="token operator">+</span> mMessage<span class="token punctuation">.</span>arg1<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mMessage<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> <span class="token number">666</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//2,发送消息</span>                mHandler<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>mMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实Handler的post()方法源码也是走了handleCallback()方法。自己点击post()方法进去看看就知道了。</p><p><strong>小总结：通过轮询器的Looper.loop()方法中执行一个死循环把消息队列中的消息逐个取出来。死循环中主要通过MessageQueue的next()方法取出消息，取出消息后通过调用Handler的dispatchMessage()方法最终在handleCallback(msg)或者handleMessage(msg)方法处理消息。</strong></p><p><strong>好了，Handler消息机制源码终于分析完了。希望这篇文章可以在面试当中帮到你们。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 面试 </category>
          
          <category> 源码解析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Handler </tag>
            
            <tag> 面试 </tag>
            
            <tag> 源码解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最全加快 Android Studio 的编译速度</title>
      <link href="/promote-android-studio-compile-speed/"/>
      <url>/promote-android-studio-compile-speed/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一开始公司的电脑运行Android Studio的项目那叫一个慢呀! 每次都要2-5分钟。但是电脑的内存又是8G，CPU是I7的，按道理不应该这么慢呀。后来我实在不能忍受了， 经过一番折腾，终于将运行速度提升到10-30秒以内。下面总结下几种方法。</p><h2 id="一、加大分配的内存"><a href="#一、加大分配的内存" class="headerlink" title="一、加大分配的内存"></a>一、加大分配的内存</h2><p>打开Android Studio的安装目录，找到下面的文件进行修改，如图：<br>bin\studio64.exe.vmoptions<br><img src="1.jpg" alt></p><h2 id="二、Android-Studio设置自动编译工程"><a href="#二、Android-Studio设置自动编译工程" class="headerlink" title="二、Android Studio设置自动编译工程"></a>二、Android Studio设置自动编译工程</h2><p>打开Android Studio的设置，找到如图所示，打上勾即可。如图：<br><img src="2.jpg" alt></p><h2 id="三、打开Android-Studio的-instant-run-功能，如图："><a href="#三、打开Android-Studio的-instant-run-功能，如图：" class="headerlink" title="三、打开Android Studio的 instant run 功能，如图："></a>三、打开Android Studio的 instant run 功能，如图：</h2><p><img src="3.jpg" alt></p><h2 id="四、打开dex增量编译"><a href="#四、打开dex增量编译" class="headerlink" title="四、打开dex增量编译"></a>四、打开dex增量编译</h2><p>在Module的build.gradle中添加如下代码</p><pre><code>dexOptions {        incremental true}</code></pre><h2 id="五、修改gradle设置"><a href="#五、修改gradle设置" class="headerlink" title="五、修改gradle设置"></a>五、修改gradle设置</h2><p>在Project的gradle.properties中添加：</p><pre><code>org.gradle.daemon=trueorg.gradle.parallel=trueorg.gradle.configureondemand=trueorg.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</code></pre><h2 id="六、使用本地gradle"><a href="#六、使用本地gradle" class="headerlink" title="六、使用本地gradle"></a>六、使用本地gradle</h2><p>在Android studio–&gt;Settings–&gt;Gradle 将offline work勾选上，如图：<br><img src="4.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Butterknife 8.5.1 最新使用详解</title>
      <link href="/butterknife/"/>
      <url>/butterknife/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前我们会在代码中写很多findViewById以及setOnClickListener等代码，不仅写起来麻烦，看起来也不整洁。现在我们用View注入框架ButterKnife就能解决这些问题。</p><p>ButterKnife的github地址：<a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="noopener">https://github.com/JakeWharton/butterknife</a></p><h2 id="一、添加依赖"><a href="#一、添加依赖" class="headerlink" title="一、添加依赖"></a>一、添加依赖</h2><p>（1）在项目的的build.gredle 文件中的dependencies标签内添加如下：</p><pre class="line-numbers language-java"><code class="language-java">classpath <span class="token string">'com.jakewharton:butterknife-gradle-plugin:8.5.1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如图所示：<br><img src="1.jpg" alt></p><p>（2）在Module的的build.gredle 文件中的最上面添加如下：</p><pre class="line-numbers language-java"><code class="language-java">apply plugin<span class="token operator">:</span> <span class="token string">'com.jakewharton.butterknife'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）在Module的的build.gredle 文件中的dependencies标签内添加如下：</p><pre class="line-numbers language-java"><code class="language-java">compile <span class="token string">'com.jakewharton:butterknife:8.5.1'</span>annotationProcessor <span class="token string">'com.jakewharton:butterknife-compiler:8.5.1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如图所示：<br><img src="2.jpg" alt></p><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><p>例如在布局文件中我们有个控件tv_text需要绑定</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>TextView        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_text"</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Hello World!"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>则我们需要在代码中添加如下代码<br>（1）绑定activity</p><pre class="line-numbers language-java"><code class="language-java">ButterKnife<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）绑定控件id</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@BindView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_text<span class="token punctuation">)</span>    TextView mTvText<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）使用该控件，如下图所示<br><img src="3.jpg" alt></p><p><strong>如果是绑定fragment，则添加如下代码</strong></p><pre class="line-numbers language-java"><code class="language-java">ButterKnife<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>如果是绑定RecyclerView的item，则在ViewHolder中添加如下代码</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@BindView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_day<span class="token punctuation">)</span>        TextView     mTvDay<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">ViewHolder</span><span class="token punctuation">(</span>View itemView<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>            ButterKnife<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、配合Butterknife插件使用更简单"><a href="#三、配合Butterknife插件使用更简单" class="headerlink" title="三、配合Butterknife插件使用更简单"></a>三、配合Butterknife插件使用更简单</h2><p>让我们写上面的代码还是比较麻烦的，高手都是用插件的。使用步骤如下：<br><strong>插件的安装：</strong></p><p>（1）在settings中搜索插件Zelezny<br><img src="4.jpg" alt></p><p>（2）点击安装，安装后需要重启android studio<br><img src="5.jpg" alt></p><p><strong>插件的使用：</strong></p><p>（1）选中布局文件，点击右键，选择Generate-&gt;Generate Butterknife Injections-&gt;Confirm，如图：<br><img src="6.jpg" alt></p><p><img src="7.jpg" alt></p><p><img src="8.jpg" alt></p><p>（2）点击Confirm后，会自动生成BindView等代码:<br><img src="9.jpg" alt></p><p>OK，Butterknife使用就到这里结束。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterknife </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 使用 ShareSDK 集成 QQ、微信、微博等第三方登录</title>
      <link href="/sharesdk-login/"/>
      <url>/sharesdk-login/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第三方登录几乎是每个APP的必须功能。有些人说看官方的文档实在让人眼花缭乱，以前自己第一次做这些功能的时候也会遇到很多坑。这里整理了一份比较详细的，主要给新手学习。有任何问题欢迎提出来！</p><h2 id="一、获取ShareSDK的AppKey"><a href="#一、获取ShareSDK的AppKey" class="headerlink" title="一、获取ShareSDK的AppKey"></a>一、获取ShareSDK的AppKey</h2><p>（照着流程来，很简单！）<br><a href="http://bbs.mob.com/forum.php?mod=viewthread&amp;tid=8212&amp;extra=page%3D1" target="_blank" rel="noopener">http://bbs.mob.com/forum.php?mod=viewthread&amp;tid=8212&amp;extra=page%3D1</a></p><h2 id="二、下载SDK"><a href="#二、下载SDK" class="headerlink" title="二、下载SDK"></a>二、下载SDK</h2><p>下载地址：<a href="http://www.mob.com/downloadDetail/ShareSDK/android" target="_blank" rel="noopener">http://www.mob.com/downloadDetail/ShareSDK/android</a><br>下载的时候一般用默认的就足够了<br><img src="1.jpg" alt></p><p>下载后解压出来是这样的<br><img src="2.jpg" alt></p><h2 id="三、准备资源"><a href="#三、准备资源" class="headerlink" title="三、准备资源"></a>三、准备资源</h2><p>点击第一个文件夹，进去如下，双击QuickIntegrater.jar<br><img src="3.jpg" alt></p><p>只需要填写项目名称和项目包名即可，其他默认。如图：<br><img src="4.jpg" alt></p><p>点击确认后会生成如下文件夹，如图：<br><img src="5.jpg" alt></p><p><img src="6.jpg" alt></p><h2 id="四、开始集成"><a href="#四、开始集成" class="headerlink" title="四、开始集成"></a>四、开始集成</h2><p>（1）将上面的文件夹依次粘贴到工程相应的文件夹即可，如图：<br><img src="7.jpg" alt></p><p>（2）在清单文件AndroidManifest.xml添加权限</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.GET_TASKS"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.CHANGE_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.MANAGE_ACCOUNTS"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.GET_ACCOUNTS"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 蓝牙分享所需的权限 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.BLUETOOTH"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.BLUETOOTH_ADMIN"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）在清单文件AndroidManifest.xml添加activity信息<br>（注意：tencent后面的appid要保持和您配置的QQ的appid一致）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>activity     android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.mob.tools.MobUIShell"</span>     android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span>     android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation|screenSize"</span>     android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span>     android<span class="token operator">:</span>windowSoftInputMode<span class="token operator">=</span><span class="token string">"stateHidden|adjustResize"</span> <span class="token operator">></span>     <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>         <span class="token operator">&lt;</span>data android<span class="token operator">:</span>scheme<span class="token operator">=</span><span class="token string">"tencent100371282"</span> <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.VIEW"</span> <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.BROWSABLE"</span> <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span> <span class="token operator">/</span><span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 调用新浪原生SDK，需要注册的回调activity <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.sina.weibo.sdk.action.ACTION_SDK_REQ_ACTIVITY"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>集成line客户端登录授权，需要添如下格式的过滤器<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>data android<span class="token operator">:</span>scheme<span class="token operator">=</span><span class="token string">"line.1477692153"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.VIEW"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.BROWSABLE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果您集成了微信，还需要添加下面回调的activity处理；</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>activity     android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".wxapi.WXEntryActivity"</span>     android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span>     android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation|screenSize"</span>     android<span class="token operator">:</span>exported<span class="token operator">=</span><span class="token string">"true"</span>     android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span> <span class="token operator">/</span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）在刚刚拷贝进去的ShareSDK中替换mob后台申请的Appkey与各个平台申请的key<br>注意：<br>mob后台申请的Appkey：就是第一部中获取ShareSDK的AppKey<br>各个平台申请的key：需要到各个平台申请，例如需要微信分享，则需要到微信开放平台进行申请</p><p><img src="8.jpg" alt></p><p>（5）添加登录代码<br>在您程序启动的时候添加初始化代码（注：不要等调用ShareSDK功能之前才初始化）<br>即自己添加一个类继承Application，在onCreate方法添加下面的代码，如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//初始化ShareSDK</span>        ShareSDK<span class="token punctuation">.</span><span class="token function">initSDK</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意: 该类需要在清单文件中注册，如图：<br><img src="9.jpg" alt></p><p>登录activity代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token keyword">implements</span> <span class="token class-name">PlatformActionListener</span><span class="token punctuation">,</span> Handler<span class="token punctuation">.</span>Callback<span class="token punctuation">,</span> View<span class="token punctuation">.</span>OnClickListener <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_ACTION_CCALLBACK <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> ImageView ivWxLogin<span class="token punctuation">;</span>    <span class="token keyword">private</span> ImageView ivQqLogin<span class="token punctuation">;</span>    <span class="token keyword">private</span> ImageView ivBlog<span class="token punctuation">;</span>    <span class="token keyword">private</span> ProgressDialog progressDialog<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_login<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ivWxLogin <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_wx_login<span class="token punctuation">)</span><span class="token punctuation">;</span>        ivQqLogin <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_qq_login<span class="token punctuation">)</span><span class="token punctuation">;</span>        ivBlog <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_blog<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ivWxLogin<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ivQqLogin<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ivBlog<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_wx_login<span class="token operator">:</span>                Platform wechat <span class="token operator">=</span> ShareSDK<span class="token punctuation">.</span><span class="token function">getPlatform</span><span class="token punctuation">(</span>Wechat<span class="token punctuation">.</span>NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>                wechat<span class="token punctuation">.</span><span class="token function">setPlatformActionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                wechat<span class="token punctuation">.</span><span class="token function">SSOSetting</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">authorize</span><span class="token punctuation">(</span>wechat<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_qq_login<span class="token operator">:</span>                Platform qq <span class="token operator">=</span> ShareSDK<span class="token punctuation">.</span><span class="token function">getPlatform</span><span class="token punctuation">(</span>QQ<span class="token punctuation">.</span>NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>                qq<span class="token punctuation">.</span><span class="token function">setPlatformActionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                qq<span class="token punctuation">.</span><span class="token function">SSOSetting</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">authorize</span><span class="token punctuation">(</span>qq<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_blog<span class="token operator">:</span>                Platform sina <span class="token operator">=</span> ShareSDK<span class="token punctuation">.</span><span class="token function">getPlatform</span><span class="token punctuation">(</span>SinaWeibo<span class="token punctuation">.</span>NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>                sina<span class="token punctuation">.</span><span class="token function">setPlatformActionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                sina<span class="token punctuation">.</span><span class="token function">SSOSetting</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">authorize</span><span class="token punctuation">(</span>sina<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//授权</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">authorize</span><span class="token punctuation">(</span>Platform plat<span class="token punctuation">,</span> <span class="token keyword">int</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token function">showProgressDialog</span><span class="token punctuation">(</span><span class="token function">getString</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>string<span class="token punctuation">.</span>opening_wechat<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                <span class="token function">showProgressDialog</span><span class="token punctuation">(</span><span class="token function">getString</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>string<span class="token punctuation">.</span>opening_qq<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                <span class="token function">showProgressDialog</span><span class="token punctuation">(</span><span class="token function">getString</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>string<span class="token punctuation">.</span>opening_blog<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>plat<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//如果授权就删除授权资料</span>            plat<span class="token punctuation">.</span><span class="token function">removeAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        plat<span class="token punctuation">.</span><span class="token function">showUser</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//授权并获取用户信息</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//登陆授权成功的回调</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span>Platform platform<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Message msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>what <span class="token operator">=</span> MSG_ACTION_CCALLBACK<span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> action<span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>obj <span class="token operator">=</span> platform<span class="token punctuation">;</span>        UIHandler<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//发送消息</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//登陆授权错误的回调</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Platform platform<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> Throwable t<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Message msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>what <span class="token operator">=</span> MSG_ACTION_CCALLBACK<span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> action<span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>obj <span class="token operator">=</span> t<span class="token punctuation">;</span>        UIHandler<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//登陆授权取消的回调</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCancel</span><span class="token punctuation">(</span>Platform platform<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Message msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>what <span class="token operator">=</span> MSG_ACTION_CCALLBACK<span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> action<span class="token punctuation">;</span>        msg<span class="token punctuation">.</span>obj <span class="token operator">=</span> platform<span class="token punctuation">;</span>        UIHandler<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//登陆发送的handle消息在这里处理</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">hideProgressDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>arg1<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 成功</span>                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"授权登陆成功"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//获取用户资料</span>                Platform platform <span class="token operator">=</span> <span class="token punctuation">(</span>Platform<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>                String userId <span class="token operator">=</span> platform<span class="token punctuation">.</span><span class="token function">getDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取用户账号</span>                String userName <span class="token operator">=</span> platform<span class="token punctuation">.</span><span class="token function">getDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取用户名字</span>                String userIcon <span class="token operator">=</span> platform<span class="token punctuation">.</span><span class="token function">getDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取用户头像</span>                String userGender <span class="token operator">=</span> platform<span class="token punctuation">.</span><span class="token function">getDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取用户性别，m = 男, f = 女，如果微信没有设置性别,默认返回null</span>                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"用户信息为--用户名："</span> <span class="token operator">+</span> userName <span class="token operator">+</span> <span class="token string">"  性别："</span> <span class="token operator">+</span> userGender<span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//下面就可以利用获取的用户信息登录自己的服务器或者做自己想做的事啦!</span>                <span class="token comment" spellcheck="true">//。。。</span>            <span class="token punctuation">}</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 失败</span>                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"授权登陆失败"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 取消</span>                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"授权登陆取消"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//显示dialog</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showProgressDialog</span><span class="token punctuation">(</span>String message<span class="token punctuation">)</span> <span class="token punctuation">{</span>        progressDialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProgressDialog</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        progressDialog<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        progressDialog<span class="token punctuation">.</span><span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        progressDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//隐藏dialog</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hideProgressDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>progressDialog <span class="token operator">!=</span> null<span class="token punctuation">)</span>            progressDialog<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>布局activity_login.xml：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>LinearLayout xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>              android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>              android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>              android<span class="token operator">:</span>gravity<span class="token operator">=</span><span class="token string">"center"</span>              android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"horizontal"</span>    <span class="token operator">></span>    <span class="token operator">&lt;</span>LinearLayout        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>gravity<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>ImageView            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/iv_wx_login"</span>            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"center_horizontal"</span>            android<span class="token operator">:</span>layout_marginTop<span class="token operator">=</span><span class="token string">"10dp"</span>            android<span class="token operator">:</span>clickable<span class="token operator">=</span><span class="token string">"true"</span>            android<span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"@mipmap/wechat_icon"</span>            <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>ImageView            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/iv_qq_login"</span>            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"center_horizontal"</span>            android<span class="token operator">:</span>layout_marginLeft<span class="token operator">=</span><span class="token string">"20dp"</span>            android<span class="token operator">:</span>layout_marginRight<span class="token operator">=</span><span class="token string">"20dp"</span>            android<span class="token operator">:</span>layout_marginTop<span class="token operator">=</span><span class="token string">"10dp"</span>            android<span class="token operator">:</span>clickable<span class="token operator">=</span><span class="token string">"true"</span>            android<span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"@mipmap/qq_icon"</span>            <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>ImageView            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/iv_blog"</span>            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"center_horizontal"</span>            android<span class="token operator">:</span>layout_marginTop<span class="token operator">=</span><span class="token string">"10dp"</span>            android<span class="token operator">:</span>clickable<span class="token operator">=</span><span class="token string">"true"</span>            android<span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"@mipmap/blog_icon"</span>            <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="10.jpg" alt></p><p>Demo下载：<a href="https://github.com/wildma/ShareSDKThirdPartyShareLogin" target="_blank" rel="noopener">https://github.com/wildma/ShareSDKThirdPartyShareLogin</a> </p><p><strong>如果对你有帮助记得点赞，star支持下哈~</strong></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ShareSDK </tag>
            
            <tag> 第三方登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 使用 ShareSDK 集成 QQ、微信、微博等第三方分享</title>
      <link href="/sharesdk-share/"/>
      <url>/sharesdk-share/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第三方分享几乎是每个APP的必须功能。有些人说看官方的文档实在让人眼花缭乱，以前自己第一次做这些功能的时候也会遇到很多坑。这里整理了一份比较详细的，主要给新手学习。有任何问题欢迎提出来！</p><h2 id="一、获取ShareSDK的AppKey"><a href="#一、获取ShareSDK的AppKey" class="headerlink" title="一、获取ShareSDK的AppKey"></a>一、获取ShareSDK的AppKey</h2><p>（照着流程来，很简单！）<br><a href="http://bbs.mob.com/forum.php?mod=viewthread&amp;tid=8212&amp;extra=page%3D1" target="_blank" rel="noopener">http://bbs.mob.com/forum.php?mod=viewthread&amp;tid=8212&amp;extra=page%3D1</a></p><h2 id="二、下载SDK"><a href="#二、下载SDK" class="headerlink" title="二、下载SDK"></a>二、下载SDK</h2><p>下载地址：<a href="http://www.mob.com/downloadDetail/ShareSDK/android" target="_blank" rel="noopener">http://www.mob.com/downloadDetail/ShareSDK/android</a><br>下载的时候一般用默认的就足够了<br><img src="1.jpg" alt></p><p>下载后解压出来是这样的<br><img src="2.jpg" alt></p><h2 id="三、准备资源"><a href="#三、准备资源" class="headerlink" title="三、准备资源"></a>三、准备资源</h2><p>点击第一个文件夹，进去如下，双击QuickIntegrater.jar<br><img src="3.jpg" alt></p><p>只需要填写项目名称和项目包名即可，其他默认。如图：<br><img src="4.jpg" alt></p><p>点击确认后会生成如下文件夹，如图：<br><img src="5.jpg" alt></p><p><img src="6.jpg" alt></p><h2 id="四、开始集成"><a href="#四、开始集成" class="headerlink" title="四、开始集成"></a>四、开始集成</h2><p>（1）将上面的文件夹依次粘贴到工程相应的文件夹即可，如图：<br><img src="7.jpg" alt></p><p>（2）在清单文件AndroidManifest.xml添加权限</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.GET_TASKS"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.CHANGE_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.MANAGE_ACCOUNTS"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.GET_ACCOUNTS"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 蓝牙分享所需的权限 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.BLUETOOTH"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.BLUETOOTH_ADMIN"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）在清单文件AndroidManifest.xml添加activity信息<br>（注意：tencent后面的appid要保持和您配置的QQ的appid一致）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>activity     android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.mob.tools.MobUIShell"</span>     android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span>     android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation|screenSize"</span>     android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span>     android<span class="token operator">:</span>windowSoftInputMode<span class="token operator">=</span><span class="token string">"stateHidden|adjustResize"</span> <span class="token operator">></span>     <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>         <span class="token operator">&lt;</span>data android<span class="token operator">:</span>scheme<span class="token operator">=</span><span class="token string">"tencent100371282"</span> <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.VIEW"</span> <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.BROWSABLE"</span> <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span> <span class="token operator">/</span><span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 调用新浪原生SDK，需要注册的回调activity <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.sina.weibo.sdk.action.ACTION_SDK_REQ_ACTIVITY"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>集成line客户端登录授权，需要添如下格式的过滤器<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>        <span class="token operator">&lt;</span>data android<span class="token operator">:</span>scheme<span class="token operator">=</span><span class="token string">"line.1477692153"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.VIEW"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.BROWSABLE"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果您集成了微信，还需要添加下面回调的activity处理；</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>activity     android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".wxapi.WXEntryActivity"</span>     android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Translucent.NoTitleBar"</span>     android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"keyboardHidden|orientation|screenSize"</span>     android<span class="token operator">:</span>exported<span class="token operator">=</span><span class="token string">"true"</span>     android<span class="token operator">:</span>screenOrientation<span class="token operator">=</span><span class="token string">"portrait"</span> <span class="token operator">/</span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）在刚刚拷贝进去的ShareSDK中替换mob后台申请的Appkey与各个平台申请的key<br>注意：<br>mob后台申请的Appkey：就是第一部中获取ShareSDK的AppKey<br>各个平台申请的key：需要到各个平台申请，例如需要微信分享，则需要到微信开放平台进行申请</p><p><img src="8.jpg" alt></p><p>（5）添加分享代码<br>在您程序启动的时候添加初始化代码（注：不要等调用ShareSDK功能之前才初始化）<br>即自己添加一个类继承Application，在onCreate方法添加下面的代码，如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//初始化ShareSDK</span>        ShareSDK<span class="token punctuation">.</span><span class="token function">initSDK</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意: 该类需要在清单文件中注册，如图：<br><img src="9.jpg" alt></p><p>在您的代码中调用此方法，即可打开一键分享功能进行分享</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showShare</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> OnekeyShare oks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OnekeyShare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//关闭sso授权</span> oks<span class="token punctuation">.</span><span class="token function">disableSSOWhenAuthorize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// title标题，印象笔记、邮箱、信息、微信、人人网、QQ和QQ空间使用</span> oks<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"标题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// titleUrl是标题的网络链接，仅在Linked-in,QQ和QQ空间使用</span> oks<span class="token punctuation">.</span><span class="token function">setTitleUrl</span><span class="token punctuation">(</span><span class="token string">"http://sharesdk.cn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// text是分享文本，所有平台都需要这个字段</span> oks<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"我是分享文本"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//分享网络图片，新浪微博分享网络图片需要通过审核后申请高级写入接口，否则请注释掉测试新浪微博</span> oks<span class="token punctuation">.</span><span class="token function">setImageUrl</span><span class="token punctuation">(</span><span class="token string">"http://f1.sharesdk.cn/imgs/2014/02/26/owWpLZo_638x960.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// imagePath是图片的本地路径，Linked-In以外的平台都支持此参数</span> <span class="token comment" spellcheck="true">//oks.setImagePath("/sdcard/test.jpg");//确保SDcard下面存在此张图片</span> <span class="token comment" spellcheck="true">// url仅在微信（包括好友和朋友圈）中使用</span> oks<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">"http://sharesdk.cn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// comment是我对这条分享的评论，仅在人人网和QQ空间使用</span> oks<span class="token punctuation">.</span><span class="token function">setComment</span><span class="token punctuation">(</span><span class="token string">"我是测试评论文本"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// site是分享此内容的网站名称，仅在QQ空间使用</span> oks<span class="token punctuation">.</span><span class="token function">setSite</span><span class="token punctuation">(</span><span class="token string">"ShareSDK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// siteUrl是分享此内容的网站地址，仅在QQ空间使用</span> oks<span class="token punctuation">.</span><span class="token function">setSiteUrl</span><span class="token punctuation">(</span><span class="token string">"http://sharesdk.cn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 启动分享GUI</span> oks<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：<br><img src="10.jpg" alt></p><p>Demo下载地址：<a href="https://github.com/wildma/ShareSDKThirdPartyShareLogin" target="_blank" rel="noopener">https://github.com/wildma/ShareSDKThirdPartyShareLogin</a></p><p><strong>如果对你有帮助记得点赞，star支持下哈~</strong></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ShareSDK </tag>
            
            <tag> 第三方分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 使用 OkHttp 请求自签名的 HTTPS 网站</title>
      <link href="/okhttp-self-signature-https/"/>
      <url>/okhttp-self-signature-https/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很多公司考虑到安全问题，项目中都采用https加密协议进行数据传输。但是一些公司又不想花一笔钱去CA申请证书，所以就采用自签名的证书。</p><p>OkHttp默认是可以访问通过CA认证的HTTPS链接，例如百度首页也是https链接（<a href="https://www.baidu.com/）。" target="_blank" rel="noopener">https://www.baidu.com/）。</a> 但是如果是你们公司自签名(即自己用keytool生成的证书，而不是采用通过CA认证的证书)的服务器，OkHttp是无法访问的，例如访问12306网站（<a href="https://kyfw.12306.cn/otn/）" target="_blank" rel="noopener">https://kyfw.12306.cn/otn/）</a> ，会报如下错误：<br><img src="1.jpg" alt></p><h2 id="一、HTTPS的工作原理"><a href="#一、HTTPS的工作原理" class="headerlink" title="一、HTTPS的工作原理"></a>一、HTTPS的工作原理</h2><p>HTTPS在传输数据之前需要客户端（浏览器）与服务端（网站）之间进行一次握手，在握手过程中将确立双方加密传输数据的密码信息。握手过程的简单描述如下：</p><ol><li>浏览器将自己支持的一套加密算法、HASH算法发送给网站。</li><li>网站从中选出一组加密算法与HASH算法，并将自己的身份信息以证书的形式发回给浏览器。证书里面包含了网站地址，加密公钥，以及证书的颁发机构等信息。</li><li>浏览器获得网站证书之后，开始验证证书的合法性，如果证书信任，则生成一串随机数字作为通讯过程中对称加密的秘钥。然后取出证书中的公钥，将这串数字以及HASH的结果进行加密，然后发给网站。</li><li>网站接收浏览器发来的数据之后，通过私钥进行解密，然后HASH校验，如果一致，则使用浏览器发来的数字串使加密一段握手消息发给浏览器。</li><li>浏览器解密，并HASH校验，没有问题，则握手结束。接下来的传输过程将由之前浏览器生成的随机密码并利用对称加密算法进行加密。</li></ol><p>握手过程中如果有任何错误，都会使加密连接断开，从而阻止了隐私信息的传输。</p><h2 id="二、使用OKHTTP请求自签名的https服务器数据"><a href="#二、使用OKHTTP请求自签名的https服务器数据" class="headerlink" title="二、使用OKHTTP请求自签名的https服务器数据"></a>二、使用OKHTTP请求自签名的https服务器数据</h2><p><strong>以下我们使用12306网站为例</strong></p><p>（1） 首先去12306网站首页下载证书 <a href="http://www.12306.cn/" target="_blank" rel="noopener">http://www.12306.cn/</a><br><img src="2.jpg" alt></p><p>（2） 将下载的证书srca.cer放到工程的assets文件夹下。<br><img src="3.jpg" alt></p><p>（3） 添加HTTPS工具类</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>GeneralSecurityException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>KeyStore<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span>Certificate<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span>CertificateFactory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collection<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>KeyManagerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>SSLContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>SSLSocketFactory<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>TrustManager<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>TrustManagerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>X509TrustManager<span class="token punctuation">;</span><span class="token keyword">import</span> okhttp3<span class="token punctuation">.</span>OkHttpClient<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">HTTPSUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> OkHttpClient client<span class="token punctuation">;</span>    <span class="token keyword">public</span> Context mContext<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 获取OkHttpClient实例     * @return     */</span>    <span class="token keyword">public</span> OkHttpClient <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> client<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 初始化HTTPS,添加信任证书     * @param context     */</span>    <span class="token keyword">public</span> <span class="token function">HTTPSUtils</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        mContext <span class="token operator">=</span> context<span class="token punctuation">;</span>        X509TrustManager trustManager<span class="token punctuation">;</span>        SSLSocketFactory sslSocketFactory<span class="token punctuation">;</span>        <span class="token keyword">final</span> InputStream inputStream<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            inputStream <span class="token operator">=</span> mContext<span class="token punctuation">.</span><span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"srca.cer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 得到证书的输入流</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                trustManager <span class="token operator">=</span> <span class="token function">trustManagerForCertificates</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//以流的方式读入证书</span>                SSLContext sslContext <span class="token operator">=</span> SSLContext<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"TLS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                sslContext<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TrustManager</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>trustManager<span class="token punctuation">}</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>                sslSocketFactory <span class="token operator">=</span> sslContext<span class="token punctuation">.</span><span class="token function">getSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">GeneralSecurityException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">sslSocketFactory</span><span class="token punctuation">(</span>sslSocketFactory<span class="token punctuation">,</span> trustManager<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 以流的方式添加信任证书     */</span>    <span class="token comment" spellcheck="true">/**     * Returns a trust manager that trusts {@code certificates} and none other. HTTPS services whose     * certificates have not been signed by these certificates will fail with a {@code     * SSLHandshakeException}.     * &lt;p>     * &lt;p>This can be used to replace the host platform's built-in trusted certificates with a custom     * set. This is useful in development where certificate authority-trusted certificates aren't     * available. Or in production, to avoid reliance on third-party certificate authorities.     * &lt;p>     * &lt;p>     * &lt;h3>Warning: Customizing Trusted Certificates is Dangerous!&lt;/h3>     * &lt;p>     * &lt;p>Relying on your own trusted certificates limits your server team's ability to update their     * TLS certificates. By installing a specific set of trusted certificates, you take on additional     * operational complexity and limit your ability to migrate between certificate authorities. Do     * not use custom trusted certificates in production without the blessing of your server's TLS     * administrator.     */</span>    <span class="token keyword">private</span> X509TrustManager <span class="token function">trustManagerForCertificates</span><span class="token punctuation">(</span>InputStream in<span class="token punctuation">)</span>            <span class="token keyword">throws</span> GeneralSecurityException <span class="token punctuation">{</span>        CertificateFactory certificateFactory <span class="token operator">=</span> CertificateFactory<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"X.509"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Collection<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Certificate</span><span class="token operator">></span> certificates <span class="token operator">=</span> certificateFactory<span class="token punctuation">.</span><span class="token function">generateCertificates</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>certificates<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"expected non-empty set of trusted certificates"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// Put the certificates a key store.</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> password <span class="token operator">=</span> <span class="token string">"password"</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Any password will work.</span>        KeyStore keyStore <span class="token operator">=</span> <span class="token function">newEmptyKeyStore</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Certificate certificate <span class="token operator">:</span> certificates<span class="token punctuation">)</span> <span class="token punctuation">{</span>            String certificateAlias <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            keyStore<span class="token punctuation">.</span><span class="token function">setCertificateEntry</span><span class="token punctuation">(</span>certificateAlias<span class="token punctuation">,</span> certificate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// Use it to build an X509 trust manager.</span>        KeyManagerFactory keyManagerFactory <span class="token operator">=</span> KeyManagerFactory<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>                KeyManagerFactory<span class="token punctuation">.</span><span class="token function">getDefaultAlgorithm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        keyManagerFactory<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>keyStore<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        TrustManagerFactory trustManagerFactory <span class="token operator">=</span> TrustManagerFactory<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>                TrustManagerFactory<span class="token punctuation">.</span><span class="token function">getDefaultAlgorithm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        trustManagerFactory<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>keyStore<span class="token punctuation">)</span><span class="token punctuation">;</span>        TrustManager<span class="token punctuation">[</span><span class="token punctuation">]</span> trustManagers <span class="token operator">=</span> trustManagerFactory<span class="token punctuation">.</span><span class="token function">getTrustManagers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>trustManagers<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>trustManagers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">X509TrustManager</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">"Unexpected default trust managers:"</span>                    <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>trustManagers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>X509TrustManager<span class="token punctuation">)</span> trustManagers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 添加password     * @param password     * @return     * @throws GeneralSecurityException     */</span>    <span class="token keyword">private</span> KeyStore <span class="token function">newEmptyKeyStore</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> GeneralSecurityException <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            KeyStore keyStore <span class="token operator">=</span> KeyStore<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>KeyStore<span class="token punctuation">.</span><span class="token function">getDefaultType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 这里添加自定义的密码，默认</span>            InputStream in <span class="token operator">=</span> null<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// By convention, 'null' creates an empty key store.</span>            keyStore<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> keyStore<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）  代码中请求</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getHttpsHtml</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Request request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"https://kyfw.12306.cn/otn/"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HTTPSUtils httpsUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HTTPSUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        httpsUtils<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailure</span><span class="token punctuation">(</span>Call call<span class="token punctuation">,</span> IOException e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------onFailure--------------"</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResponse</span><span class="token punctuation">(</span>Call call<span class="token punctuation">,</span> Response response<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------onResponse--------------"</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（5） 最后能打印出这些信息就说明请求成功啦！<br><img src="4.jpg" alt></p><p><strong>注意：别忘了加权限和依赖okhttp库</strong></p><p>Demo地址：<a href="https://github.com/wildma/okhttps" target="_blank" rel="noopener">https://github.com/wildma/okhttps</a><br>参考博客：<a href="http://blog.csdn.Net/lmj623565791/article/details/48129405" target="_blank" rel="noopener">http://blog.csdn.Net/lmj623565791/article/details/48129405</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OkHttp </tag>
            
            <tag> 自签名 HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 接入多盟广告 SDK--让你的 APP 通过广告平台赚钱</title>
      <link href="/domob-advertisement-sdk/"/>
      <url>/domob-advertisement-sdk/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>个人开发者可以通过在自己的APP里面嵌入广告,用户下载你的APP,点击了你APP里的广告，您就可以在多盟平台获得相应的收益。如果是公司,那就不是为了赚那么点钱了，主要是为了与用户有更多的互动,就想着在应用里面嵌入广告。我们公司的场景是这样的: 用户点击广告-我们给用户虚拟金币-用户获取虚拟金币又可以在我们的APP的商场里面买东西的时候来抵扣现金。<br>广告平台有很多，常见的有多盟，有米、点金、百度、谷歌的admob等等。自己选择，我们公司选择的是多盟平台,下面就说说怎么集成(主要讲的是其中一种广告-激励视频, 其他类似)。<br>（集成比较简单，按着Demo就能搞定了，这里主要讲的是应用场景）</p><p>广告效果如下，是一段小视频：<br><img src="1.jpg" alt><br><img src="2.jpg" alt></p><h2 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h2><p>注意：不想看代码直接下载我的Demo源码，直接运行即可. 如果想测试你自己申请的Publisher ID,换上你自己在多盟开放平台申请的Publisher ID即可运行起来。<br>源码地址：<a href="https://github.com/wildma/DomobVideoDemo" target="_blank" rel="noopener">https://github.com/wildma/DomobVideoDemo</a></p><p>（1）在多盟平台: <a href="http://www.domob.cn/" target="_blank" rel="noopener">http://www.domob.cn/</a> 注册账号–创建应用–获取Publisher ID<br>（2）下载SDK: <a href="http://www.domob.cn/developers/SDKdownload.htm" target="_blank" rel="noopener">http://www.domob.cn/developers/SDKdownload.htm</a><br>（3）AndroidStudio关联domob-video-sdk-1.0.8.jar<br>（4）在清单文件中注册以下信息</p><p>注册权限：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_EXTERNAL_STORAGE"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.CHANGE_CONFIGURATION"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注册组件和Publisher ID：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>activity android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.pad.android_independent_video_sdk.view.IndependentVideoActivity"</span>        android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@android:style/Theme.Black.NoTitleBar.Fullscreen"</span>        android<span class="token operator">:</span>configChanges<span class="token operator">=</span><span class="token string">"orientation|keyboard|screenSize|screenLayout"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>service android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.pad.android_independent_video_sdk.IndependentService"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"PUBLISH_ID"</span> android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"你申请的Publisher ID"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（5）api使用介绍<br>初始化：</p><pre class="line-numbers language-java"><code class="language-java">IndependentVideoManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化</span>IndependentVideoManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateUserID</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span>userid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置用户唯一标示，不是媒体id，是开发者用户体系中，用户的唯一标示，没有，则可以不设置。</span>IndependentVideoManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disableShowAlert</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否使用多盟提示框，提示完成任务，默认为true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>监听视频状态：</p><pre class="line-numbers language-java"><code class="language-java">IndependentVideoManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addIndependentVideoListener</span><span class="token punctuation">(</span>independentVideoListener<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//传入IndependentVideoListener的实例</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>IndependentVideoListener的回调方法如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">videoDidStartLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//视频开始加载</span><span class="token keyword">void</span> <span class="token function">videoDidFinishLoad</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//视频是否加载完成</span><span class="token keyword">void</span> <span class="token function">videoDidLoadError</span><span class="token punctuation">(</span>String var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//视频加载失败</span><span class="token keyword">void</span> <span class="token function">videoDidClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//视频关闭</span><span class="token keyword">void</span> <span class="token function">videoCompletePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//视频播放完成</span><span class="token keyword">void</span> <span class="token function">videoPlayError</span><span class="token punctuation">(</span>String var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//视频播放出错</span><span class="token keyword">void</span> <span class="token function">videoWillPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//视频开始播放</span><span class="token keyword">void</span> <span class="token function">videoVailable</span><span class="token punctuation">(</span>IndependentVideoAvailableState var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//检查视频是否可用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>IndependentVideoAvailableState有三个状态：</p><pre class="line-numbers language-java"><code class="language-java">VideoStateDownloading 视频正在下载中VideoStateFinishedCache 有可播视频缓存VideoStateNoExist 没有可播视频缓存<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>检查视频：<br>检查是否有可播视频缓存，IndependentVideoListener.videoVailable返回检查状态</p><pre class="line-numbers language-java"><code class="language-java"> IndependentVideoManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">checkVideoAvailable</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>播放视频：</p><pre class="line-numbers language-java"><code class="language-java">IndependentVideoManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">presentIndependentVideo</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>释放资源：<br>移除添加的监听，如在Activity的onDestroy生命周期方法中执行</p><pre class="line-numbers language-java"><code class="language-java">IndependentVideoManager<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeIndependentVideoListener</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>大功告成！Android 接入多盟广告就是这么简单！赶紧去赚钱吧！</p><p>注意：不想看代码直接下载我的Demo源码，直接运行即可. 如果想测试你自己申请的Publisher ID,换上你自己在多盟开放平台申请的Publisher ID即可运行起来。<br>源码地址：<a href="https://github.com/wildma/DomobVideoDemo" target="_blank" rel="noopener">https://github.com/wildma/DomobVideoDemo</a><br>如果对你有帮助记得点赞，star哈~</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多盟 </tag>
            
            <tag> domob </tag>
            
            <tag> 接入广告SDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用高德地图关键字检索 POI-实现仿微信发朋友圈搜索附近位置</title>
      <link href="/gaode-map-poi-search/"/>
      <url>/gaode-map-poi-search/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于项目中需要实现搜索附近位置作为收获地址，所以采用了高德地图的关键字检索POI来实现。官方Demo看了很复杂，估计很多人都不想看。但是看了我写的Demo你就会觉得So Easy啦！</p><p><strong>先上效果图：</strong><br><img src="1.jpg" alt></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>高德提供了千万级别的 POI（Point of Interest，兴趣点）。在地图表达中，一个 POI 可代表一栋大厦、一家商铺、一处景点等等。通过POI搜索，完成找餐馆、找景点、找厕所等等的功能。地图 SDK 的搜索功能提供多种获取 POI 数据的接口，下面说的是根据关键字检索POI</p><p><strong>要实现关键字搜索POI，当然要先集成高德地图到你的项目中去：</strong><br>集成高德地图见我的另一边文章：<a href="http://www.jianshu.com/p/f59231d5775f" target="_blank" rel="noopener">Android项目实战(一)——高德地图集成</a></p><p><strong>下面来看实现关键字搜索POI的具体代码：</strong></p><p>（1）创建activity_poi_keyword_search.xml布局文件，如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>LinearLayout    xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>EditText        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/et_keyword"</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"50dp"</span>        android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"@color/white"</span>        android<span class="token operator">:</span>hint<span class="token operator">=</span><span class="token string">"请输入地址关键字搜索"</span>        android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"8dp"</span>        android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"@color/deep_black"</span>        android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"14sp"</span>        <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>View        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"1dp"</span>        android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"@color/line_color"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/recyclerView"</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）创建recyclerview的item布局item_poi_keyword_search.xml,如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>LinearLayout    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/ll_item_layout"</span>    xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"fill_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>    android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"@color/white"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>    <span class="token operator">></span>    <span class="token operator">&lt;</span>View        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"0.5dp"</span>        android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"@color/line_color"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>LinearLayout        xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"fill_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>        android<span class="token operator">:</span>paddingBottom<span class="token operator">=</span><span class="token string">"8dp"</span>        android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"10dp"</span>        android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"10dp"</span>        android<span class="token operator">:</span>paddingTop<span class="token operator">=</span><span class="token string">"8dp"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>TextView            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_detailAddress"</span>            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"center_vertical"</span>            android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"世界之窗"</span>            android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"@color/deep_black"</span>            android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"16sp"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>TextView            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_content"</span>            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>            android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"center_vertical"</span>            android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"1号线"</span>            android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"@color/shallow_black"</span>            android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"16sp"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）创建实体类PoiAddressBean，如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PoiAddressBean</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String longitude<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//经度</span>    <span class="token keyword">private</span> String latitude<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//纬度</span>    <span class="token keyword">private</span> String text<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//信息内容</span>    <span class="token keyword">public</span>  String detailAddress<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//详细地址 (搜索的关键字)</span>    <span class="token keyword">public</span>  String province<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//省</span>    <span class="token keyword">public</span>  String city<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//城市</span>    <span class="token keyword">public</span>  String district<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//区域(宝安区)</span>    <span class="token keyword">public</span> <span class="token function">PoiAddressBean</span><span class="token punctuation">(</span>String lon<span class="token punctuation">,</span> String lat<span class="token punctuation">,</span> String detailAddress<span class="token punctuation">,</span> String text<span class="token punctuation">,</span> String province<span class="token punctuation">,</span> String city<span class="token punctuation">,</span> String district<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>longitude <span class="token operator">=</span> lon<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>latitude <span class="token operator">=</span> lat<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>detailAddress <span class="token operator">=</span> detailAddress<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>province <span class="token operator">=</span> province<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>district <span class="token operator">=</span> district<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> longitude<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> latitude<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> text<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getDetailAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> detailAddress<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getProvince</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> province<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getDistrict</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> district<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）创建适配器PoiKeywordSearchAdapter，如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PoiKeywordSearchAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>PoiKeywordSearchAdapter<span class="token punctuation">.</span>MyViewHolder<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>PoiAddressBean<span class="token operator">></span> poiAddressBean<span class="token punctuation">;</span>    Context mContext<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">PoiKeywordSearchAdapter</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>PoiAddressBean<span class="token operator">></span> poiAddressBean<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>poiAddressBean  <span class="token operator">=</span> poiAddressBean<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mContext <span class="token operator">=</span> context<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> MyViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span>ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        View view<span class="token punctuation">;</span>        view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_poi_keyword_search<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span>MyViewHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> PoiAddressBean poiAddressBean <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>poiAddressBean<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>tv_detailAddress<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>poiAddressBean<span class="token punctuation">.</span><span class="token function">getDetailAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>tv_content<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>poiAddressBean<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>ll_item_layout<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token punctuation">(</span><span class="token punctuation">(</span>PoiKeywordSearchActivity<span class="token punctuation">)</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDetailAddress</span><span class="token punctuation">(</span>poiAddressBean<span class="token punctuation">.</span><span class="token function">getDetailAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>poiAddressBean <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> poiAddressBean<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">class</span> <span class="token class-name">MyViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span> <span class="token punctuation">{</span>        TextView     tv_content<span class="token punctuation">;</span>        TextView     tv_detailAddress<span class="token punctuation">;</span>        LinearLayout ll_item_layout<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">MyViewHolder</span><span class="token punctuation">(</span>View itemView<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">super</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>            tv_detailAddress <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_detailAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>            tv_content <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_content<span class="token punctuation">)</span><span class="token punctuation">;</span>            ll_item_layout <span class="token operator">=</span> <span class="token punctuation">(</span>LinearLayout<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>ll_item_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（5）创建搜索界面类PoiKeywordSearchActivity （主要代码都在这里），如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PoiKeywordSearchActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">PoiSearch<span class="token punctuation">.</span>OnPoiSearchListener</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> RecyclerView mRecyclerView<span class="token punctuation">;</span>    <span class="token keyword">private</span> EditText mEt_keyword<span class="token punctuation">;</span>    <span class="token keyword">private</span> String keyWord <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 要输入的poi搜索关键字</span>    <span class="token keyword">private</span> PoiResult poiResult<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// poi返回的结果</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> currentPage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 当前页面，从0开始计数</span>    <span class="token keyword">private</span> PoiSearch<span class="token punctuation">.</span>Query query<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Poi查询条件类</span>    <span class="token keyword">private</span> PoiSearch       poiSearch<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// POI搜索</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_poi_keyword_search<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        mRecyclerView <span class="token operator">=</span> <span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recyclerView<span class="token punctuation">)</span><span class="token punctuation">;</span>        mEt_keyword <span class="token operator">=</span> <span class="token punctuation">(</span>EditText<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>et_keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        mEt_keyword<span class="token punctuation">.</span><span class="token function">addTextChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                keyWord <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>charSequence<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>keyWord<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ToastUtil<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>PoiKeywordSearchActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"请输入搜索关键字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token function">doSearchQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterTextChanged</span><span class="token punctuation">(</span>Editable editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 开始进行poi搜索     */</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doSearchQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        currentPage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//不输入城市名称有些地方搜索不到</span>        query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoiSearch<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span>keyWord<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"深圳"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 第一个参数表示搜索字符串，第二个参数表示poi搜索类型，第三个参数表示poi搜索区域（空字符串代表全国）</span>        <span class="token comment" spellcheck="true">//这里没有做分页加载了,默认给50条数据</span>        query<span class="token punctuation">.</span><span class="token function">setPageSize</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 设置每页最多返回多少条poiitem</span>        query<span class="token punctuation">.</span><span class="token function">setPageNum</span><span class="token punctuation">(</span>currentPage<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 设置查第一页</span>        poiSearch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoiSearch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>        poiSearch<span class="token punctuation">.</span><span class="token function">setOnPoiSearchListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        poiSearch<span class="token punctuation">.</span><span class="token function">searchPOIAsyn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        mRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * POI信息查询回调方法     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPoiSearched</span><span class="token punctuation">(</span>PoiResult result<span class="token punctuation">,</span> <span class="token keyword">int</span> rCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rCode <span class="token operator">==</span> AMapException<span class="token punctuation">.</span>CODE_AMAP_SUCCESS<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> result<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 搜索poi的结果</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 是否是同一条</span>                    poiResult <span class="token operator">=</span> result<span class="token punctuation">;</span>                    ArrayList<span class="token operator">&lt;</span>PoiAddressBean<span class="token operator">></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>PoiAddressBean<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//自己创建的数据集合</span>                    <span class="token comment" spellcheck="true">// 取得搜索到的poiitems有多少页</span>                    List<span class="token operator">&lt;</span>PoiItem<span class="token operator">></span> poiItems <span class="token operator">=</span> poiResult<span class="token punctuation">.</span><span class="token function">getPois</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 取得第一页的poiitem数据，页数从数字0开始</span>                    List<span class="token operator">&lt;</span>SuggestionCity<span class="token operator">></span> suggestionCities <span class="token operator">=</span> poiResult                            <span class="token punctuation">.</span><span class="token function">getSearchSuggestionCitys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 当搜索不到poiitem数据时，会返回含有搜索关键字的城市信息</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span>PoiItem item <span class="token operator">:</span> poiItems<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//获取经纬度对象</span>                        LatLonPoint llp <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getLatLonPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">double</span> lon <span class="token operator">=</span> llp<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">double</span> lat <span class="token operator">=</span> llp<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        String title <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        String text <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getSnippet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        String provinceName <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getProvinceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        String cityName <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getCityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        String adName <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getAdName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        data<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PoiAddressBean</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>lon<span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>lat<span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">,</span> text<span class="token punctuation">,</span>provinceName<span class="token punctuation">,</span>                                cityName<span class="token punctuation">,</span>adName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    PoiKeywordSearchAdapter adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoiKeywordSearchAdapter</span><span class="token punctuation">(</span>PoiKeywordSearchActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                    mRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                ToastUtil<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>PoiKeywordSearchActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>                        <span class="token function">getString</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>string<span class="token punctuation">.</span>no_result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ToastUtil<span class="token punctuation">.</span><span class="token function">showerror</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> rCode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * POI信息查询回调方法     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPoiItemSearched</span><span class="token punctuation">(</span>PoiItem item<span class="token punctuation">,</span> <span class="token keyword">int</span> rCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置详情地址     * @param detailAddress     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDetailAddress</span><span class="token punctuation">(</span>String detailAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>        mEt_keyword<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>detailAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（6）最后附上官方Demo中的吐司工具类ToastUtil，如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ToastUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> String info<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> info<span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">int</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> info<span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showerror</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">int</span> rCode<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>rCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//服务错误码</span>            <span class="token keyword">case</span> <span class="token number">1001</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SIGNATURE_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1002</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_INVALID_USER_KEY<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1003</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SERVICE_NOT_AVAILBALE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1004</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_DAILY_QUERY_OVER_LIMIT<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1005</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ACCESS_TOO_FREQUENT<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1006</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_INVALID_USER_IP<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1007</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_INVALID_USER_DOMAIN<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1008</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_INVALID_USER_SCODE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1009</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_USERKEY_PLAT_NOMATCH<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1010</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_IP_QUERY_OVER_LIMIT<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1011</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_NOT_SUPPORT_HTTPS<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1012</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_INSUFFICIENT_PRIVILEGES<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1013</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_USER_KEY_RECYCLED<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1100</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ENGINE_RESPONSE_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1101</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ENGINE_RESPONSE_DATA_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1102</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ENGINE_CONNECT_TIMEOUT<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1103</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ENGINE_RETURN_TIMEOUT<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1200</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SERVICE_INVALID_PARAMS<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1201</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SERVICE_MISSING_REQUIRED_PARAMS<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1202</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SERVICE_ILLEGAL_REQUEST<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1203</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SERVICE_UNKNOWN_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//sdk返回错误</span>            <span class="token keyword">case</span> <span class="token number">1800</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_ERRORCODE_MISSSING<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1801</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_ERROR_PROTOCOL<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1802</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_SOCKET_TIMEOUT_EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1803</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_URL_EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1804</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_UNKNOWHOST_EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1806</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_NETWORK_EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1900</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_UNKNOWN_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1901</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_INVALID_PARAMETER<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1902</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_IO_EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1903</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_NULLPOINT_EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//云图和附近错误码  </span>            <span class="token keyword">case</span> <span class="token number">2000</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SERVICE_TABLEID_NOT_EXIST<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2001</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ID_NOT_EXIST<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2002</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SERVICE_MAINTENANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2003</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ENGINE_TABLEID_NOT_EXIST<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2100</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_NEARBY_INVALID_USERID<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2101</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_NEARBY_KEY_NOT_BIND<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2200</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_UPLOADAUTO_STARTED_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2201</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_USERID_ILLEGAL<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2202</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_NEARBY_NULL_RESULT<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2203</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_UPLOAD_TOO_FREQUENT<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2204</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_CLIENT_UPLOAD_LOCATION_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//路径规划   </span>            <span class="token keyword">case</span> <span class="token number">3000</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ROUTE_OUT_OF_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3001</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ROUTE_NO_ROADS_NEARBY<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3002</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_ROUTE_FAIL<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3003</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_OVER_DIRECTION_RANGE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//短传分享</span>            <span class="token keyword">case</span> <span class="token number">4000</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SHARE_LICENSE_IS_EXPIRED<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">4001</span><span class="token operator">:</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AMapException</span><span class="token punctuation">(</span>AMapException<span class="token punctuation">.</span>AMAP_SHARE_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"查询失败："</span><span class="token operator">+</span>rCode <span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">logError</span><span class="token punctuation">(</span><span class="token string">"查询失败"</span><span class="token punctuation">,</span> rCode<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">logError</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rCode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">logError</span><span class="token punctuation">(</span>String info<span class="token punctuation">,</span> <span class="token keyword">int</span> errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">print</span><span class="token punctuation">(</span>LINE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//start</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"                                   错误信息                                     "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span>LINE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//title</span>        <span class="token function">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"错误码: "</span> <span class="token operator">+</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"                                                                               "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"如果需要更多信息，请根据错误码到以下地址进行查询"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  http://lbs.amap.com/api/android-sdk/guide/map-tools/error-code/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"如若仍无法解决问题，请将全部log信息提交到工单系统，多谢合作"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span>LINE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//end</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//log</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token string">"AMAP_ERROR"</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> String LINE_CHAR<span class="token operator">=</span><span class="token string">"="</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> String BOARD_CHAR<span class="token operator">=</span><span class="token string">"|"</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> LENGTH <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> String LINE<span class="token punctuation">;</span>    <span class="token keyword">static</span><span class="token punctuation">{</span>        StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>LENGTH<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            sb <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>LINE_CHAR<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        LINE <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printLog</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>LENGTH<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>BOARD_CHAR<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i <span class="token operator">&lt;</span>LENGTH<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>BOARD_CHAR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">print</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            String line <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>LENGTH<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">print</span><span class="token punctuation">(</span>BOARD_CHAR<span class="token operator">+</span>line<span class="token operator">+</span>BOARD_CHAR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printLog</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>LENGTH<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>大功告成！利用高德地图关键字检索POI就是这么简单！</strong> </p><p><strong>源码地址：</strong><a href="https://github.com/wildma/PoiDemo" target="_blank" rel="noopener">https://github.com/wildma/PoiDemo</a>    <strong>如果对你有帮助star支持下哈~</strong></p><p>注意：下载后直接运行会报“用户MD5安全码未通过”，因为该Demo用的是我自己在高德平台申请的KEY,<br>如果真的想要在我的Demo上测试你的Key,则需要替换清单文件中的key为你的。并且将项目的包名改为你申请key时的包名。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高德地图 </tag>
            
            <tag> POI 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Glide 中 centerCrop() 与 transform() 共用问题(包括 4.0.0 以上解决方法)</title>
      <link href="/glide-centercrop-transform/"/>
      <url>/glide-centercrop-transform/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>当我们在显示一张图片的时候，想让他等比例缩放到ImageView的大小，又想这张图片实现矩形圆角。</p><p>我们一开始会想到这么设置：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GlideRoundImage</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">centerCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>But，这样设置后，图片只有centerCrop效果,却没有矩形圆角效果。如图：<br><img src="1.jpg" alt></p><p>但是这并不是我们想要的效果，然后会想着去掉centerCrop看看是怎样的：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GlideRoundImage</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>结果却是这样的，没错！ 图片并没有按比例缩放.。如图：<br><img src="2.jpg" alt></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>看centerCrop()方法的源码可知，也是需要调用transform()方法的。所以前后共用CenterCrop会覆盖掉GlideRoundImage的效果。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> BitmapRequestBuilder<span class="token operator">&lt;</span>ModelType<span class="token punctuation">,</span> TranscodeType<span class="token operator">></span> <span class="token function">centerCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">transform</span><span class="token punctuation">(</span>glide<span class="token punctuation">.</span><span class="token function">getBitmapCenterCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CenterCrop</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">GlideRoundImage</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2个效果同时放在transform里面就可以解决问题了，效果图：<br><img src="3.jpg" alt></p><h2 id="Glide-4-0-0以上解决方法"><a href="#Glide-4-0-0以上解决方法" class="headerlink" title="Glide 4.0.0以上解决方法"></a>Glide 4.0.0以上解决方法</h2><p>将圆角矩形GlideRoundImage中的transform方法改成如下即可，意思就是先将bitmap转换成带centerCrop属性的bitmap，然后再转换成圆角。如下：</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> Bitmap <span class="token function">transform</span><span class="token punctuation">(</span>BitmapPool pool<span class="token punctuation">,</span> Bitmap toTransform<span class="token punctuation">,</span> <span class="token keyword">int</span> outWidth<span class="token punctuation">,</span> <span class="token keyword">int</span> outHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Bitmap bitmap <span class="token operator">=</span> TransformationUtils<span class="token punctuation">.</span><span class="token function">centerCrop</span><span class="token punctuation">(</span>pool<span class="token punctuation">,</span> toTransform<span class="token punctuation">,</span> outWidth<span class="token punctuation">,</span> outHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">roundCrop</span><span class="token punctuation">(</span>pool<span class="token punctuation">,</span> bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码中使用：</p><pre class="line-numbers language-java"><code class="language-java">        RequestOptions myOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GlideRoundImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>myOptions<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>mIv_img<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>附上矩形圆角的代码: <a href="https://github.com/wildma/GlideRoundImage" target="_blank" rel="noopener">https://github.com/wildma/GlideRoundImage</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Glide </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 一步一步教你集成高德地图</title>
      <link href="/gaode-map-integrate/"/>
      <url>/gaode-map-integrate/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>当项目中需要使用地图SDK的时候, 是选择高德地图还是百度地图呢?从对开发者友好角度，从容易上手角度：高德完胜百度! 所以我们公司的项目也选择了高德地图。好了！下面就开始高德地图的集成吧！</strong></p><h2 id="一、账号与Key的申请"><a href="#一、账号与Key的申请" class="headerlink" title="一、账号与Key的申请"></a>一、账号与Key的申请</h2><p>注册成为高德开发者需要分三步：<br>第一步，注册高德开发者；第二步，去控制台创建应用；第三步，获取Key。<br>前2步都比较简单，这里说下第三步。</p><p><strong>获取Key：</strong><br>（1）进入控制台，创建一个新应用。如果您之前已经创建过应用，可直接跳过这个步骤。<br><img src="1.jpg" alt><br>（2） 在创建的应用上点击”添加新Key”按钮，在弹出的对话框中，依次：输入应用名名称，选择绑定的服务为“Android平台SDK”，输入发布版安全码  SHA1、调试版安全码 SHA1、以及 Package，如下图所示：<br><img src="2.jpg" alt></p><p>获取SHA1见：<a href="https://lbs.amap.com/api/android-indoorlocation-sdk/guide/create-project/get-key/?sug_index=0#sha1" target="_blank" rel="noopener">如何获取 SHA1</a></p><h2 id="二、Android-Studio-配置工程"><a href="#二、Android-Studio-配置工程" class="headerlink" title="二、Android Studio 配置工程"></a>二、Android Studio 配置工程</h2><p>配置工程前需要到官网下载高德SDK <a href="http://lbs.amap.com/api/android-sdk/download/" target="_blank" rel="noopener">下载地址</a><br>注意：这里根据项目需求选择下载，如果不需要导航，定位就用默认的即可。（这样可以大大减小包的体积）如图：<br><img src="3.jpg" alt><br>下载后会得到如图所示压缩包<br><img src="4.jpg" alt></p><p>（1）添加 jar 包<br>将下载的地图 SDK 的 jar包复制到工程的 libs 目录下，如果有老版本 jar 包在其中，请删除。如图所示：<br><img src="5.jpg" alt></p><p>（2）添加 so 库<br>说明：3D地图才需要添加so库，2D地图无需这一步骤。</p><p>在 main 目录下创建文件夹 jniLibs (如果有就不需要创建了)，将下载文件的 armeabi 文件夹复制到这个目录下,如果已经有这个目录，将下载的 so 库复制到这个目录即可。如图所示：<br><img src="6.jpg" alt></p><p>（3）在清单文件中配置高德 Key：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>application         android<span class="token operator">:</span>icon<span class="token operator">=</span><span class="token string">"@drawable/icon"</span>         android<span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"@string/app_name"</span> <span class="token operator">></span>         <span class="token operator">&lt;</span>meta<span class="token operator">-</span>data            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.amap.api.v2.apikey"</span>            android<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"请输入您的用户Key"</span><span class="token operator">/</span><span class="token operator">></span>            ……<span class="token operator">&lt;</span><span class="token operator">/</span>application<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）在清单文件中配置权限：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>允许程序打开网络套接字<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.INTERNET"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>允许程序设置内置sd卡的写权限<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>允许程序获取网络状态<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_NETWORK_STATE"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>允许程序访问WiFi网络信息<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_WIFI_STATE"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>允许程序读写手机状态和身份<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>用于进行网络定位<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_COARSE_LOCATION"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>用于访问GPS定位<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_FINE_LOCATION"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>用于获取wifi的获取权限，wifi信息会用来进行网络定位<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.CHANGE_WIFI_STATE"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>用于读取手机当前的状态<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.READ_PHONE_STATE"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>用于申请调用A<span class="token operator">-</span>GPS模块<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>uses<span class="token operator">-</span>permission<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、验证"><a href="#三、验证" class="headerlink" title="三、验证"></a>三、验证</h2><p>好了！到这里高德地图集成就全部完成了！接下来验证我们集成的是否正确！<br>（1）首先在布局xml文件中添加地图控件：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>com<span class="token punctuation">.</span>amap<span class="token punctuation">.</span>api<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>MapView    android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/map"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>com<span class="token punctuation">.</span>amap<span class="token punctuation">.</span>api<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>MapView<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）在activity的onCreate（）方法中添加如下代码就能看到高德地图了！</p><pre class="line-numbers language-java"><code class="language-java">MapView mapView <span class="token operator">=</span> <span class="token punctuation">(</span>MapView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//找到地图控件</span><span class="token comment" spellcheck="true">//在activity执行onCreate时执行mMapView.onCreate(savedInstanceState)，创建地图</span>mapView<span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>AMap aMap <span class="token operator">=</span> mapView<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化地图控制器对象</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="7.jpg" alt></p><p><strong>大功告成！集成高德地图就是这么简单！</strong><br><strong>如果对你有帮助点个赞支持下吧！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 第三方集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高德地图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dagger2 使用——结合 MVP 模式讲解</title>
      <link href="/dagger2/"/>
      <url>/dagger2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新：根据Dagger2官方最新配置，现在配置已经不需要添加android-apt插件了，所以配置更简单了。即在下文中说的Dagger2配置的第一步与第二步都可以省略了，第三步直接改成以下即可）。</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/*dagger2的配置*/</span>    annotationProcessor <span class="token string">'com.google.dagger:dagger-compiler:2.4'</span>    compile <span class="token string">'com.google.dagger:dagger:2.4'</span>    compile <span class="token string">'org.glassfish:javax.annotation:10.0-b28'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>相信大部分人在使用mvp模式的时候都会同时用到Dagger2框架，因为Dagger2能非常完美的解决mvp模式中存在的V层与P层之间的耦合。所以下面介绍Dagger2的使用也会结合我上一篇文章中的mvp模式来讲解，还没看上一篇文章的可以先去看看—— <a href="https://wildma.github.io/mvc-mvp/">带你通俗易懂的理解——Android中的MVC与MVP</a>。</p><h2 id="一、Dagger2是什么？"><a href="#一、Dagger2是什么？" class="headerlink" title="一、Dagger2是什么？"></a>一、Dagger2是什么？</h2><p>Dagger2是一个在Android 和 Java中使用的依赖注入框架，现在由Google维护，是基于Dagger的基础上开发的，Dagger是由square开发的。Dagger2最大的作用就是解耦，例如ClassA中需要用到ClassB中的某个方法，但是又不想在ClassA中通过new的方式实例化ClassB，这时候Dagger2就很好的解决了这个问题，Dagger2可以在ClassA中通过依赖注入的方式实例化ClassB，从而达到ClassA与ClassB的解耦。</p><h2 id="二、Dagger2配置"><a href="#二、Dagger2配置" class="headerlink" title="二、Dagger2配置"></a>二、Dagger2配置</h2><p>（1）在项目的build.gradle中添加android-apt插件</p><pre class="line-numbers language-java"><code class="language-java">buildscript <span class="token punctuation">{</span>    repositories <span class="token punctuation">{</span>        <span class="token function">jcenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    dependencies <span class="token punctuation">{</span>        classpath <span class="token string">'com.android.tools.build:gradle:2.2.3'</span>        <span class="token comment" spellcheck="true">//android-apt 插件</span>        classpath <span class="token string">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）在app的build.gradle中添加apt插件的使用</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//apt插件的使用</span>apply plugin<span class="token operator">:</span> <span class="token string">'com.neenbedankt.android-apt'</span>android <span class="token punctuation">{</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>dependencies <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）在app的build.gradle中添加Dagger2的依赖</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>android <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>dependencies <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//dagger2的配置</span>    compile <span class="token string">'com.google.dagger:dagger:2.4'</span>    apt <span class="token string">'com.google.dagger:dagger-compiler:2.4'</span>    compile <span class="token string">'org.glassfish:javax.annotation:10.0-b28'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、Dagger2使用"><a href="#三、Dagger2使用" class="headerlink" title="三、Dagger2使用"></a>三、Dagger2使用</h2><p>经过上面的配置就可以在项目中使用Dagger2了，这里举的例子是基于我上篇mvp文章的基础上的，还没看上一篇文章的可以先去看看—— <a href="https://wildma.github.io/mvc-mvp/">带你通俗易懂的理解——Android中的MVC与MVP</a>。该Demo中V层中的Activity如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">UserInfoView</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> TextView    mTvName<span class="token punctuation">;</span>    <span class="token keyword">private</span> ProgressBar mPbLoading<span class="token punctuation">;</span>    UserInfoPresenter mUserInfoPresenter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//find view</span>        mTvName <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_name<span class="token punctuation">)</span><span class="token punctuation">;</span>        mPbLoading <span class="token operator">=</span> <span class="token punctuation">(</span>ProgressBar<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>pb_loading<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//init</span>        mUserInfoPresenter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserInfoPresenter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也就是Activity中使用new的方式实例化Presenter，这样就导致V层与P层耦合了，所以下面我就使用Dagger2将它们解耦。</p><p>先看看几个注解的概念：</p><ul><li><p>Module：在这里实例化目标类（例子中就是UserInfoActivity类）需要依赖的对象。</p></li><li><p>Provides：标注一个方法，该方法是用来提供实例化对象给目标类的。</p></li><li><p>Inject：标注实例化对象</p></li><li><p>Component：作为Module与目标类之间的桥梁。</p></li></ul><p>使用步骤：<br>（1）创建带有@Module注解的类，并利用@Provides标注一个方法用来提供实例化对象给目标类。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Module</span> <span class="token comment" spellcheck="true">//实例化目标类需要依赖的对象</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoActivityModule</span> <span class="token punctuation">{</span>    UserInfoActivity mActivity<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">UserInfoActivityModule</span><span class="token punctuation">(</span>UserInfoActivity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>        mActivity <span class="token operator">=</span> activity<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Provides</span> <span class="token comment" spellcheck="true">//该方法是用来提供实例化对象给目标类的</span>    UserInfoPresenter <span class="token function">provideUserInfoPresenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserInfoPresenter</span><span class="token punctuation">(</span>mActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）创建带有@Component的接口，将它作为Module与目标类之间的桥梁。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>modules <span class="token operator">=</span> UserInfoActivityModule<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//作为Module与目标类之间的桥梁</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserInfoActivityComponent</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 定义注入的方法     * @param activity     */</span>    <span class="token keyword">void</span> <span class="token function">inject</span><span class="token punctuation">(</span>UserInfoActivity activity<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）标注实例化对象，并将Module与目标类联系起来。<br>注意：DaggerUserInfoActivityComponent是Rebuild项目后根据定义的Component的类名自动生成的，所以这里先要Rebuild一下项目再使用。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">UserInfoView</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Inject</span> <span class="token comment" spellcheck="true">//标注实例化对象</span>    UserInfoPresenter mUserInfoPresenter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token comment" spellcheck="true">//将Module与目标类联系起来</span>        DaggerUserInfoActivityComponent                <span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">userInfoActivityModule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserInfoActivityModule</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的三步其实就只实现了UserInfoActivityModule = new UserInfoActivityModule(this)，看起来是复杂了许多，但是它非常完美的解决了mvp模式中存在的V层与P层之间的耦合。就好比使用mvp比使用mvc多了很多代码，但大家还是会使用mvp模式一样的道理。</p><p>Demo地址：<a href="https://github.com/wildma/MVP-Pattern" target="_blank" rel="noopener">MVP-Pattern</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dagger2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>带你通俗易懂的理解——Android 中的 MVC 与 MVP</title>
      <link href="/mvc-mvp/"/>
      <url>/mvc-mvp/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先介绍一下所谓的MVP，美国职业篮球联赛最有价值球员奖（National Basketball Association Most Valuable Player Award ，简称MVP）是一个自1955-1956赛季以来每年对美国职业篮球联赛（NBA）常规赛中全场表现最佳的球员所颁发的一个奖项。<br><img src="1.jpg" alt></p><p>哎呀！不好意思，讲错了！<br>言归正传，作为一个Android攻城狮（虽然也是一位篮球爱好者），这里要介绍的MVP当然是一种软件设计模式啦！下面进入正题！</p><h2 id="一、MVC"><a href="#一、MVC" class="headerlink" title="一、MVC"></a>一、MVC</h2><ul><li><p><strong>概念</strong>：MVC全称为Model-View-Controller，也就是 模型-视图-控制器。是最常见的一种软件设计模式。<br>Model：对应Android中的数据实体模型、数据访问接口、数据库操作等，用于存取数据和处理业务逻辑。<br>View：对应Android中的布局文件，用来展示UI。<br>Controller：对应Android中的Activity、Fragment等，用于更新UI界面与数据。</p></li><li><p><strong>它们之间的关系图如下</strong>：<br><img src="2.jpg" alt></p></li></ul><p>MVC的工作原理是用户在View层触发事件，Controller层接收到View层的事件后就会更新Model层数据，Model层数据改变后就通知Controller层更新UI。（View层也可以直接更新Model层的数据）</p><p>从MVC的关系图与工作原理可知，View层一般只能显示静态的布局，例如想动态的去隐藏或者显示某个UI都要Activity去操作，而Activity是属于Controller层的，这样就造成了Activity既像View又像Controller，而且View层和Model层是相互耦合的。所以我们在使用MVC写比较复杂的界面的时候，Activity中上千行代码是常有的事。随之带来的就是测试与维护的困难。当你入职新公司接手一个这样的MVC项目就能体会到这种痛苦了。所以也就有了之后的MVP、MVVM。</p><h2 id="二、MVP"><a href="#二、MVP" class="headerlink" title="二、MVP"></a>二、MVP</h2><ul><li><p><strong>概念</strong>：MVP全称为Model-View-Presenter，也就是 模型-视图-表示器。是MVC模式的演化版。<br>Model：与MVC一样，对应Android中的数据实体模型、数据访问接口、数据库操作等，用于存取数据和处理业务逻辑。<br>View：对应Android中的Activity、Fragment等，用来展示UI、与用户进行交互。<br>Presenter：充当Model和View之间的桥梁，负责它们之间的交互。</p></li><li><p><strong>它们之间的关系图如下</strong>：<br><img src="3.jpg" alt></p></li></ul><p>由上图可以明显的看到Model与View之间的交互由Presenter完成，即View与Model是完全解耦的。而View与Presenter的交互也不是直接交互的，而是通过接口来完成。随之带来的好处：</p><ul><li>解耦了Model与View，简化了Activity中的代码，方便维护。</li><li>将复杂的逻辑代码提取到了Presenter中，方便单元测试。</li></ul><h2 id="三、实践出真理"><a href="#三、实践出真理" class="headerlink" title="三、实践出真理"></a>三、实践出真理</h2><p>好了，说了这么多，相信大部分人还是一脸懵逼！那就让我来举个例子吧！保证能让你通俗易懂的理解MVC与MVP。<br><img src="4.jpg" alt></p><p>举得例子非常简单，主要为了让大家更容易理解。<br>点击按钮，发起网络请求获取用户信息，然后直接显示在界面。效果图如下：<br><img src="5.gif" alt></p><h3 id="3-1-MVC-代码实现"><a href="#3-1-MVC-代码实现" class="headerlink" title="3.1 MVC 代码实现"></a>3.1 MVC 代码实现</h3><p>工程结构图如下：<br><img src="6.png" alt></p><h4 id="3-1-1-Model层"><a href="#3-1-1-Model层" class="headerlink" title="3.1.1 Model层"></a>3.1.1 Model层</h4><ul><li><p><strong>UserInfobean：</strong> 数据实体模型，也就是网络请求回来的数据存储到这里。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfobean</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> String name<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用户昵称</span>  <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> name<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>RequestBiz：</strong> 请求业务接口，里面只有一个请求数据的方法。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RequestBiz</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**   * 请求数据   *   * @param listener 成功或失败的回调接口   */</span>  <span class="token keyword">void</span> <span class="token function">requestData</span><span class="token punctuation">(</span>OnRequestListener listener<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>RequestBizIml：</strong> 请求业务接口的实现类，里面业务主要是开启子线程休眠2秒来模拟网络请求，请求成功后填充数据到UserInfobean，并通过接口将成功或失败回调出去。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestBizIml</span> <span class="token keyword">implements</span> <span class="token class-name">RequestBiz</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token keyword">final</span> OnRequestListener listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">/**       * 开启子线程休眠2秒来模拟网络请求，请求成功后填充数据到UserInfobean，并通过接口将成功或失败回调出去       */</span>      <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">try</span> <span class="token punctuation">{</span>                  Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  UserInfobean userInfobean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserInfobean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  userInfobean<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"wildma"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">boolean</span> isRequestSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//模拟请求是否成功</span>                  <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">!=</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>                      <span class="token keyword">if</span> <span class="token punctuation">(</span>isRequestSuccess<span class="token punctuation">)</span> <span class="token punctuation">{</span>                          listener<span class="token punctuation">.</span><span class="token function">onSuccess</span><span class="token punctuation">(</span>userInfobean<span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                          listener<span class="token punctuation">.</span><span class="token function">onFailed</span><span class="token punctuation">(</span><span class="token string">"服务器繁忙，请稍后再试！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>OnRequestListener：</strong> 请求成功或失败的回调接口。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OnRequestListener</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**   * 请求成功回调   *   * @param data 服务器返回的数据   */</span>  <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span>Object data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * 请求失败回调   *   * @param failReason 失败原因   */</span>  <span class="token keyword">void</span> <span class="token function">onFailed</span><span class="token punctuation">(</span>String failReason<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-1-2-View层"><a href="#3-1-2-View层" class="headerlink" title="3.1.2 View层"></a>3.1.2 View层</h4><p>就是布局文件activity_main，很简单，一个Button用来获取网络数据，一个TextView用来显示数据，一个ProgressBar是加载等待圈。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>RelativeLayout  android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/activity_main"</span>  xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>  xmlns<span class="token operator">:</span>tools<span class="token operator">=</span><span class="token string">"http://schemas.android.com/tools"</span>  android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>  android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>  android<span class="token operator">:</span>paddingBottom<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span>  android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>  android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"@dimen/activity_horizontal_margin"</span>  android<span class="token operator">:</span>paddingTop<span class="token operator">=</span><span class="token string">"@dimen/activity_vertical_margin"</span>  tools<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">"com.wildma.mvc.UserInfoActivity"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>Button      android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/btn_get_data"</span>      android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>      android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>      android<span class="token operator">:</span>layout_centerHorizontal<span class="token operator">=</span><span class="token string">"true"</span>      android<span class="token operator">:</span>onClick<span class="token operator">=</span><span class="token string">"getData"</span>      android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"模拟网络请求数据"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>TextView      android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tv_name"</span>      android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>      android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>      android<span class="token operator">:</span>layout_below<span class="token operator">=</span><span class="token string">"@id/btn_get_data"</span>      android<span class="token operator">:</span>layout_centerHorizontal<span class="token operator">=</span><span class="token string">"true"</span>      android<span class="token operator">:</span>layout_marginTop<span class="token operator">=</span><span class="token string">"12dp"</span>      android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"我的昵称是："</span>      android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"25sp"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>ProgressBar      android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/pb_loading"</span>      android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"60dp"</span>      android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"60dp"</span>      android<span class="token operator">:</span>layout_centerInParent<span class="token operator">=</span><span class="token string">"true"</span>      android<span class="token operator">:</span>visibility<span class="token operator">=</span><span class="token string">"gone"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>RelativeLayout<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="3-1-3-Controller层"><a href="#3-1-3-Controller层" class="headerlink" title="3.1.3 Controller层"></a>3.1.3 Controller层</h4><p>Controller层对应UserInfoActivity，也是非常简单，主要是界面的初始化，点击按钮请求数据，请求到数据后更新界面。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> TextView      mTvName<span class="token punctuation">;</span>    <span class="token keyword">private</span> RequestBizIml mRequestBizIml<span class="token punctuation">;</span>    <span class="token keyword">private</span> ProgressBar   mPbLoading<span class="token punctuation">;</span>    <span class="token keyword">private</span> Handler       mHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//find view</span>        mTvName <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_name<span class="token punctuation">)</span><span class="token punctuation">;</span>        mPbLoading <span class="token operator">=</span> <span class="token punctuation">(</span>ProgressBar<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>pb_loading<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//init</span>        mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mRequestBizIml <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestBizIml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取数据按钮点击事件     *     * @param view     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getData</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 请求数据     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        mPbLoading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>        mRequestBizIml<span class="token punctuation">.</span><span class="token function">requestData</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OnRequestListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token keyword">final</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//因为请求开启了子线程，所以这里需要用UI线程去更新界面</span>                mHandler<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        mPbLoading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>                        UserInfobean userInfobean <span class="token operator">=</span> <span class="token punctuation">(</span>UserInfobean<span class="token punctuation">)</span> data<span class="token punctuation">;</span>                        mTvName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"我的昵称是："</span> <span class="token operator">+</span> userInfobean<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailed</span><span class="token punctuation">(</span><span class="token keyword">final</span> String failReason<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//因为请求开启了子线程，所以这里需要用UI线程去更新界面</span>                mHandler<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        mPbLoading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>                        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> failReason<span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看完MVC的代码，相信你也发现了，ProgressBar的隐藏与显示，TextView显示用户的昵称这些逻辑其实都是属于View层的，但是都写在了Activity里面了，这就像我在前面说的Activity既像View又像Controller。复杂点的界面就造成Activity过于臃肿。</p><h3 id="3-2-MVP-代码实现"><a href="#3-2-MVP-代码实现" class="headerlink" title="3.2 MVP 代码实现"></a>3.2 MVP 代码实现</h3><p>工程结构图如下：<br><img src="7.png" alt></p><p>由结构图可知MVP就比MVC多了UserInfoPresenter与UserInfoView。</p><h4 id="3-2-1-Model层"><a href="#3-2-1-Model层" class="headerlink" title="3.2.1 Model层"></a>3.2.1 Model层</h4><p>前面说了，MVP中的Model层与MVC是一样的。所以代码也是一样的。这里就不列出来了，可以看上面的。</p><h4 id="3-2-2-View层"><a href="#3-2-2-View层" class="headerlink" title="3.2.2 View层"></a>3.2.2 View层</h4><p>MVP中的VIew层对应UserInfoActivity，但它不是直接与Presenter交互的，他们之间的交互是通过接口来实现的。所以这里需要先写一个接口，然后再让UserInfoActivity实现该接口。</p><ul><li><p><strong>UserInfoView：</strong> UserInfoActivity需要实现的接口，在这个接口我们就要定义UserInfoActivity需要实现的方法，分析UI图可知，我们这里需要如下几个方法：<br>showLoading：显示加载圈<br>hideLoading：隐藏加载圈<br>showName：显示昵称<br>showFailReason：显示失败原因<br>完整代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserInfoView</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**   * 显示加载圈   */</span>  <span class="token keyword">void</span> <span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * 隐藏加载圈   */</span>  <span class="token keyword">void</span> <span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * 显示昵称   *   * @param name 昵称   */</span>  <span class="token keyword">void</span> <span class="token function">showName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * 显示失败原因   *   * @param failReason 失败原因   */</span>  <span class="token keyword">void</span> <span class="token function">showFailReason</span><span class="token punctuation">(</span>String failReason<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>UserInfoActivity：</strong> UserInfoView的实现类，主要就是实现UserInfoView的方法做出相应的UI变化。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">UserInfoView</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> TextView          mTvName<span class="token punctuation">;</span>  <span class="token keyword">private</span> ProgressBar       mPbLoading<span class="token punctuation">;</span>  <span class="token keyword">private</span> UserInfoPresenter mUserInfoPresenter<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//find view</span>      mTvName <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_name<span class="token punctuation">)</span><span class="token punctuation">;</span>      mPbLoading <span class="token operator">=</span> <span class="token punctuation">(</span>ProgressBar<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>pb_loading<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//init</span>      mUserInfoPresenter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserInfoPresenter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * 获取数据按钮点击事件   *   * @param view   */</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getData</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>      mUserInfoPresenter<span class="token punctuation">.</span><span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      mPbLoading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      mPbLoading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>      mTvName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showFailReason</span><span class="token punctuation">(</span>String failReason<span class="token punctuation">)</span> <span class="token punctuation">{</span>      Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> failReason<span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，整个UserInfoActivity都没有涉及到Model层，而是通过UserInfoPresenter来间接交互。</p></li></ul><h4 id="3-2-3-Presenter层"><a href="#3-2-3-Presenter层" class="headerlink" title="3.2.3 Presenter层"></a>3.2.3 Presenter层</h4><ul><li><p><strong>UserInfoPresenter：</strong> UserInfoPresenter里的代码也就是MVC中Activity涉及到Model层相关的逻辑代码。因为Presenter充当Model和View之间的桥梁，所以需要在合适的时机调用UserInfoView接口对应的方法。又由于我们的Activity实现了这个接口，所以在UserInfoPresenter中调用UserInfoView中方法的同时，Activity中对应的方法也会执行。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoPresenter</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> UserInfoView mUserInfoView<span class="token punctuation">;</span>  <span class="token keyword">private</span> RequestBiz   requestBiz<span class="token punctuation">;</span>  <span class="token keyword">private</span> Handler      mHandler<span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token function">UserInfoPresenter</span><span class="token punctuation">(</span>UserInfoView userInfoView<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>mUserInfoView <span class="token operator">=</span> userInfoView<span class="token punctuation">;</span>      requestBiz <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestBizIml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span>Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * 请求数据   */</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      mUserInfoView<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      requestBiz<span class="token punctuation">.</span><span class="token function">requestData</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OnRequestListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token keyword">final</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">//因为请求开启了子线程，所以这里需要用UI线程去更新界面</span>              mHandler<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token annotation punctuation">@Override</span>                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      mUserInfoView<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      UserInfobean userInfobean <span class="token operator">=</span> <span class="token punctuation">(</span>UserInfobean<span class="token punctuation">)</span> data<span class="token punctuation">;</span>                      mUserInfoView<span class="token punctuation">.</span><span class="token function">showName</span><span class="token punctuation">(</span><span class="token string">"我的昵称是："</span> <span class="token operator">+</span> userInfobean<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailed</span><span class="token punctuation">(</span><span class="token keyword">final</span> String failReason<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">//因为请求开启了子线程，所以这里需要用UI线程去更新界面</span>              mHandler<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token annotation punctuation">@Override</span>                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      mUserInfoView<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      mUserInfoView<span class="token punctuation">.</span><span class="token function">showFailReason</span><span class="token punctuation">(</span>failReason<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>看了MVP的代码，是不是觉得Activity特别简洁明了！整个Activity没有任何地方涉及到Model层相关的代码，这样就达到了Model与View层解耦的目的。而且将复杂的逻辑代码提取到了Presenter中，方便进行单元测试。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>OK，MVC与MVP的讲解就到这里，看完上面的讲解能让你恍然大悟的请在文章下面点个赞，还是一脸懵逼的。。。不要来打我！再看多一遍呗~</p><p>Demo地址：<a href="https://github.com/wildma/MVP-Pattern" target="_blank" rel="noopener">MVP-Pattern</a></p><p>参考资料：<br><a href="http://konmik.com/post/introduction_to_model_view_presenter_on_android/" target="_blank" rel="noopener">http://konmik.com/post/introduction_to_model_view_presenter_on_android/</a><br><a href="http://blog.csdn.net/lmj623565791/article/details/46596109" target="_blank" rel="noopener">http://blog.csdn.net/lmj623565791/article/details/46596109</a><br><a href="http://www.jianshu.com/p/9a6845b26856" target="_blank" rel="noopener">http://www.jianshu.com/p/9a6845b26856</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> MVC </tag>
            
            <tag> MVP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
